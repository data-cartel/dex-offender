// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract MagicNum {
    address public solver;

    constructor() {}

    function setSolver(address _solver) public {
        solver = _solver;
    }

    /*
    ____________/\\\_______/\\\\\\\\\_____
     __________/\\\\\_____/\\\///////\\\___
      ________/\\\/\\\____\///______\//\\\__
       ______/\\\/\/\\\______________/\\\/___
        ____/\\\/__\/\\\___________/\\\//_____
         __/\\\\\\\\\\\\\\\\_____/\\\//________
          _\///////////\\\//____/\\\/___________
           ___________\/\\\_____/\\\\\\\\\\\\\\\_
            ___________\///_____\///////////////__
    */
}

contract N {
    //function whatIsTheMeaningOfLife() public returns(uint){
    //   return 42;
    //   заменяем на ассемблер
    //      assembly {
    //        mstore(0x00, 0x2a) // 42 в нулевой ячейке памяти
    //        return(0x00, 0x20) // возвращает из нулевой ячейки памяти хуйню длинны 0x20 (тридцать два)
    //    }
    //}
    // 0x60 -- пушит в память
    // 0x52 -- запоминает в память
    // 0xF3 -- ретёрн, ёпта
    //
    // 0x602a -- пушу 42 в память
    // 0x6000 -- пушу место в памяти
    // 0x52 -- запоминаю эту команду
    // 0x6020 -- пушу размер куска памяти c числом (32)
    // 0x6000 -- пушу место в памяти (0)
    // 0xF3 -- возвращаю все это
    // 0x602a60005260206000f3 -- итог (ровно 10 байт, ёпта)
    //
    constructor() {
        assembly {
            mstore(0x00, 0x602a60005260206000f3) // пушу всю команду в память
            return(0x00, 0x0a) //возвращаю команду
        }
    }
}
