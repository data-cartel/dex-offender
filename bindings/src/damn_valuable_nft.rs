pub use damn_valuable_nft::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod damn_valuable_nft {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"NewOwnerIsZeroAddress\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"NoHandoverRequest\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"Unauthorized\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"Approval\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"ApprovalForAll\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"OwnershipHandoverCanceled\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"OwnershipHandoverRequested\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"roles\",\"type\":\"uint256\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RolesUpdated\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"Transfer\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"approve\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"burn\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"cancelOwnershipHandover\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"completeOwnershipHandover\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"roles\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"grantRoles\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"roles\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"hasAllRoles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"roles\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"hasAnyRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roles\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"ordinalsFromRoles\",\"outputs\":[{\"internalType\":\"uint8[]\",\"name\":\"ordinals\",\"type\":\"uint8[]\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"result\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"ownershipHandoverExpiresAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"ownershipHandoverValidFor\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"renounceOwnership\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roles\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"renounceRoles\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"requestOwnershipHandover\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"roles\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"revokeRoles\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"ordinals\",\"type\":\"uint8[]\",\"components\":[]}],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"rolesFromOrdinals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roles\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"rolesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roles\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"safeTransferFrom\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"safeTransferFrom\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setApprovalForAll\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"tokenIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transferFrom\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"transferOwnership\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static DAMNVALUABLENFT_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> = ::ethers::contract::Lazy::new(||
    ::ethers::core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid"));
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        98,
        0,
        0,
        17,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        81,
        128,
        96,
        64,
        1,
        96,
        64,
        82,
        128,
        96,
        15,
        129,
        82,
        96,
        32,
        1,
        110,
        17,
        24,
        91,
        91,
        149,
        152,
        91,
        29,
        88,
        88,
        155,
        25,
        83,
        145,
        149,
        96,
        138,
        27,
        129,
        82,
        80,
        96,
        64,
        81,
        128,
        96,
        64,
        1,
        96,
        64,
        82,
        128,
        96,
        5,
        129,
        82,
        96,
        32,
        1,
        100,
        17,
        21,
        147,
        145,
        149,
        96,
        218,
        27,
        129,
        82,
        80,
        129,
        96,
        0,
        144,
        129,
        98,
        0,
        0,
        105,
        145,
        144,
        98,
        0,
        1,
        203,
        86,
        91,
        80,
        96,
        1,
        98,
        0,
        0,
        120,
        130,
        130,
        98,
        0,
        1,
        203,
        86,
        91,
        80,
        80,
        80,
        98,
        0,
        0,
        140,
        51,
        98,
        0,
        0,
        159,
        96,
        32,
        27,
        96,
        32,
        28,
        86,
        91,
        98,
        0,
        0,
        153,
        51,
        96,
        1,
        98,
        0,
        0,
        219,
        86,
        91,
        98,
        0,
        2,
        151,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        139,
        120,
        198,
        216,
        25,
        129,
        144,
        85,
        128,
        96,
        0,
        127,
        139,
        224,
        7,
        156,
        83,
        22,
        89,
        20,
        19,
        68,
        205,
        31,
        208,
        164,
        242,
        132,
        25,
        73,
        127,
        151,
        34,
        163,
        218,
        175,
        227,
        180,
        24,
        111,
        107,
        100,
        87,
        224,
        129,
        128,
        163,
        80,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        96,
        12,
        82,
        129,
        96,
        0,
        82,
        96,
        32,
        96,
        12,
        32,
        129,
        129,
        84,
        23,
        145,
        80,
        129,
        129,
        85,
        80,
        128,
        96,
        12,
        81,
        96,
        96,
        28,
        127,
        113,
        90,
        213,
        206,
        97,
        252,
        149,
        149,
        199,
        180,
        21,
        40,
        157,
        89,
        207,
        32,
        63,
        35,
        169,
        79,
        160,
        111,
        4,
        175,
        126,
        72,
        154,
        10,
        118,
        225,
        254,
        38,
        96,
        0,
        128,
        163,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        1,
        129,
        129,
        28,
        144,
        130,
        22,
        128,
        98,
        0,
        1,
        81,
        87,
        96,
        127,
        130,
        22,
        145,
        80,
        91,
        96,
        32,
        130,
        16,
        129,
        3,
        98,
        0,
        1,
        114,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        34,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        145,
        144,
        80,
        86,
        91,
        96,
        31,
        130,
        17,
        21,
        98,
        0,
        1,
        198,
        87,
        96,
        0,
        129,
        129,
        82,
        96,
        32,
        129,
        32,
        96,
        31,
        133,
        1,
        96,
        5,
        28,
        129,
        1,
        96,
        32,
        134,
        16,
        21,
        98,
        0,
        1,
        161,
        87,
        80,
        128,
        91,
        96,
        31,
        133,
        1,
        96,
        5,
        28,
        130,
        1,
        145,
        80,
        91,
        129,
        129,
        16,
        21,
        98,
        0,
        1,
        194,
        87,
        130,
        129,
        85,
        96,
        1,
        1,
        98,
        0,
        1,
        173,
        86,
        91,
        80,
        80,
        80,
        91,
        80,
        80,
        80,
        86,
        91,
        129,
        81,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        129,
        17,
        21,
        98,
        0,
        1,
        231,
        87,
        98,
        0,
        1,
        231,
        98,
        0,
        1,
        38,
        86,
        91,
        98,
        0,
        1,
        255,
        129,
        98,
        0,
        1,
        248,
        132,
        84,
        98,
        0,
        1,
        60,
        86,
        91,
        132,
        98,
        0,
        1,
        120,
        86,
        91,
        96,
        32,
        128,
        96,
        31,
        131,
        17,
        96,
        1,
        129,
        20,
        98,
        0,
        2,
        55,
        87,
        96,
        0,
        132,
        21,
        98,
        0,
        2,
        30,
        87,
        80,
        133,
        131,
        1,
        81,
        91,
        96,
        0,
        25,
        96,
        3,
        134,
        144,
        27,
        28,
        25,
        22,
        96,
        1,
        133,
        144,
        27,
        23,
        133,
        85,
        98,
        0,
        1,
        194,
        86,
        91,
        96,
        0,
        133,
        129,
        82,
        96,
        32,
        129,
        32,
        96,
        31,
        25,
        134,
        22,
        145,
        91,
        130,
        129,
        16,
        21,
        98,
        0,
        2,
        104,
        87,
        136,
        134,
        1,
        81,
        130,
        85,
        148,
        132,
        1,
        148,
        96,
        1,
        144,
        145,
        1,
        144,
        132,
        1,
        98,
        0,
        2,
        71,
        86,
        91,
        80,
        133,
        130,
        16,
        21,
        98,
        0,
        2,
        135,
        87,
        135,
        133,
        1,
        81,
        96,
        0,
        25,
        96,
        3,
        136,
        144,
        27,
        96,
        248,
        22,
        28,
        25,
        22,
        129,
        85,
        91,
        80,
        80,
        80,
        80,
        80,
        96,
        1,
        144,
        129,
        27,
        1,
        144,
        85,
        80,
        86,
        91,
        97,
        27,
        170,
        128,
        98,
        0,
        2,
        167,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        97,
        1,
        238,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        84,
        209,
        241,
        61,
        17,
        97,
        1,
        13,
        87,
        128,
        99,
        162,
        44,
        180,
        101,
        17,
        97,
        0,
        160,
        87,
        128,
        99,
        215,
        83,
        63,
        2,
        17,
        97,
        0,
        111,
        87,
        128,
        99,
        215,
        83,
        63,
        2,
        20,
        97,
        5,
        106,
        87,
        128,
        99,
        233,
        133,
        233,
        197,
        20,
        97,
        5,
        136,
        87,
        128,
        99,
        240,
        78,
        40,
        62,
        20,
        97,
        5,
        209,
        87,
        128,
        99,
        242,
        253,
        227,
        139,
        20,
        97,
        5,
        228,
        87,
        128,
        99,
        254,
        232,
        28,
        244,
        20,
        97,
        5,
        247,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        162,
        44,
        180,
        101,
        20,
        97,
        4,
        245,
        87,
        128,
        99,
        184,
        141,
        79,
        222,
        20,
        97,
        5,
        21,
        87,
        128,
        99,
        200,
        123,
        86,
        221,
        20,
        97,
        5,
        53,
        87,
        128,
        99,
        213,
        57,
        19,
        147,
        20,
        97,
        5,
        85,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        115,
        89,
        228,
        31,
        17,
        97,
        0,
        220,
        87,
        128,
        99,
        115,
        89,
        228,
        31,
        20,
        97,
        4,
        132,
        87,
        128,
        99,
        141,
        165,
        203,
        91,
        20,
        97,
        4,
        177,
        87,
        128,
        99,
        149,
        216,
        155,
        65,
        20,
        97,
        4,
        202,
        87,
        128,
        99,
        152,
        189,
        246,
        245,
        20,
        97,
        4,
        223,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        84,
        209,
        241,
        61,
        20,
        97,
        4,
        52,
        87,
        128,
        99,
        99,
        82,
        33,
        30,
        20,
        97,
        4,
        60,
        87,
        128,
        99,
        112,
        160,
        130,
        49,
        20,
        97,
        4,
        92,
        87,
        128,
        99,
        113,
        80,
        24,
        166,
        20,
        97,
        4,
        124,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        35,
        184,
        114,
        221,
        17,
        97,
        1,
        133,
        87,
        128,
        99,
        66,
        132,
        46,
        14,
        17,
        97,
        1,
        84,
        87,
        128,
        99,
        66,
        132,
        46,
        14,
        20,
        97,
        3,
        170,
        87,
        128,
        99,
        66,
        150,
        108,
        104,
        20,
        97,
        3,
        202,
        87,
        128,
        99,
        74,
        78,
        231,
        177,
        20,
        97,
        3,
        234,
        87,
        128,
        99,
        81,
        78,
        98,
        252,
        20,
        97,
        3,
        253,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        35,
        184,
        114,
        221,
        20,
        97,
        3,
        47,
        87,
        128,
        99,
        37,
        105,
        41,
        98,
        20,
        97,
        3,
        79,
        87,
        128,
        99,
        45,
        233,
        72,
        7,
        20,
        97,
        3,
        87,
        87,
        128,
        99,
        64,
        208,
        151,
        195,
        20,
        97,
        3,
        138,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        19,
        166,
        97,
        237,
        17,
        97,
        1,
        193,
        87,
        128,
        99,
        19,
        166,
        97,
        237,
        20,
        97,
        2,
        164,
        87,
        128,
        99,
        24,
        58,
        79,
        110,
        20,
        97,
        2,
        210,
        87,
        128,
        99,
        28,
        16,
        137,
        63,
        20,
        97,
        2,
        229,
        87,
        128,
        99,
        28,
        214,
        77,
        244,
        20,
        97,
        2,
        248,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        1,
        255,
        201,
        167,
        20,
        97,
        1,
        243,
        87,
        128,
        99,
        6,
        253,
        222,
        3,
        20,
        97,
        2,
        40,
        87,
        128,
        99,
        8,
        24,
        18,
        252,
        20,
        97,
        2,
        74,
        87,
        128,
        99,
        9,
        94,
        167,
        179,
        20,
        97,
        2,
        130,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        52,
        128,
        21,
        97,
        1,
        255,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        19,
        97,
        2,
        14,
        54,
        96,
        4,
        97,
        22,
        0,
        86,
        91,
        97,
        6,
        42,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        52,
        128,
        21,
        97,
        2,
        52,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        61,
        97,
        6,
        124,
        86,
        91,
        96,
        64,
        81,
        97,
        2,
        31,
        145,
        144,
        97,
        22,
        109,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        86,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        106,
        97,
        2,
        101,
        54,
        96,
        4,
        97,
        22,
        128,
        86,
        91,
        97,
        7,
        14,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        31,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        142,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        162,
        97,
        2,
        157,
        54,
        96,
        4,
        97,
        22,
        181,
        86,
        91,
        97,
        7,
        53,
        86,
        91,
        0,
        91,
        52,
        128,
        21,
        97,
        2,
        176,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        97,
        2,
        191,
        54,
        96,
        4,
        97,
        23,
        38,
        86,
        91,
        97,
        8,
        79,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        31,
        86,
        91,
        97,
        2,
        162,
        97,
        2,
        224,
        54,
        96,
        4,
        97,
        22,
        128,
        86,
        91,
        97,
        8,
        120,
        86,
        91,
        97,
        2,
        162,
        97,
        2,
        243,
        54,
        96,
        4,
        97,
        22,
        181,
        86,
        91,
        97,
        8,
        133,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        4,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        19,
        97,
        3,
        19,
        54,
        96,
        4,
        97,
        22,
        181,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        96,
        12,
        144,
        129,
        82,
        96,
        0,
        146,
        144,
        146,
        82,
        96,
        32,
        144,
        145,
        32,
        84,
        129,
        22,
        20,
        144,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        59,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        162,
        97,
        3,
        74,
        54,
        96,
        4,
        97,
        23,
        223,
        86,
        91,
        97,
        8,
        155,
        86,
        91,
        97,
        2,
        162,
        97,
        8,
        205,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        99,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        97,
        3,
        114,
        54,
        96,
        4,
        97,
        24,
        27,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        96,
        12,
        144,
        129,
        82,
        96,
        0,
        145,
        144,
        145,
        82,
        96,
        32,
        144,
        32,
        84,
        144,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        150,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        97,
        3,
        165,
        54,
        96,
        4,
        97,
        24,
        27,
        86,
        91,
        97,
        9,
        29,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        182,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        162,
        97,
        3,
        197,
        54,
        96,
        4,
        97,
        23,
        223,
        86,
        91,
        97,
        9,
        83,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        214,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        162,
        97,
        3,
        229,
        54,
        96,
        4,
        97,
        22,
        128,
        86,
        91,
        97,
        9,
        110,
        86,
        91,
        97,
        2,
        162,
        97,
        3,
        248,
        54,
        96,
        4,
        97,
        22,
        181,
        86,
        91,
        97,
        9,
        156,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        9,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        19,
        97,
        4,
        24,
        54,
        96,
        4,
        97,
        22,
        181,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        96,
        12,
        144,
        129,
        82,
        96,
        0,
        146,
        144,
        146,
        82,
        96,
        32,
        144,
        145,
        32,
        84,
        22,
        21,
        21,
        144,
        86,
        91,
        97,
        2,
        162,
        97,
        9,
        174,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        72,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        106,
        97,
        4,
        87,
        54,
        96,
        4,
        97,
        22,
        128,
        86,
        91,
        97,
        9,
        234,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        104,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        97,
        4,
        119,
        54,
        96,
        4,
        97,
        24,
        27,
        86,
        91,
        97,
        10,
        74,
        86,
        91,
        97,
        2,
        162,
        97,
        10,
        208,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        144,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        4,
        164,
        97,
        4,
        159,
        54,
        96,
        4,
        97,
        22,
        128,
        86,
        91,
        97,
        10,
        228,
        86,
        91,
        96,
        64,
        81,
        97,
        2,
        31,
        145,
        144,
        97,
        24,
        54,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        189,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        99,
        139,
        120,
        198,
        216,
        25,
        84,
        97,
        2,
        106,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        214,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        61,
        97,
        11,
        29,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        235,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        96,
        6,
        84,
        129,
        86,
        91,
        52,
        128,
        21,
        97,
        5,
        1,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        162,
        97,
        5,
        16,
        54,
        96,
        4,
        97,
        24,
        125,
        86,
        91,
        97,
        11,
        44,
        86,
        91,
        52,
        128,
        21,
        97,
        5,
        33,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        162,
        97,
        5,
        48,
        54,
        96,
        4,
        97,
        24,
        185,
        86,
        91,
        97,
        11,
        55,
        86,
        91,
        52,
        128,
        21,
        97,
        5,
        65,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        61,
        97,
        5,
        80,
        54,
        96,
        4,
        97,
        22,
        128,
        86,
        91,
        97,
        11,
        111,
        86,
        91,
        52,
        128,
        21,
        97,
        5,
        97,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        96,
        1,
        129,
        86,
        91,
        52,
        128,
        21,
        97,
        5,
        118,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        81,
        98,
        2,
        163,
        0,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        31,
        86,
        91,
        52,
        128,
        21,
        97,
        5,
        148,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        19,
        97,
        5,
        163,
        54,
        96,
        4,
        97,
        25,
        121,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        145,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        147,
        144,
        148,
        22,
        130,
        82,
        145,
        144,
        145,
        82,
        32,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        97,
        2,
        162,
        97,
        5,
        223,
        54,
        96,
        4,
        97,
        24,
        27,
        86,
        91,
        97,
        11,
        227,
        86,
        91,
        97,
        2,
        162,
        97,
        5,
        242,
        54,
        96,
        4,
        97,
        24,
        27,
        86,
        91,
        97,
        12,
        32,
        86,
        91,
        52,
        128,
        21,
        97,
        6,
        3,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        97,
        6,
        18,
        54,
        96,
        4,
        97,
        24,
        27,
        86,
        91,
        99,
        56,
        154,
        117,
        225,
        96,
        12,
        144,
        129,
        82,
        96,
        0,
        145,
        144,
        145,
        82,
        96,
        32,
        144,
        32,
        84,
        144,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        128,
        172,
        88,
        205,
        96,
        224,
        27,
        20,
        128,
        97,
        6,
        91,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        91,
        94,
        19,
        159,
        96,
        224,
        27,
        20,
        91,
        128,
        97,
        6,
        118,
        87,
        80,
        99,
        1,
        255,
        201,
        167,
        96,
        224,
        27,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        131,
        22,
        20,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        96,
        96,
        0,
        128,
        84,
        97,
        6,
        139,
        144,
        97,
        25,
        172,
        86,
        91,
        128,
        96,
        31,
        1,
        96,
        32,
        128,
        145,
        4,
        2,
        96,
        32,
        1,
        96,
        64,
        81,
        144,
        129,
        1,
        96,
        64,
        82,
        128,
        146,
        145,
        144,
        129,
        129,
        82,
        96,
        32,
        1,
        130,
        128,
        84,
        97,
        6,
        183,
        144,
        97,
        25,
        172,
        86,
        91,
        128,
        21,
        97,
        7,
        4,
        87,
        128,
        96,
        31,
        16,
        97,
        6,
        217,
        87,
        97,
        1,
        0,
        128,
        131,
        84,
        4,
        2,
        131,
        82,
        145,
        96,
        32,
        1,
        145,
        97,
        7,
        4,
        86,
        91,
        130,
        1,
        145,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        144,
        91,
        129,
        84,
        129,
        82,
        144,
        96,
        1,
        1,
        144,
        96,
        32,
        1,
        128,
        131,
        17,
        97,
        6,
        231,
        87,
        130,
        144,
        3,
        96,
        31,
        22,
        130,
        1,
        145,
        91,
        80,
        80,
        80,
        80,
        80,
        144,
        80,
        144,
        86,
        91,
        96,
        0,
        97,
        7,
        25,
        130,
        97,
        12,
        71,
        86,
        91,
        80,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        144,
        86,
        91,
        96,
        0,
        97,
        7,
        64,
        130,
        97,
        9,
        234,
        86,
        91,
        144,
        80,
        128,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        3,
        97,
        7,
        178,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        33,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        97,
        112,
        112,
        114,
        111,
        118,
        97,
        108,
        32,
        116,
        111,
        32,
        99,
        117,
        114,
        114,
        101,
        110,
        116,
        32,
        111,
        119,
        110,
        101,
        96,
        68,
        130,
        1,
        82,
        96,
        57,
        96,
        249,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        20,
        128,
        97,
        7,
        206,
        87,
        80,
        97,
        7,
        206,
        129,
        51,
        97,
        5,
        163,
        86,
        91,
        97,
        8,
        64,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        61,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        97,
        112,
        112,
        114,
        111,
        118,
        101,
        32,
        99,
        97,
        108,
        108,
        101,
        114,
        32,
        105,
        115,
        32,
        110,
        111,
        116,
        32,
        116,
        111,
        96,
        68,
        130,
        1,
        82,
        127,
        107,
        101,
        110,
        32,
        111,
        119,
        110,
        101,
        114,
        32,
        111,
        114,
        32,
        97,
        112,
        112,
        114,
        111,
        118,
        101,
        100,
        32,
        102,
        111,
        114,
        32,
        97,
        108,
        108,
        0,
        0,
        0,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        7,
        169,
        86,
        91,
        97,
        8,
        74,
        131,
        131,
        97,
        12,
        166,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        81,
        96,
        5,
        27,
        91,
        128,
        21,
        97,
        8,
        114,
        87,
        130,
        129,
        1,
        81,
        96,
        1,
        144,
        27,
        144,
        145,
        23,
        144,
        96,
        31,
        25,
        1,
        97,
        8,
        87,
        86,
        91,
        80,
        145,
        144,
        80,
        86,
        91,
        97,
        8,
        130,
        51,
        130,
        97,
        13,
        20,
        86,
        91,
        80,
        86,
        91,
        97,
        8,
        141,
        97,
        13,
        99,
        86,
        91,
        97,
        8,
        151,
        130,
        130,
        97,
        13,
        126,
        86,
        91,
        80,
        80,
        86,
        91,
        97,
        8,
        166,
        51,
        91,
        130,
        97,
        13,
        201,
        86,
        91,
        97,
        8,
        194,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        25,
        224,
        86,
        91,
        97,
        8,
        74,
        131,
        131,
        131,
        97,
        14,
        72,
        86,
        91,
        96,
        0,
        98,
        2,
        163,
        0,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        66,
        1,
        144,
        80,
        99,
        56,
        154,
        117,
        225,
        96,
        12,
        82,
        51,
        96,
        0,
        82,
        128,
        96,
        32,
        96,
        12,
        32,
        85,
        51,
        127,
        219,
        243,
        106,
        16,
        125,
        161,
        158,
        73,
        82,
        122,
        113,
        118,
        161,
        186,
        191,
        150,
        59,
        75,
        15,
        248,
        205,
        227,
        94,
        227,
        93,
        108,
        216,
        241,
        249,
        172,
        126,
        29,
        96,
        0,
        128,
        162,
        80,
        86,
        91,
        96,
        0,
        96,
        1,
        97,
        9,
        42,
        129,
        97,
        15,
        172,
        86,
        91,
        96,
        6,
        84,
        145,
        80,
        97,
        9,
        57,
        131,
        131,
        97,
        15,
        210,
        86,
        91,
        96,
        6,
        96,
        0,
        129,
        84,
        97,
        9,
        72,
        144,
        97,
        26,
        45,
        86,
        91,
        144,
        145,
        85,
        80,
        144,
        146,
        145,
        80,
        80,
        86,
        91,
        97,
        8,
        74,
        131,
        131,
        131,
        96,
        64,
        81,
        128,
        96,
        32,
        1,
        96,
        64,
        82,
        128,
        96,
        0,
        129,
        82,
        80,
        97,
        11,
        55,
        86,
        91,
        97,
        9,
        119,
        51,
        97,
        8,
        160,
        86,
        91,
        97,
        9,
        147,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        25,
        224,
        86,
        91,
        97,
        8,
        130,
        129,
        97,
        15,
        236,
        86,
        91,
        97,
        9,
        164,
        97,
        13,
        99,
        86,
        91,
        97,
        8,
        151,
        130,
        130,
        97,
        13,
        20,
        86,
        91,
        99,
        56,
        154,
        117,
        225,
        96,
        12,
        82,
        51,
        96,
        0,
        82,
        96,
        0,
        96,
        32,
        96,
        12,
        32,
        85,
        51,
        127,
        250,
        123,
        142,
        171,
        125,
        166,
        127,
        65,
        44,
        201,
        87,
        94,
        212,
        52,
        100,
        70,
        143,
        155,
        251,
        174,
        137,
        209,
        103,
        89,
        23,
        52,
        108,
        166,
        216,
        254,
        60,
        146,
        96,
        0,
        128,
        162,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        2,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        128,
        97,
        6,
        118,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        24,
        96,
        36,
        130,
        1,
        82,
        119,
        17,
        84,
        144,
        205,
        204,
        140,
        78,
        136,
        26,
        91,
        157,
        152,
        91,
        26,
        89,
        8,
        29,
        27,
        218,
        217,
        91,
        136,
        18,
        81,
        96,
        66,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        7,
        169,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        97,
        10,
        180,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        41,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        97,
        100,
        100,
        114,
        101,
        115,
        115,
        32,
        122,
        101,
        114,
        111,
        32,
        105,
        115,
        32,
        110,
        111,
        116,
        32,
        97,
        32,
        118,
        97,
        96,
        68,
        130,
        1,
        82,
        104,
        54,
        52,
        178,
        16,
        55,
        187,
        183,
        50,
        185,
        96,
        185,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        7,
        169,
        86,
        91,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        144,
        86,
        91,
        97,
        10,
        216,
        97,
        13,
        99,
        86,
        91,
        97,
        10,
        226,
        96,
        0,
        97,
        16,
        129,
        86,
        91,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        129,
        1,
        96,
        0,
        131,
        91,
        129,
        131,
        82,
        96,
        5,
        27,
        96,
        32,
        22,
        144,
        145,
        1,
        144,
        96,
        1,
        1,
        131,
        129,
        28,
        128,
        97,
        10,
        239,
        87,
        80,
        80,
        96,
        31,
        25,
        130,
        130,
        3,
        1,
        96,
        5,
        28,
        130,
        82,
        96,
        64,
        82,
        145,
        144,
        80,
        86,
        91,
        96,
        96,
        96,
        1,
        128,
        84,
        97,
        6,
        139,
        144,
        97,
        25,
        172,
        86,
        91,
        97,
        8,
        151,
        51,
        131,
        131,
        97,
        16,
        191,
        86,
        91,
        97,
        11,
        65,
        51,
        131,
        97,
        13,
        201,
        86,
        91,
        97,
        11,
        93,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        25,
        224,
        86,
        91,
        97,
        11,
        105,
        132,
        132,
        132,
        132,
        97,
        17,
        141,
        86,
        91,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        97,
        11,
        122,
        130,
        97,
        12,
        71,
        86,
        91,
        96,
        0,
        97,
        11,
        145,
        96,
        64,
        128,
        81,
        96,
        32,
        129,
        1,
        144,
        145,
        82,
        96,
        0,
        129,
        82,
        144,
        86,
        91,
        144,
        80,
        96,
        0,
        129,
        81,
        17,
        97,
        11,
        177,
        87,
        96,
        64,
        81,
        128,
        96,
        32,
        1,
        96,
        64,
        82,
        128,
        96,
        0,
        129,
        82,
        80,
        97,
        11,
        220,
        86,
        91,
        128,
        97,
        11,
        187,
        132,
        97,
        17,
        192,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        11,
        204,
        146,
        145,
        144,
        97,
        26,
        84,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        129,
        131,
        3,
        3,
        129,
        82,
        144,
        96,
        64,
        82,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        97,
        11,
        235,
        97,
        13,
        99,
        86,
        91,
        99,
        56,
        154,
        117,
        225,
        96,
        12,
        82,
        128,
        96,
        0,
        82,
        96,
        32,
        96,
        12,
        32,
        128,
        84,
        66,
        17,
        21,
        97,
        12,
        19,
        87,
        99,
        111,
        94,
        136,
        24,
        96,
        0,
        82,
        96,
        4,
        96,
        28,
        253,
        91,
        96,
        0,
        144,
        85,
        97,
        8,
        130,
        129,
        97,
        16,
        129,
        86,
        91,
        97,
        12,
        40,
        97,
        13,
        99,
        86,
        91,
        128,
        96,
        96,
        27,
        97,
        12,
        62,
        87,
        99,
        116,
        72,
        251,
        174,
        96,
        0,
        82,
        96,
        4,
        96,
        28,
        253,
        91,
        97,
        8,
        130,
        129,
        97,
        16,
        129,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        2,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        8,
        130,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        24,
        96,
        36,
        130,
        1,
        82,
        119,
        17,
        84,
        144,
        205,
        204,
        140,
        78,
        136,
        26,
        91,
        157,
        152,
        91,
        26,
        89,
        8,
        29,
        27,
        218,
        217,
        91,
        136,
        18,
        81,
        96,
        66,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        7,
        169,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        129,
        144,
        97,
        12,
        219,
        130,
        97,
        9,
        234,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        127,
        140,
        91,
        225,
        229,
        235,
        236,
        125,
        91,
        209,
        79,
        113,
        66,
        125,
        30,
        132,
        243,
        221,
        3,
        20,
        192,
        247,
        178,
        41,
        30,
        91,
        32,
        10,
        200,
        199,
        195,
        185,
        37,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        80,
        80,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        96,
        12,
        82,
        129,
        96,
        0,
        82,
        96,
        32,
        96,
        12,
        32,
        128,
        84,
        130,
        129,
        22,
        129,
        24,
        146,
        80,
        80,
        129,
        129,
        85,
        80,
        128,
        96,
        12,
        81,
        96,
        96,
        28,
        127,
        113,
        90,
        213,
        206,
        97,
        252,
        149,
        149,
        199,
        180,
        21,
        40,
        157,
        89,
        207,
        32,
        63,
        35,
        169,
        79,
        160,
        111,
        4,
        175,
        126,
        72,
        154,
        10,
        118,
        225,
        254,
        38,
        96,
        0,
        128,
        163,
        80,
        80,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        25,
        84,
        51,
        20,
        97,
        10,
        226,
        87,
        99,
        130,
        180,
        41,
        0,
        96,
        0,
        82,
        96,
        4,
        96,
        28,
        253,
        91,
        99,
        139,
        120,
        198,
        216,
        96,
        12,
        82,
        129,
        96,
        0,
        82,
        96,
        32,
        96,
        12,
        32,
        129,
        129,
        84,
        23,
        145,
        80,
        129,
        129,
        85,
        80,
        128,
        96,
        12,
        81,
        96,
        96,
        28,
        127,
        113,
        90,
        213,
        206,
        97,
        252,
        149,
        149,
        199,
        180,
        21,
        40,
        157,
        89,
        207,
        32,
        63,
        35,
        169,
        79,
        160,
        111,
        4,
        175,
        126,
        72,
        154,
        10,
        118,
        225,
        254,
        38,
        96,
        0,
        128,
        163,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        97,
        13,
        213,
        131,
        97,
        9,
        234,
        86,
        91,
        144,
        80,
        128,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        132,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        128,
        97,
        14,
        28,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        147,
        136,
        22,
        131,
        82,
        146,
        144,
        82,
        32,
        84,
        96,
        255,
        22,
        91,
        128,
        97,
        14,
        64,
        87,
        80,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        14,
        53,
        132,
        97,
        7,
        14,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        130,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        14,
        91,
        130,
        97,
        9,
        234,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        97,
        14,
        129,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        26,
        131,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        97,
        14,
        227,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        128,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        116,
        114,
        97,
        110,
        115,
        102,
        101,
        114,
        32,
        116,
        111,
        32,
        116,
        104,
        101,
        32,
        122,
        101,
        114,
        111,
        32,
        97,
        100,
        100,
        96,
        68,
        130,
        1,
        82,
        99,
        114,
        101,
        115,
        115,
        96,
        224,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        7,
        169,
        86,
        91,
        130,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        14,
        246,
        130,
        97,
        9,
        234,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        97,
        15,
        28,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        26,
        131,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        144,
        129,
        22,
        144,
        145,
        85,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        135,
        129,
        22,
        128,
        134,
        82,
        96,
        3,
        133,
        82,
        131,
        134,
        32,
        128,
        84,
        96,
        0,
        25,
        1,
        144,
        85,
        144,
        135,
        22,
        128,
        134,
        82,
        131,
        134,
        32,
        128,
        84,
        96,
        1,
        1,
        144,
        85,
        134,
        134,
        82,
        96,
        2,
        144,
        148,
        82,
        130,
        133,
        32,
        128,
        84,
        144,
        146,
        22,
        132,
        23,
        144,
        145,
        85,
        144,
        81,
        132,
        147,
        127,
        221,
        242,
        82,
        173,
        27,
        226,
        200,
        155,
        105,
        194,
        176,
        104,
        252,
        55,
        141,
        170,
        149,
        43,
        167,
        241,
        99,
        196,
        161,
        22,
        40,
        245,
        90,
        77,
        245,
        35,
        179,
        239,
        145,
        164,
        80,
        80,
        80,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        96,
        12,
        82,
        51,
        96,
        0,
        82,
        128,
        96,
        32,
        96,
        12,
        32,
        84,
        22,
        97,
        8,
        130,
        87,
        99,
        130,
        180,
        41,
        0,
        96,
        0,
        82,
        96,
        4,
        96,
        28,
        253,
        91,
        97,
        8,
        151,
        130,
        130,
        96,
        64,
        81,
        128,
        96,
        32,
        1,
        96,
        64,
        82,
        128,
        96,
        0,
        129,
        82,
        80,
        97,
        18,
        83,
        86,
        91,
        96,
        0,
        97,
        15,
        247,
        130,
        97,
        9,
        234,
        86,
        91,
        144,
        80,
        97,
        16,
        2,
        130,
        97,
        9,
        234,
        86,
        91,
        96,
        0,
        131,
        129,
        82,
        96,
        4,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        144,
        129,
        22,
        144,
        145,
        85,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        128,
        133,
        82,
        96,
        3,
        132,
        82,
        130,
        133,
        32,
        128,
        84,
        96,
        0,
        25,
        1,
        144,
        85,
        135,
        133,
        82,
        96,
        2,
        144,
        147,
        82,
        129,
        132,
        32,
        128,
        84,
        144,
        145,
        22,
        144,
        85,
        81,
        146,
        147,
        80,
        132,
        146,
        127,
        221,
        242,
        82,
        173,
        27,
        226,
        200,
        155,
        105,
        194,
        176,
        104,
        252,
        55,
        141,
        170,
        149,
        43,
        167,
        241,
        99,
        196,
        161,
        22,
        40,
        245,
        90,
        77,
        245,
        35,
        179,
        239,
        144,
        131,
        144,
        164,
        80,
        80,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        25,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        146,
        22,
        145,
        130,
        144,
        127,
        139,
        224,
        7,
        156,
        83,
        22,
        89,
        20,
        19,
        68,
        205,
        31,
        208,
        164,
        242,
        132,
        25,
        73,
        127,
        151,
        34,
        163,
        218,
        175,
        227,
        180,
        24,
        111,
        107,
        100,
        87,
        224,
        96,
        0,
        128,
        163,
        85,
        86,
        91,
        129,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        3,
        97,
        17,
        32,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        25,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        97,
        112,
        112,
        114,
        111,
        118,
        101,
        32,
        116,
        111,
        32,
        99,
        97,
        108,
        108,
        101,
        114,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        7,
        169,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        5,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        148,
        135,
        22,
        128,
        132,
        82,
        148,
        130,
        82,
        145,
        130,
        144,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        134,
        21,
        21,
        144,
        129,
        23,
        144,
        145,
        85,
        145,
        81,
        145,
        130,
        82,
        127,
        23,
        48,
        126,
        171,
        57,
        171,
        97,
        7,
        232,
        137,
        152,
        69,
        173,
        61,
        89,
        189,
        150,
        83,
        242,
        0,
        242,
        32,
        146,
        4,
        137,
        202,
        43,
        89,
        55,
        105,
        108,
        49,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        80,
        80,
        80,
        86,
        91,
        97,
        17,
        152,
        132,
        132,
        132,
        97,
        14,
        72,
        86,
        91,
        97,
        17,
        164,
        132,
        132,
        132,
        132,
        97,
        18,
        134,
        86,
        91,
        97,
        11,
        105,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        26,
        200,
        86,
        91,
        96,
        96,
        96,
        0,
        97,
        17,
        205,
        131,
        97,
        19,
        135,
        86,
        91,
        96,
        1,
        1,
        144,
        80,
        96,
        0,
        129,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        17,
        237,
        87,
        97,
        17,
        237,
        97,
        22,
        223,
        86,
        91,
        96,
        64,
        81,
        144,
        128,
        130,
        82,
        128,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        130,
        1,
        96,
        64,
        82,
        128,
        21,
        97,
        18,
        23,
        87,
        96,
        32,
        130,
        1,
        129,
        128,
        54,
        131,
        55,
        1,
        144,
        80,
        91,
        80,
        144,
        80,
        129,
        129,
        1,
        96,
        32,
        1,
        91,
        96,
        0,
        25,
        1,
        111,
        24,
        24,
        153,
        25,
        154,
        26,
        155,
        27,
        156,
        28,
        176,
        177,
        49,
        178,
        50,
        179,
        96,
        129,
        27,
        96,
        10,
        134,
        6,
        26,
        129,
        83,
        96,
        10,
        133,
        4,
        148,
        80,
        132,
        97,
        18,
        33,
        87,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        97,
        18,
        93,
        131,
        131,
        97,
        20,
        95,
        86,
        91,
        97,
        18,
        106,
        96,
        0,
        132,
        132,
        132,
        97,
        18,
        134,
        86,
        91,
        97,
        8,
        74,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        26,
        200,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        59,
        21,
        97,
        19,
        124,
        87,
        96,
        64,
        81,
        99,
        10,
        133,
        189,
        1,
        96,
        225,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        144,
        99,
        21,
        11,
        122,
        2,
        144,
        97,
        18,
        202,
        144,
        51,
        144,
        137,
        144,
        136,
        144,
        136,
        144,
        96,
        4,
        1,
        97,
        27,
        26,
        86,
        91,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        90,
        241,
        146,
        80,
        80,
        80,
        128,
        21,
        97,
        19,
        5,
        87,
        80,
        96,
        64,
        128,
        81,
        96,
        31,
        61,
        144,
        129,
        1,
        96,
        31,
        25,
        22,
        130,
        1,
        144,
        146,
        82,
        97,
        19,
        2,
        145,
        129,
        1,
        144,
        97,
        27,
        87,
        86,
        91,
        96,
        1,
        91,
        97,
        19,
        98,
        87,
        61,
        128,
        128,
        21,
        97,
        19,
        51,
        87,
        96,
        64,
        81,
        145,
        80,
        96,
        31,
        25,
        96,
        63,
        61,
        1,
        22,
        130,
        1,
        96,
        64,
        82,
        61,
        130,
        82,
        61,
        96,
        0,
        96,
        32,
        132,
        1,
        62,
        97,
        19,
        56,
        86,
        91,
        96,
        96,
        145,
        80,
        91,
        80,
        128,
        81,
        96,
        0,
        3,
        97,
        19,
        90,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        26,
        200,
        86,
        91,
        128,
        81,
        129,
        96,
        32,
        1,
        253,
        91,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        22,
        99,
        10,
        133,
        189,
        1,
        96,
        225,
        27,
        20,
        144,
        80,
        97,
        14,
        64,
        86,
        91,
        80,
        96,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        114,
        24,
        79,
        3,
        233,
        63,
        249,
        244,
        218,
        167,
        151,
        237,
        110,
        56,
        237,
        100,
        191,
        106,
        31,
        1,
        96,
        64,
        27,
        131,
        16,
        97,
        19,
        198,
        87,
        114,
        24,
        79,
        3,
        233,
        63,
        249,
        244,
        218,
        167,
        151,
        237,
        110,
        56,
        237,
        100,
        191,
        106,
        31,
        1,
        96,
        64,
        27,
        131,
        4,
        146,
        80,
        96,
        64,
        1,
        91,
        109,
        4,
        238,
        45,
        109,
        65,
        91,
        133,
        172,
        239,
        129,
        0,
        0,
        0,
        0,
        131,
        16,
        97,
        19,
        242,
        87,
        109,
        4,
        238,
        45,
        109,
        65,
        91,
        133,
        172,
        239,
        129,
        0,
        0,
        0,
        0,
        131,
        4,
        146,
        80,
        96,
        32,
        1,
        91,
        102,
        35,
        134,
        242,
        111,
        193,
        0,
        0,
        131,
        16,
        97,
        20,
        16,
        87,
        102,
        35,
        134,
        242,
        111,
        193,
        0,
        0,
        131,
        4,
        146,
        80,
        96,
        16,
        1,
        91,
        99,
        5,
        245,
        225,
        0,
        131,
        16,
        97,
        20,
        40,
        87,
        99,
        5,
        245,
        225,
        0,
        131,
        4,
        146,
        80,
        96,
        8,
        1,
        91,
        97,
        39,
        16,
        131,
        16,
        97,
        20,
        60,
        87,
        97,
        39,
        16,
        131,
        4,
        146,
        80,
        96,
        4,
        1,
        91,
        96,
        100,
        131,
        16,
        97,
        20,
        78,
        87,
        96,
        100,
        131,
        4,
        146,
        80,
        96,
        2,
        1,
        91,
        96,
        10,
        131,
        16,
        97,
        6,
        118,
        87,
        96,
        1,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        97,
        20,
        181,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        129,
        144,
        82,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        109,
        105,
        110,
        116,
        32,
        116,
        111,
        32,
        116,
        104,
        101,
        32,
        122,
        101,
        114,
        111,
        32,
        97,
        100,
        100,
        114,
        101,
        115,
        115,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        7,
        169,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        2,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        21,
        97,
        21,
        26,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        28,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        116,
        111,
        107,
        101,
        110,
        32,
        97,
        108,
        114,
        101,
        97,
        100,
        121,
        32,
        109,
        105,
        110,
        116,
        101,
        100,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        7,
        169,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        2,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        21,
        97,
        21,
        127,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        28,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        116,
        111,
        107,
        101,
        110,
        32,
        97,
        108,
        114,
        101,
        97,
        100,
        121,
        32,
        109,
        105,
        110,
        116,
        101,
        100,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        7,
        169,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        3,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        128,
        84,
        96,
        1,
        1,
        144,
        85,
        132,
        131,
        82,
        96,
        2,
        144,
        145,
        82,
        128,
        130,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        132,
        23,
        144,
        85,
        81,
        131,
        146,
        145,
        144,
        127,
        221,
        242,
        82,
        173,
        27,
        226,
        200,
        155,
        105,
        194,
        176,
        104,
        252,
        55,
        141,
        170,
        149,
        43,
        167,
        241,
        99,
        196,
        161,
        22,
        40,
        245,
        90,
        77,
        245,
        35,
        179,
        239,
        144,
        130,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        129,
        22,
        129,
        20,
        97,
        8,
        130,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        22,
        18,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        11,
        220,
        129,
        97,
        21,
        234,
        86,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        22,
        56,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        22,
        32,
        86,
        91,
        80,
        80,
        96,
        0,
        145,
        1,
        82,
        86,
        91,
        96,
        0,
        129,
        81,
        128,
        132,
        82,
        97,
        22,
        89,
        129,
        96,
        32,
        134,
        1,
        96,
        32,
        134,
        1,
        97,
        22,
        29,
        86,
        91,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        146,
        144,
        146,
        1,
        96,
        32,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        97,
        11,
        220,
        96,
        32,
        131,
        1,
        132,
        97,
        22,
        65,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        22,
        146,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        22,
        176,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        22,
        200,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        22,
        209,
        131,
        97,
        22,
        153,
        86,
        91,
        148,
        96,
        32,
        147,
        144,
        147,
        1,
        53,
        147,
        80,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        64,
        81,
        96,
        31,
        130,
        1,
        96,
        31,
        25,
        22,
        129,
        1,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        130,
        130,
        16,
        23,
        21,
        97,
        23,
        30,
        87,
        97,
        23,
        30,
        97,
        22,
        223,
        86,
        91,
        96,
        64,
        82,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        128,
        131,
        133,
        3,
        18,
        21,
        97,
        23,
        57,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        23,
        81,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        133,
        1,
        145,
        80,
        133,
        96,
        31,
        131,
        1,
        18,
        97,
        23,
        101,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        129,
        129,
        17,
        21,
        97,
        23,
        119,
        87,
        97,
        23,
        119,
        97,
        22,
        223,
        86,
        91,
        128,
        96,
        5,
        27,
        145,
        80,
        97,
        23,
        136,
        132,
        131,
        1,
        97,
        22,
        245,
        86,
        91,
        129,
        129,
        82,
        145,
        131,
        1,
        132,
        1,
        145,
        132,
        129,
        1,
        144,
        136,
        132,
        17,
        21,
        97,
        23,
        162,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        133,
        1,
        147,
        91,
        131,
        133,
        16,
        21,
        97,
        23,
        211,
        87,
        132,
        53,
        146,
        80,
        96,
        255,
        131,
        22,
        131,
        20,
        97,
        23,
        195,
        87,
        96,
        0,
        128,
        129,
        253,
        91,
        130,
        130,
        82,
        147,
        133,
        1,
        147,
        144,
        133,
        1,
        144,
        97,
        23,
        167,
        86,
        91,
        152,
        151,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        97,
        23,
        244,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        23,
        253,
        132,
        97,
        22,
        153,
        86,
        91,
        146,
        80,
        97,
        24,
        11,
        96,
        32,
        133,
        1,
        97,
        22,
        153,
        86,
        91,
        145,
        80,
        96,
        64,
        132,
        1,
        53,
        144,
        80,
        146,
        80,
        146,
        80,
        146,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        24,
        45,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        11,
        220,
        130,
        97,
        22,
        153,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        130,
        81,
        130,
        130,
        1,
        129,
        144,
        82,
        96,
        0,
        145,
        144,
        132,
        130,
        1,
        144,
        96,
        64,
        133,
        1,
        144,
        132,
        91,
        129,
        129,
        16,
        21,
        97,
        24,
        113,
        87,
        131,
        81,
        96,
        255,
        22,
        131,
        82,
        146,
        132,
        1,
        146,
        145,
        132,
        1,
        145,
        96,
        1,
        1,
        97,
        24,
        82,
        86,
        91,
        80,
        144,
        150,
        149,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        24,
        144,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        24,
        153,
        131,
        97,
        22,
        153,
        86,
        91,
        145,
        80,
        96,
        32,
        131,
        1,
        53,
        128,
        21,
        21,
        129,
        20,
        97,
        24,
        174,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        145,
        80,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        128,
        133,
        135,
        3,
        18,
        21,
        97,
        24,
        207,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        24,
        216,
        133,
        97,
        22,
        153,
        86,
        91,
        147,
        80,
        96,
        32,
        97,
        24,
        231,
        129,
        135,
        1,
        97,
        22,
        153,
        86,
        91,
        147,
        80,
        96,
        64,
        134,
        1,
        53,
        146,
        80,
        96,
        96,
        134,
        1,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        25,
        11,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        136,
        1,
        145,
        80,
        136,
        96,
        31,
        131,
        1,
        18,
        97,
        25,
        31,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        129,
        129,
        17,
        21,
        97,
        25,
        49,
        87,
        97,
        25,
        49,
        97,
        22,
        223,
        86,
        91,
        97,
        25,
        67,
        96,
        31,
        130,
        1,
        96,
        31,
        25,
        22,
        133,
        1,
        97,
        22,
        245,
        86,
        91,
        145,
        80,
        128,
        130,
        82,
        137,
        132,
        130,
        133,
        1,
        1,
        17,
        21,
        97,
        25,
        89,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        132,
        132,
        1,
        133,
        132,
        1,
        55,
        96,
        0,
        132,
        130,
        132,
        1,
        1,
        82,
        80,
        128,
        147,
        80,
        80,
        80,
        80,
        146,
        149,
        145,
        148,
        80,
        146,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        25,
        140,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        25,
        149,
        131,
        97,
        22,
        153,
        86,
        91,
        145,
        80,
        97,
        25,
        163,
        96,
        32,
        132,
        1,
        97,
        22,
        153,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        1,
        129,
        129,
        28,
        144,
        130,
        22,
        128,
        97,
        25,
        192,
        87,
        96,
        127,
        130,
        22,
        145,
        80,
        91,
        96,
        32,
        130,
        16,
        129,
        3,
        97,
        8,
        114,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        34,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        32,
        128,
        130,
        82,
        96,
        45,
        144,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        99,
        97,
        108,
        108,
        101,
        114,
        32,
        105,
        115,
        32,
        110,
        111,
        116,
        32,
        116,
        111,
        107,
        101,
        110,
        32,
        111,
        119,
        110,
        101,
        96,
        64,
        130,
        1,
        82,
        108,
        28,
        136,
        27,
        220,
        136,
        24,
        92,
        28,
        28,
        155,
        221,
        153,
        89,
        96,
        154,
        27,
        96,
        96,
        130,
        1,
        82,
        96,
        128,
        1,
        144,
        86,
        91,
        96,
        0,
        96,
        1,
        130,
        1,
        97,
        26,
        77,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        96,
        1,
        1,
        144,
        86,
        91,
        96,
        0,
        131,
        81,
        97,
        26,
        102,
        129,
        132,
        96,
        32,
        136,
        1,
        97,
        22,
        29,
        86,
        91,
        131,
        81,
        144,
        131,
        1,
        144,
        97,
        26,
        122,
        129,
        131,
        96,
        32,
        136,
        1,
        97,
        22,
        29,
        86,
        91,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        96,
        37,
        144,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        116,
        114,
        97,
        110,
        115,
        102,
        101,
        114,
        32,
        102,
        114,
        111,
        109,
        32,
        105,
        110,
        99,
        111,
        114,
        114,
        101,
        99,
        116,
        32,
        96,
        64,
        130,
        1,
        82,
        100,
        55,
        187,
        183,
        50,
        185,
        96,
        217,
        27,
        96,
        96,
        130,
        1,
        82,
        96,
        128,
        1,
        144,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        96,
        50,
        144,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        116,
        114,
        97,
        110,
        115,
        102,
        101,
        114,
        32,
        116,
        111,
        32,
        110,
        111,
        110,
        32,
        69,
        82,
        67,
        55,
        50,
        49,
        82,
        101,
        96,
        64,
        130,
        1,
        82,
        113,
        49,
        178,
        180,
        187,
        50,
        185,
        16,
        52,
        182,
        184,
        54,
        50,
        182,
        178,
        183,
        58,
        50,
        185,
        96,
        113,
        27,
        96,
        96,
        130,
        1,
        82,
        96,
        128,
        1,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        129,
        22,
        130,
        82,
        132,
        22,
        96,
        32,
        130,
        1,
        82,
        96,
        64,
        129,
        1,
        131,
        144,
        82,
        96,
        128,
        96,
        96,
        130,
        1,
        129,
        144,
        82,
        96,
        0,
        144,
        97,
        27,
        77,
        144,
        131,
        1,
        132,
        97,
        22,
        65,
        86,
        91,
        150,
        149,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        27,
        105,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        97,
        11,
        220,
        129,
        97,
        21,
        234,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        80,
        56,
        24,
        78,
        149,
        44,
        178,
        84,
        118,
        255,
        217,
        50,
        148,
        18,
        104,
        248,
        192,
        214,
        195,
        84,
        1,
        165,
        203,
        28,
        187,
        222,
        120,
        162,
        130,
        194,
        235,
        32,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        20,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static DAMNVALUABLENFT_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        97,
        1,
        238,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        84,
        209,
        241,
        61,
        17,
        97,
        1,
        13,
        87,
        128,
        99,
        162,
        44,
        180,
        101,
        17,
        97,
        0,
        160,
        87,
        128,
        99,
        215,
        83,
        63,
        2,
        17,
        97,
        0,
        111,
        87,
        128,
        99,
        215,
        83,
        63,
        2,
        20,
        97,
        5,
        106,
        87,
        128,
        99,
        233,
        133,
        233,
        197,
        20,
        97,
        5,
        136,
        87,
        128,
        99,
        240,
        78,
        40,
        62,
        20,
        97,
        5,
        209,
        87,
        128,
        99,
        242,
        253,
        227,
        139,
        20,
        97,
        5,
        228,
        87,
        128,
        99,
        254,
        232,
        28,
        244,
        20,
        97,
        5,
        247,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        162,
        44,
        180,
        101,
        20,
        97,
        4,
        245,
        87,
        128,
        99,
        184,
        141,
        79,
        222,
        20,
        97,
        5,
        21,
        87,
        128,
        99,
        200,
        123,
        86,
        221,
        20,
        97,
        5,
        53,
        87,
        128,
        99,
        213,
        57,
        19,
        147,
        20,
        97,
        5,
        85,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        115,
        89,
        228,
        31,
        17,
        97,
        0,
        220,
        87,
        128,
        99,
        115,
        89,
        228,
        31,
        20,
        97,
        4,
        132,
        87,
        128,
        99,
        141,
        165,
        203,
        91,
        20,
        97,
        4,
        177,
        87,
        128,
        99,
        149,
        216,
        155,
        65,
        20,
        97,
        4,
        202,
        87,
        128,
        99,
        152,
        189,
        246,
        245,
        20,
        97,
        4,
        223,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        84,
        209,
        241,
        61,
        20,
        97,
        4,
        52,
        87,
        128,
        99,
        99,
        82,
        33,
        30,
        20,
        97,
        4,
        60,
        87,
        128,
        99,
        112,
        160,
        130,
        49,
        20,
        97,
        4,
        92,
        87,
        128,
        99,
        113,
        80,
        24,
        166,
        20,
        97,
        4,
        124,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        35,
        184,
        114,
        221,
        17,
        97,
        1,
        133,
        87,
        128,
        99,
        66,
        132,
        46,
        14,
        17,
        97,
        1,
        84,
        87,
        128,
        99,
        66,
        132,
        46,
        14,
        20,
        97,
        3,
        170,
        87,
        128,
        99,
        66,
        150,
        108,
        104,
        20,
        97,
        3,
        202,
        87,
        128,
        99,
        74,
        78,
        231,
        177,
        20,
        97,
        3,
        234,
        87,
        128,
        99,
        81,
        78,
        98,
        252,
        20,
        97,
        3,
        253,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        35,
        184,
        114,
        221,
        20,
        97,
        3,
        47,
        87,
        128,
        99,
        37,
        105,
        41,
        98,
        20,
        97,
        3,
        79,
        87,
        128,
        99,
        45,
        233,
        72,
        7,
        20,
        97,
        3,
        87,
        87,
        128,
        99,
        64,
        208,
        151,
        195,
        20,
        97,
        3,
        138,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        19,
        166,
        97,
        237,
        17,
        97,
        1,
        193,
        87,
        128,
        99,
        19,
        166,
        97,
        237,
        20,
        97,
        2,
        164,
        87,
        128,
        99,
        24,
        58,
        79,
        110,
        20,
        97,
        2,
        210,
        87,
        128,
        99,
        28,
        16,
        137,
        63,
        20,
        97,
        2,
        229,
        87,
        128,
        99,
        28,
        214,
        77,
        244,
        20,
        97,
        2,
        248,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        1,
        255,
        201,
        167,
        20,
        97,
        1,
        243,
        87,
        128,
        99,
        6,
        253,
        222,
        3,
        20,
        97,
        2,
        40,
        87,
        128,
        99,
        8,
        24,
        18,
        252,
        20,
        97,
        2,
        74,
        87,
        128,
        99,
        9,
        94,
        167,
        179,
        20,
        97,
        2,
        130,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        52,
        128,
        21,
        97,
        1,
        255,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        19,
        97,
        2,
        14,
        54,
        96,
        4,
        97,
        22,
        0,
        86,
        91,
        97,
        6,
        42,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        52,
        128,
        21,
        97,
        2,
        52,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        61,
        97,
        6,
        124,
        86,
        91,
        96,
        64,
        81,
        97,
        2,
        31,
        145,
        144,
        97,
        22,
        109,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        86,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        106,
        97,
        2,
        101,
        54,
        96,
        4,
        97,
        22,
        128,
        86,
        91,
        97,
        7,
        14,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        31,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        142,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        162,
        97,
        2,
        157,
        54,
        96,
        4,
        97,
        22,
        181,
        86,
        91,
        97,
        7,
        53,
        86,
        91,
        0,
        91,
        52,
        128,
        21,
        97,
        2,
        176,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        97,
        2,
        191,
        54,
        96,
        4,
        97,
        23,
        38,
        86,
        91,
        97,
        8,
        79,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        31,
        86,
        91,
        97,
        2,
        162,
        97,
        2,
        224,
        54,
        96,
        4,
        97,
        22,
        128,
        86,
        91,
        97,
        8,
        120,
        86,
        91,
        97,
        2,
        162,
        97,
        2,
        243,
        54,
        96,
        4,
        97,
        22,
        181,
        86,
        91,
        97,
        8,
        133,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        4,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        19,
        97,
        3,
        19,
        54,
        96,
        4,
        97,
        22,
        181,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        96,
        12,
        144,
        129,
        82,
        96,
        0,
        146,
        144,
        146,
        82,
        96,
        32,
        144,
        145,
        32,
        84,
        129,
        22,
        20,
        144,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        59,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        162,
        97,
        3,
        74,
        54,
        96,
        4,
        97,
        23,
        223,
        86,
        91,
        97,
        8,
        155,
        86,
        91,
        97,
        2,
        162,
        97,
        8,
        205,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        99,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        97,
        3,
        114,
        54,
        96,
        4,
        97,
        24,
        27,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        96,
        12,
        144,
        129,
        82,
        96,
        0,
        145,
        144,
        145,
        82,
        96,
        32,
        144,
        32,
        84,
        144,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        150,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        97,
        3,
        165,
        54,
        96,
        4,
        97,
        24,
        27,
        86,
        91,
        97,
        9,
        29,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        182,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        162,
        97,
        3,
        197,
        54,
        96,
        4,
        97,
        23,
        223,
        86,
        91,
        97,
        9,
        83,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        214,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        162,
        97,
        3,
        229,
        54,
        96,
        4,
        97,
        22,
        128,
        86,
        91,
        97,
        9,
        110,
        86,
        91,
        97,
        2,
        162,
        97,
        3,
        248,
        54,
        96,
        4,
        97,
        22,
        181,
        86,
        91,
        97,
        9,
        156,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        9,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        19,
        97,
        4,
        24,
        54,
        96,
        4,
        97,
        22,
        181,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        96,
        12,
        144,
        129,
        82,
        96,
        0,
        146,
        144,
        146,
        82,
        96,
        32,
        144,
        145,
        32,
        84,
        22,
        21,
        21,
        144,
        86,
        91,
        97,
        2,
        162,
        97,
        9,
        174,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        72,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        106,
        97,
        4,
        87,
        54,
        96,
        4,
        97,
        22,
        128,
        86,
        91,
        97,
        9,
        234,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        104,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        97,
        4,
        119,
        54,
        96,
        4,
        97,
        24,
        27,
        86,
        91,
        97,
        10,
        74,
        86,
        91,
        97,
        2,
        162,
        97,
        10,
        208,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        144,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        4,
        164,
        97,
        4,
        159,
        54,
        96,
        4,
        97,
        22,
        128,
        86,
        91,
        97,
        10,
        228,
        86,
        91,
        96,
        64,
        81,
        97,
        2,
        31,
        145,
        144,
        97,
        24,
        54,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        189,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        99,
        139,
        120,
        198,
        216,
        25,
        84,
        97,
        2,
        106,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        214,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        61,
        97,
        11,
        29,
        86,
        91,
        52,
        128,
        21,
        97,
        4,
        235,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        96,
        6,
        84,
        129,
        86,
        91,
        52,
        128,
        21,
        97,
        5,
        1,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        162,
        97,
        5,
        16,
        54,
        96,
        4,
        97,
        24,
        125,
        86,
        91,
        97,
        11,
        44,
        86,
        91,
        52,
        128,
        21,
        97,
        5,
        33,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        162,
        97,
        5,
        48,
        54,
        96,
        4,
        97,
        24,
        185,
        86,
        91,
        97,
        11,
        55,
        86,
        91,
        52,
        128,
        21,
        97,
        5,
        65,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        61,
        97,
        5,
        80,
        54,
        96,
        4,
        97,
        22,
        128,
        86,
        91,
        97,
        11,
        111,
        86,
        91,
        52,
        128,
        21,
        97,
        5,
        97,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        96,
        1,
        129,
        86,
        91,
        52,
        128,
        21,
        97,
        5,
        118,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        81,
        98,
        2,
        163,
        0,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        31,
        86,
        91,
        52,
        128,
        21,
        97,
        5,
        148,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        19,
        97,
        5,
        163,
        54,
        96,
        4,
        97,
        25,
        121,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        145,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        147,
        144,
        148,
        22,
        130,
        82,
        145,
        144,
        145,
        82,
        32,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        97,
        2,
        162,
        97,
        5,
        223,
        54,
        96,
        4,
        97,
        24,
        27,
        86,
        91,
        97,
        11,
        227,
        86,
        91,
        97,
        2,
        162,
        97,
        5,
        242,
        54,
        96,
        4,
        97,
        24,
        27,
        86,
        91,
        97,
        12,
        32,
        86,
        91,
        52,
        128,
        21,
        97,
        6,
        3,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        196,
        97,
        6,
        18,
        54,
        96,
        4,
        97,
        24,
        27,
        86,
        91,
        99,
        56,
        154,
        117,
        225,
        96,
        12,
        144,
        129,
        82,
        96,
        0,
        145,
        144,
        145,
        82,
        96,
        32,
        144,
        32,
        84,
        144,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        128,
        172,
        88,
        205,
        96,
        224,
        27,
        20,
        128,
        97,
        6,
        91,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        91,
        94,
        19,
        159,
        96,
        224,
        27,
        20,
        91,
        128,
        97,
        6,
        118,
        87,
        80,
        99,
        1,
        255,
        201,
        167,
        96,
        224,
        27,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        131,
        22,
        20,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        96,
        96,
        0,
        128,
        84,
        97,
        6,
        139,
        144,
        97,
        25,
        172,
        86,
        91,
        128,
        96,
        31,
        1,
        96,
        32,
        128,
        145,
        4,
        2,
        96,
        32,
        1,
        96,
        64,
        81,
        144,
        129,
        1,
        96,
        64,
        82,
        128,
        146,
        145,
        144,
        129,
        129,
        82,
        96,
        32,
        1,
        130,
        128,
        84,
        97,
        6,
        183,
        144,
        97,
        25,
        172,
        86,
        91,
        128,
        21,
        97,
        7,
        4,
        87,
        128,
        96,
        31,
        16,
        97,
        6,
        217,
        87,
        97,
        1,
        0,
        128,
        131,
        84,
        4,
        2,
        131,
        82,
        145,
        96,
        32,
        1,
        145,
        97,
        7,
        4,
        86,
        91,
        130,
        1,
        145,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        144,
        91,
        129,
        84,
        129,
        82,
        144,
        96,
        1,
        1,
        144,
        96,
        32,
        1,
        128,
        131,
        17,
        97,
        6,
        231,
        87,
        130,
        144,
        3,
        96,
        31,
        22,
        130,
        1,
        145,
        91,
        80,
        80,
        80,
        80,
        80,
        144,
        80,
        144,
        86,
        91,
        96,
        0,
        97,
        7,
        25,
        130,
        97,
        12,
        71,
        86,
        91,
        80,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        144,
        86,
        91,
        96,
        0,
        97,
        7,
        64,
        130,
        97,
        9,
        234,
        86,
        91,
        144,
        80,
        128,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        3,
        97,
        7,
        178,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        33,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        97,
        112,
        112,
        114,
        111,
        118,
        97,
        108,
        32,
        116,
        111,
        32,
        99,
        117,
        114,
        114,
        101,
        110,
        116,
        32,
        111,
        119,
        110,
        101,
        96,
        68,
        130,
        1,
        82,
        96,
        57,
        96,
        249,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        20,
        128,
        97,
        7,
        206,
        87,
        80,
        97,
        7,
        206,
        129,
        51,
        97,
        5,
        163,
        86,
        91,
        97,
        8,
        64,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        61,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        97,
        112,
        112,
        114,
        111,
        118,
        101,
        32,
        99,
        97,
        108,
        108,
        101,
        114,
        32,
        105,
        115,
        32,
        110,
        111,
        116,
        32,
        116,
        111,
        96,
        68,
        130,
        1,
        82,
        127,
        107,
        101,
        110,
        32,
        111,
        119,
        110,
        101,
        114,
        32,
        111,
        114,
        32,
        97,
        112,
        112,
        114,
        111,
        118,
        101,
        100,
        32,
        102,
        111,
        114,
        32,
        97,
        108,
        108,
        0,
        0,
        0,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        7,
        169,
        86,
        91,
        97,
        8,
        74,
        131,
        131,
        97,
        12,
        166,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        81,
        96,
        5,
        27,
        91,
        128,
        21,
        97,
        8,
        114,
        87,
        130,
        129,
        1,
        81,
        96,
        1,
        144,
        27,
        144,
        145,
        23,
        144,
        96,
        31,
        25,
        1,
        97,
        8,
        87,
        86,
        91,
        80,
        145,
        144,
        80,
        86,
        91,
        97,
        8,
        130,
        51,
        130,
        97,
        13,
        20,
        86,
        91,
        80,
        86,
        91,
        97,
        8,
        141,
        97,
        13,
        99,
        86,
        91,
        97,
        8,
        151,
        130,
        130,
        97,
        13,
        126,
        86,
        91,
        80,
        80,
        86,
        91,
        97,
        8,
        166,
        51,
        91,
        130,
        97,
        13,
        201,
        86,
        91,
        97,
        8,
        194,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        25,
        224,
        86,
        91,
        97,
        8,
        74,
        131,
        131,
        131,
        97,
        14,
        72,
        86,
        91,
        96,
        0,
        98,
        2,
        163,
        0,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        66,
        1,
        144,
        80,
        99,
        56,
        154,
        117,
        225,
        96,
        12,
        82,
        51,
        96,
        0,
        82,
        128,
        96,
        32,
        96,
        12,
        32,
        85,
        51,
        127,
        219,
        243,
        106,
        16,
        125,
        161,
        158,
        73,
        82,
        122,
        113,
        118,
        161,
        186,
        191,
        150,
        59,
        75,
        15,
        248,
        205,
        227,
        94,
        227,
        93,
        108,
        216,
        241,
        249,
        172,
        126,
        29,
        96,
        0,
        128,
        162,
        80,
        86,
        91,
        96,
        0,
        96,
        1,
        97,
        9,
        42,
        129,
        97,
        15,
        172,
        86,
        91,
        96,
        6,
        84,
        145,
        80,
        97,
        9,
        57,
        131,
        131,
        97,
        15,
        210,
        86,
        91,
        96,
        6,
        96,
        0,
        129,
        84,
        97,
        9,
        72,
        144,
        97,
        26,
        45,
        86,
        91,
        144,
        145,
        85,
        80,
        144,
        146,
        145,
        80,
        80,
        86,
        91,
        97,
        8,
        74,
        131,
        131,
        131,
        96,
        64,
        81,
        128,
        96,
        32,
        1,
        96,
        64,
        82,
        128,
        96,
        0,
        129,
        82,
        80,
        97,
        11,
        55,
        86,
        91,
        97,
        9,
        119,
        51,
        97,
        8,
        160,
        86,
        91,
        97,
        9,
        147,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        25,
        224,
        86,
        91,
        97,
        8,
        130,
        129,
        97,
        15,
        236,
        86,
        91,
        97,
        9,
        164,
        97,
        13,
        99,
        86,
        91,
        97,
        8,
        151,
        130,
        130,
        97,
        13,
        20,
        86,
        91,
        99,
        56,
        154,
        117,
        225,
        96,
        12,
        82,
        51,
        96,
        0,
        82,
        96,
        0,
        96,
        32,
        96,
        12,
        32,
        85,
        51,
        127,
        250,
        123,
        142,
        171,
        125,
        166,
        127,
        65,
        44,
        201,
        87,
        94,
        212,
        52,
        100,
        70,
        143,
        155,
        251,
        174,
        137,
        209,
        103,
        89,
        23,
        52,
        108,
        166,
        216,
        254,
        60,
        146,
        96,
        0,
        128,
        162,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        2,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        128,
        97,
        6,
        118,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        24,
        96,
        36,
        130,
        1,
        82,
        119,
        17,
        84,
        144,
        205,
        204,
        140,
        78,
        136,
        26,
        91,
        157,
        152,
        91,
        26,
        89,
        8,
        29,
        27,
        218,
        217,
        91,
        136,
        18,
        81,
        96,
        66,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        7,
        169,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        97,
        10,
        180,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        41,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        97,
        100,
        100,
        114,
        101,
        115,
        115,
        32,
        122,
        101,
        114,
        111,
        32,
        105,
        115,
        32,
        110,
        111,
        116,
        32,
        97,
        32,
        118,
        97,
        96,
        68,
        130,
        1,
        82,
        104,
        54,
        52,
        178,
        16,
        55,
        187,
        183,
        50,
        185,
        96,
        185,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        7,
        169,
        86,
        91,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        144,
        86,
        91,
        97,
        10,
        216,
        97,
        13,
        99,
        86,
        91,
        97,
        10,
        226,
        96,
        0,
        97,
        16,
        129,
        86,
        91,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        129,
        1,
        96,
        0,
        131,
        91,
        129,
        131,
        82,
        96,
        5,
        27,
        96,
        32,
        22,
        144,
        145,
        1,
        144,
        96,
        1,
        1,
        131,
        129,
        28,
        128,
        97,
        10,
        239,
        87,
        80,
        80,
        96,
        31,
        25,
        130,
        130,
        3,
        1,
        96,
        5,
        28,
        130,
        82,
        96,
        64,
        82,
        145,
        144,
        80,
        86,
        91,
        96,
        96,
        96,
        1,
        128,
        84,
        97,
        6,
        139,
        144,
        97,
        25,
        172,
        86,
        91,
        97,
        8,
        151,
        51,
        131,
        131,
        97,
        16,
        191,
        86,
        91,
        97,
        11,
        65,
        51,
        131,
        97,
        13,
        201,
        86,
        91,
        97,
        11,
        93,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        25,
        224,
        86,
        91,
        97,
        11,
        105,
        132,
        132,
        132,
        132,
        97,
        17,
        141,
        86,
        91,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        97,
        11,
        122,
        130,
        97,
        12,
        71,
        86,
        91,
        96,
        0,
        97,
        11,
        145,
        96,
        64,
        128,
        81,
        96,
        32,
        129,
        1,
        144,
        145,
        82,
        96,
        0,
        129,
        82,
        144,
        86,
        91,
        144,
        80,
        96,
        0,
        129,
        81,
        17,
        97,
        11,
        177,
        87,
        96,
        64,
        81,
        128,
        96,
        32,
        1,
        96,
        64,
        82,
        128,
        96,
        0,
        129,
        82,
        80,
        97,
        11,
        220,
        86,
        91,
        128,
        97,
        11,
        187,
        132,
        97,
        17,
        192,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        11,
        204,
        146,
        145,
        144,
        97,
        26,
        84,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        129,
        131,
        3,
        3,
        129,
        82,
        144,
        96,
        64,
        82,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        97,
        11,
        235,
        97,
        13,
        99,
        86,
        91,
        99,
        56,
        154,
        117,
        225,
        96,
        12,
        82,
        128,
        96,
        0,
        82,
        96,
        32,
        96,
        12,
        32,
        128,
        84,
        66,
        17,
        21,
        97,
        12,
        19,
        87,
        99,
        111,
        94,
        136,
        24,
        96,
        0,
        82,
        96,
        4,
        96,
        28,
        253,
        91,
        96,
        0,
        144,
        85,
        97,
        8,
        130,
        129,
        97,
        16,
        129,
        86,
        91,
        97,
        12,
        40,
        97,
        13,
        99,
        86,
        91,
        128,
        96,
        96,
        27,
        97,
        12,
        62,
        87,
        99,
        116,
        72,
        251,
        174,
        96,
        0,
        82,
        96,
        4,
        96,
        28,
        253,
        91,
        97,
        8,
        130,
        129,
        97,
        16,
        129,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        2,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        8,
        130,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        24,
        96,
        36,
        130,
        1,
        82,
        119,
        17,
        84,
        144,
        205,
        204,
        140,
        78,
        136,
        26,
        91,
        157,
        152,
        91,
        26,
        89,
        8,
        29,
        27,
        218,
        217,
        91,
        136,
        18,
        81,
        96,
        66,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        7,
        169,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        129,
        144,
        97,
        12,
        219,
        130,
        97,
        9,
        234,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        127,
        140,
        91,
        225,
        229,
        235,
        236,
        125,
        91,
        209,
        79,
        113,
        66,
        125,
        30,
        132,
        243,
        221,
        3,
        20,
        192,
        247,
        178,
        41,
        30,
        91,
        32,
        10,
        200,
        199,
        195,
        185,
        37,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        80,
        80,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        96,
        12,
        82,
        129,
        96,
        0,
        82,
        96,
        32,
        96,
        12,
        32,
        128,
        84,
        130,
        129,
        22,
        129,
        24,
        146,
        80,
        80,
        129,
        129,
        85,
        80,
        128,
        96,
        12,
        81,
        96,
        96,
        28,
        127,
        113,
        90,
        213,
        206,
        97,
        252,
        149,
        149,
        199,
        180,
        21,
        40,
        157,
        89,
        207,
        32,
        63,
        35,
        169,
        79,
        160,
        111,
        4,
        175,
        126,
        72,
        154,
        10,
        118,
        225,
        254,
        38,
        96,
        0,
        128,
        163,
        80,
        80,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        25,
        84,
        51,
        20,
        97,
        10,
        226,
        87,
        99,
        130,
        180,
        41,
        0,
        96,
        0,
        82,
        96,
        4,
        96,
        28,
        253,
        91,
        99,
        139,
        120,
        198,
        216,
        96,
        12,
        82,
        129,
        96,
        0,
        82,
        96,
        32,
        96,
        12,
        32,
        129,
        129,
        84,
        23,
        145,
        80,
        129,
        129,
        85,
        80,
        128,
        96,
        12,
        81,
        96,
        96,
        28,
        127,
        113,
        90,
        213,
        206,
        97,
        252,
        149,
        149,
        199,
        180,
        21,
        40,
        157,
        89,
        207,
        32,
        63,
        35,
        169,
        79,
        160,
        111,
        4,
        175,
        126,
        72,
        154,
        10,
        118,
        225,
        254,
        38,
        96,
        0,
        128,
        163,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        97,
        13,
        213,
        131,
        97,
        9,
        234,
        86,
        91,
        144,
        80,
        128,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        132,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        128,
        97,
        14,
        28,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        147,
        136,
        22,
        131,
        82,
        146,
        144,
        82,
        32,
        84,
        96,
        255,
        22,
        91,
        128,
        97,
        14,
        64,
        87,
        80,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        14,
        53,
        132,
        97,
        7,
        14,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        130,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        14,
        91,
        130,
        97,
        9,
        234,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        97,
        14,
        129,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        26,
        131,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        97,
        14,
        227,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        128,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        116,
        114,
        97,
        110,
        115,
        102,
        101,
        114,
        32,
        116,
        111,
        32,
        116,
        104,
        101,
        32,
        122,
        101,
        114,
        111,
        32,
        97,
        100,
        100,
        96,
        68,
        130,
        1,
        82,
        99,
        114,
        101,
        115,
        115,
        96,
        224,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        7,
        169,
        86,
        91,
        130,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        14,
        246,
        130,
        97,
        9,
        234,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        97,
        15,
        28,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        26,
        131,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        144,
        129,
        22,
        144,
        145,
        85,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        135,
        129,
        22,
        128,
        134,
        82,
        96,
        3,
        133,
        82,
        131,
        134,
        32,
        128,
        84,
        96,
        0,
        25,
        1,
        144,
        85,
        144,
        135,
        22,
        128,
        134,
        82,
        131,
        134,
        32,
        128,
        84,
        96,
        1,
        1,
        144,
        85,
        134,
        134,
        82,
        96,
        2,
        144,
        148,
        82,
        130,
        133,
        32,
        128,
        84,
        144,
        146,
        22,
        132,
        23,
        144,
        145,
        85,
        144,
        81,
        132,
        147,
        127,
        221,
        242,
        82,
        173,
        27,
        226,
        200,
        155,
        105,
        194,
        176,
        104,
        252,
        55,
        141,
        170,
        149,
        43,
        167,
        241,
        99,
        196,
        161,
        22,
        40,
        245,
        90,
        77,
        245,
        35,
        179,
        239,
        145,
        164,
        80,
        80,
        80,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        96,
        12,
        82,
        51,
        96,
        0,
        82,
        128,
        96,
        32,
        96,
        12,
        32,
        84,
        22,
        97,
        8,
        130,
        87,
        99,
        130,
        180,
        41,
        0,
        96,
        0,
        82,
        96,
        4,
        96,
        28,
        253,
        91,
        97,
        8,
        151,
        130,
        130,
        96,
        64,
        81,
        128,
        96,
        32,
        1,
        96,
        64,
        82,
        128,
        96,
        0,
        129,
        82,
        80,
        97,
        18,
        83,
        86,
        91,
        96,
        0,
        97,
        15,
        247,
        130,
        97,
        9,
        234,
        86,
        91,
        144,
        80,
        97,
        16,
        2,
        130,
        97,
        9,
        234,
        86,
        91,
        96,
        0,
        131,
        129,
        82,
        96,
        4,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        144,
        129,
        22,
        144,
        145,
        85,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        128,
        133,
        82,
        96,
        3,
        132,
        82,
        130,
        133,
        32,
        128,
        84,
        96,
        0,
        25,
        1,
        144,
        85,
        135,
        133,
        82,
        96,
        2,
        144,
        147,
        82,
        129,
        132,
        32,
        128,
        84,
        144,
        145,
        22,
        144,
        85,
        81,
        146,
        147,
        80,
        132,
        146,
        127,
        221,
        242,
        82,
        173,
        27,
        226,
        200,
        155,
        105,
        194,
        176,
        104,
        252,
        55,
        141,
        170,
        149,
        43,
        167,
        241,
        99,
        196,
        161,
        22,
        40,
        245,
        90,
        77,
        245,
        35,
        179,
        239,
        144,
        131,
        144,
        164,
        80,
        80,
        86,
        91,
        99,
        139,
        120,
        198,
        216,
        25,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        146,
        22,
        145,
        130,
        144,
        127,
        139,
        224,
        7,
        156,
        83,
        22,
        89,
        20,
        19,
        68,
        205,
        31,
        208,
        164,
        242,
        132,
        25,
        73,
        127,
        151,
        34,
        163,
        218,
        175,
        227,
        180,
        24,
        111,
        107,
        100,
        87,
        224,
        96,
        0,
        128,
        163,
        85,
        86,
        91,
        129,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        3,
        97,
        17,
        32,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        25,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        97,
        112,
        112,
        114,
        111,
        118,
        101,
        32,
        116,
        111,
        32,
        99,
        97,
        108,
        108,
        101,
        114,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        7,
        169,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        5,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        148,
        135,
        22,
        128,
        132,
        82,
        148,
        130,
        82,
        145,
        130,
        144,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        134,
        21,
        21,
        144,
        129,
        23,
        144,
        145,
        85,
        145,
        81,
        145,
        130,
        82,
        127,
        23,
        48,
        126,
        171,
        57,
        171,
        97,
        7,
        232,
        137,
        152,
        69,
        173,
        61,
        89,
        189,
        150,
        83,
        242,
        0,
        242,
        32,
        146,
        4,
        137,
        202,
        43,
        89,
        55,
        105,
        108,
        49,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        80,
        80,
        80,
        86,
        91,
        97,
        17,
        152,
        132,
        132,
        132,
        97,
        14,
        72,
        86,
        91,
        97,
        17,
        164,
        132,
        132,
        132,
        132,
        97,
        18,
        134,
        86,
        91,
        97,
        11,
        105,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        26,
        200,
        86,
        91,
        96,
        96,
        96,
        0,
        97,
        17,
        205,
        131,
        97,
        19,
        135,
        86,
        91,
        96,
        1,
        1,
        144,
        80,
        96,
        0,
        129,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        17,
        237,
        87,
        97,
        17,
        237,
        97,
        22,
        223,
        86,
        91,
        96,
        64,
        81,
        144,
        128,
        130,
        82,
        128,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        130,
        1,
        96,
        64,
        82,
        128,
        21,
        97,
        18,
        23,
        87,
        96,
        32,
        130,
        1,
        129,
        128,
        54,
        131,
        55,
        1,
        144,
        80,
        91,
        80,
        144,
        80,
        129,
        129,
        1,
        96,
        32,
        1,
        91,
        96,
        0,
        25,
        1,
        111,
        24,
        24,
        153,
        25,
        154,
        26,
        155,
        27,
        156,
        28,
        176,
        177,
        49,
        178,
        50,
        179,
        96,
        129,
        27,
        96,
        10,
        134,
        6,
        26,
        129,
        83,
        96,
        10,
        133,
        4,
        148,
        80,
        132,
        97,
        18,
        33,
        87,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        97,
        18,
        93,
        131,
        131,
        97,
        20,
        95,
        86,
        91,
        97,
        18,
        106,
        96,
        0,
        132,
        132,
        132,
        97,
        18,
        134,
        86,
        91,
        97,
        8,
        74,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        26,
        200,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        59,
        21,
        97,
        19,
        124,
        87,
        96,
        64,
        81,
        99,
        10,
        133,
        189,
        1,
        96,
        225,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        144,
        99,
        21,
        11,
        122,
        2,
        144,
        97,
        18,
        202,
        144,
        51,
        144,
        137,
        144,
        136,
        144,
        136,
        144,
        96,
        4,
        1,
        97,
        27,
        26,
        86,
        91,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        90,
        241,
        146,
        80,
        80,
        80,
        128,
        21,
        97,
        19,
        5,
        87,
        80,
        96,
        64,
        128,
        81,
        96,
        31,
        61,
        144,
        129,
        1,
        96,
        31,
        25,
        22,
        130,
        1,
        144,
        146,
        82,
        97,
        19,
        2,
        145,
        129,
        1,
        144,
        97,
        27,
        87,
        86,
        91,
        96,
        1,
        91,
        97,
        19,
        98,
        87,
        61,
        128,
        128,
        21,
        97,
        19,
        51,
        87,
        96,
        64,
        81,
        145,
        80,
        96,
        31,
        25,
        96,
        63,
        61,
        1,
        22,
        130,
        1,
        96,
        64,
        82,
        61,
        130,
        82,
        61,
        96,
        0,
        96,
        32,
        132,
        1,
        62,
        97,
        19,
        56,
        86,
        91,
        96,
        96,
        145,
        80,
        91,
        80,
        128,
        81,
        96,
        0,
        3,
        97,
        19,
        90,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        7,
        169,
        144,
        97,
        26,
        200,
        86,
        91,
        128,
        81,
        129,
        96,
        32,
        1,
        253,
        91,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        22,
        99,
        10,
        133,
        189,
        1,
        96,
        225,
        27,
        20,
        144,
        80,
        97,
        14,
        64,
        86,
        91,
        80,
        96,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        114,
        24,
        79,
        3,
        233,
        63,
        249,
        244,
        218,
        167,
        151,
        237,
        110,
        56,
        237,
        100,
        191,
        106,
        31,
        1,
        96,
        64,
        27,
        131,
        16,
        97,
        19,
        198,
        87,
        114,
        24,
        79,
        3,
        233,
        63,
        249,
        244,
        218,
        167,
        151,
        237,
        110,
        56,
        237,
        100,
        191,
        106,
        31,
        1,
        96,
        64,
        27,
        131,
        4,
        146,
        80,
        96,
        64,
        1,
        91,
        109,
        4,
        238,
        45,
        109,
        65,
        91,
        133,
        172,
        239,
        129,
        0,
        0,
        0,
        0,
        131,
        16,
        97,
        19,
        242,
        87,
        109,
        4,
        238,
        45,
        109,
        65,
        91,
        133,
        172,
        239,
        129,
        0,
        0,
        0,
        0,
        131,
        4,
        146,
        80,
        96,
        32,
        1,
        91,
        102,
        35,
        134,
        242,
        111,
        193,
        0,
        0,
        131,
        16,
        97,
        20,
        16,
        87,
        102,
        35,
        134,
        242,
        111,
        193,
        0,
        0,
        131,
        4,
        146,
        80,
        96,
        16,
        1,
        91,
        99,
        5,
        245,
        225,
        0,
        131,
        16,
        97,
        20,
        40,
        87,
        99,
        5,
        245,
        225,
        0,
        131,
        4,
        146,
        80,
        96,
        8,
        1,
        91,
        97,
        39,
        16,
        131,
        16,
        97,
        20,
        60,
        87,
        97,
        39,
        16,
        131,
        4,
        146,
        80,
        96,
        4,
        1,
        91,
        96,
        100,
        131,
        16,
        97,
        20,
        78,
        87,
        96,
        100,
        131,
        4,
        146,
        80,
        96,
        2,
        1,
        91,
        96,
        10,
        131,
        16,
        97,
        6,
        118,
        87,
        96,
        1,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        97,
        20,
        181,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        129,
        144,
        82,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        109,
        105,
        110,
        116,
        32,
        116,
        111,
        32,
        116,
        104,
        101,
        32,
        122,
        101,
        114,
        111,
        32,
        97,
        100,
        100,
        114,
        101,
        115,
        115,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        7,
        169,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        2,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        21,
        97,
        21,
        26,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        28,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        116,
        111,
        107,
        101,
        110,
        32,
        97,
        108,
        114,
        101,
        97,
        100,
        121,
        32,
        109,
        105,
        110,
        116,
        101,
        100,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        7,
        169,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        2,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        21,
        97,
        21,
        127,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        28,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        116,
        111,
        107,
        101,
        110,
        32,
        97,
        108,
        114,
        101,
        97,
        100,
        121,
        32,
        109,
        105,
        110,
        116,
        101,
        100,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        7,
        169,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        3,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        128,
        84,
        96,
        1,
        1,
        144,
        85,
        132,
        131,
        82,
        96,
        2,
        144,
        145,
        82,
        128,
        130,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        132,
        23,
        144,
        85,
        81,
        131,
        146,
        145,
        144,
        127,
        221,
        242,
        82,
        173,
        27,
        226,
        200,
        155,
        105,
        194,
        176,
        104,
        252,
        55,
        141,
        170,
        149,
        43,
        167,
        241,
        99,
        196,
        161,
        22,
        40,
        245,
        90,
        77,
        245,
        35,
        179,
        239,
        144,
        130,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        129,
        22,
        129,
        20,
        97,
        8,
        130,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        22,
        18,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        11,
        220,
        129,
        97,
        21,
        234,
        86,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        22,
        56,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        22,
        32,
        86,
        91,
        80,
        80,
        96,
        0,
        145,
        1,
        82,
        86,
        91,
        96,
        0,
        129,
        81,
        128,
        132,
        82,
        97,
        22,
        89,
        129,
        96,
        32,
        134,
        1,
        96,
        32,
        134,
        1,
        97,
        22,
        29,
        86,
        91,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        146,
        144,
        146,
        1,
        96,
        32,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        97,
        11,
        220,
        96,
        32,
        131,
        1,
        132,
        97,
        22,
        65,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        22,
        146,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        22,
        176,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        22,
        200,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        22,
        209,
        131,
        97,
        22,
        153,
        86,
        91,
        148,
        96,
        32,
        147,
        144,
        147,
        1,
        53,
        147,
        80,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        64,
        81,
        96,
        31,
        130,
        1,
        96,
        31,
        25,
        22,
        129,
        1,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        130,
        130,
        16,
        23,
        21,
        97,
        23,
        30,
        87,
        97,
        23,
        30,
        97,
        22,
        223,
        86,
        91,
        96,
        64,
        82,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        128,
        131,
        133,
        3,
        18,
        21,
        97,
        23,
        57,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        23,
        81,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        133,
        1,
        145,
        80,
        133,
        96,
        31,
        131,
        1,
        18,
        97,
        23,
        101,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        129,
        129,
        17,
        21,
        97,
        23,
        119,
        87,
        97,
        23,
        119,
        97,
        22,
        223,
        86,
        91,
        128,
        96,
        5,
        27,
        145,
        80,
        97,
        23,
        136,
        132,
        131,
        1,
        97,
        22,
        245,
        86,
        91,
        129,
        129,
        82,
        145,
        131,
        1,
        132,
        1,
        145,
        132,
        129,
        1,
        144,
        136,
        132,
        17,
        21,
        97,
        23,
        162,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        133,
        1,
        147,
        91,
        131,
        133,
        16,
        21,
        97,
        23,
        211,
        87,
        132,
        53,
        146,
        80,
        96,
        255,
        131,
        22,
        131,
        20,
        97,
        23,
        195,
        87,
        96,
        0,
        128,
        129,
        253,
        91,
        130,
        130,
        82,
        147,
        133,
        1,
        147,
        144,
        133,
        1,
        144,
        97,
        23,
        167,
        86,
        91,
        152,
        151,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        97,
        23,
        244,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        23,
        253,
        132,
        97,
        22,
        153,
        86,
        91,
        146,
        80,
        97,
        24,
        11,
        96,
        32,
        133,
        1,
        97,
        22,
        153,
        86,
        91,
        145,
        80,
        96,
        64,
        132,
        1,
        53,
        144,
        80,
        146,
        80,
        146,
        80,
        146,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        24,
        45,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        11,
        220,
        130,
        97,
        22,
        153,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        130,
        81,
        130,
        130,
        1,
        129,
        144,
        82,
        96,
        0,
        145,
        144,
        132,
        130,
        1,
        144,
        96,
        64,
        133,
        1,
        144,
        132,
        91,
        129,
        129,
        16,
        21,
        97,
        24,
        113,
        87,
        131,
        81,
        96,
        255,
        22,
        131,
        82,
        146,
        132,
        1,
        146,
        145,
        132,
        1,
        145,
        96,
        1,
        1,
        97,
        24,
        82,
        86,
        91,
        80,
        144,
        150,
        149,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        24,
        144,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        24,
        153,
        131,
        97,
        22,
        153,
        86,
        91,
        145,
        80,
        96,
        32,
        131,
        1,
        53,
        128,
        21,
        21,
        129,
        20,
        97,
        24,
        174,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        145,
        80,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        128,
        133,
        135,
        3,
        18,
        21,
        97,
        24,
        207,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        24,
        216,
        133,
        97,
        22,
        153,
        86,
        91,
        147,
        80,
        96,
        32,
        97,
        24,
        231,
        129,
        135,
        1,
        97,
        22,
        153,
        86,
        91,
        147,
        80,
        96,
        64,
        134,
        1,
        53,
        146,
        80,
        96,
        96,
        134,
        1,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        25,
        11,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        136,
        1,
        145,
        80,
        136,
        96,
        31,
        131,
        1,
        18,
        97,
        25,
        31,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        129,
        129,
        17,
        21,
        97,
        25,
        49,
        87,
        97,
        25,
        49,
        97,
        22,
        223,
        86,
        91,
        97,
        25,
        67,
        96,
        31,
        130,
        1,
        96,
        31,
        25,
        22,
        133,
        1,
        97,
        22,
        245,
        86,
        91,
        145,
        80,
        128,
        130,
        82,
        137,
        132,
        130,
        133,
        1,
        1,
        17,
        21,
        97,
        25,
        89,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        132,
        132,
        1,
        133,
        132,
        1,
        55,
        96,
        0,
        132,
        130,
        132,
        1,
        1,
        82,
        80,
        128,
        147,
        80,
        80,
        80,
        80,
        146,
        149,
        145,
        148,
        80,
        146,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        25,
        140,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        25,
        149,
        131,
        97,
        22,
        153,
        86,
        91,
        145,
        80,
        97,
        25,
        163,
        96,
        32,
        132,
        1,
        97,
        22,
        153,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        1,
        129,
        129,
        28,
        144,
        130,
        22,
        128,
        97,
        25,
        192,
        87,
        96,
        127,
        130,
        22,
        145,
        80,
        91,
        96,
        32,
        130,
        16,
        129,
        3,
        97,
        8,
        114,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        34,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        32,
        128,
        130,
        82,
        96,
        45,
        144,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        99,
        97,
        108,
        108,
        101,
        114,
        32,
        105,
        115,
        32,
        110,
        111,
        116,
        32,
        116,
        111,
        107,
        101,
        110,
        32,
        111,
        119,
        110,
        101,
        96,
        64,
        130,
        1,
        82,
        108,
        28,
        136,
        27,
        220,
        136,
        24,
        92,
        28,
        28,
        155,
        221,
        153,
        89,
        96,
        154,
        27,
        96,
        96,
        130,
        1,
        82,
        96,
        128,
        1,
        144,
        86,
        91,
        96,
        0,
        96,
        1,
        130,
        1,
        97,
        26,
        77,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        96,
        1,
        1,
        144,
        86,
        91,
        96,
        0,
        131,
        81,
        97,
        26,
        102,
        129,
        132,
        96,
        32,
        136,
        1,
        97,
        22,
        29,
        86,
        91,
        131,
        81,
        144,
        131,
        1,
        144,
        97,
        26,
        122,
        129,
        131,
        96,
        32,
        136,
        1,
        97,
        22,
        29,
        86,
        91,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        96,
        37,
        144,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        116,
        114,
        97,
        110,
        115,
        102,
        101,
        114,
        32,
        102,
        114,
        111,
        109,
        32,
        105,
        110,
        99,
        111,
        114,
        114,
        101,
        99,
        116,
        32,
        96,
        64,
        130,
        1,
        82,
        100,
        55,
        187,
        183,
        50,
        185,
        96,
        217,
        27,
        96,
        96,
        130,
        1,
        82,
        96,
        128,
        1,
        144,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        96,
        50,
        144,
        130,
        1,
        82,
        127,
        69,
        82,
        67,
        55,
        50,
        49,
        58,
        32,
        116,
        114,
        97,
        110,
        115,
        102,
        101,
        114,
        32,
        116,
        111,
        32,
        110,
        111,
        110,
        32,
        69,
        82,
        67,
        55,
        50,
        49,
        82,
        101,
        96,
        64,
        130,
        1,
        82,
        113,
        49,
        178,
        180,
        187,
        50,
        185,
        16,
        52,
        182,
        184,
        54,
        50,
        182,
        178,
        183,
        58,
        50,
        185,
        96,
        113,
        27,
        96,
        96,
        130,
        1,
        82,
        96,
        128,
        1,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        129,
        22,
        130,
        82,
        132,
        22,
        96,
        32,
        130,
        1,
        82,
        96,
        64,
        129,
        1,
        131,
        144,
        82,
        96,
        128,
        96,
        96,
        130,
        1,
        129,
        144,
        82,
        96,
        0,
        144,
        97,
        27,
        77,
        144,
        131,
        1,
        132,
        97,
        22,
        65,
        86,
        91,
        150,
        149,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        27,
        105,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        97,
        11,
        220,
        129,
        97,
        21,
        234,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        80,
        56,
        24,
        78,
        149,
        44,
        178,
        84,
        118,
        255,
        217,
        50,
        148,
        18,
        104,
        248,
        192,
        214,
        195,
        84,
        1,
        165,
        203,
        28,
        187,
        222,
        120,
        162,
        130,
        194,
        235,
        32,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        20,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static DAMNVALUABLENFT_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct DamnValuableNFT<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for DamnValuableNFT<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for DamnValuableNFT<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for DamnValuableNFT<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for DamnValuableNFT<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(DamnValuableNFT)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> DamnValuableNFT<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    DAMNVALUABLENFT_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                DAMNVALUABLENFT_ABI.clone(),
                DAMNVALUABLENFT_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `MINTER_ROLE` (0xd5391393) function
        pub fn minter_role(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([213, 57, 19, 147], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `approve` (0x095ea7b3) function
        pub fn approve(
            &self,
            to: ::ethers::core::types::Address,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([9, 94, 167, 179], (to, token_id))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `balanceOf` (0x70a08231) function
        pub fn balance_of(
            &self,
            owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([112, 160, 130, 49], owner)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `burn` (0x42966c68) function
        pub fn burn(
            &self,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([66, 150, 108, 104], token_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `cancelOwnershipHandover` (0x54d1f13d) function
        pub fn cancel_ownership_handover(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([84, 209, 241, 61], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `completeOwnershipHandover` (0xf04e283e) function
        pub fn complete_ownership_handover(
            &self,
            pending_owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([240, 78, 40, 62], pending_owner)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getApproved` (0x081812fc) function
        pub fn get_approved(
            &self,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([8, 24, 18, 252], token_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `grantRoles` (0x1c10893f) function
        pub fn grant_roles(
            &self,
            user: ::ethers::core::types::Address,
            roles: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([28, 16, 137, 63], (user, roles))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `hasAllRoles` (0x1cd64df4) function
        pub fn has_all_roles(
            &self,
            user: ::ethers::core::types::Address,
            roles: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([28, 214, 77, 244], (user, roles))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `hasAnyRole` (0x514e62fc) function
        pub fn has_any_role(
            &self,
            user: ::ethers::core::types::Address,
            roles: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([81, 78, 98, 252], (user, roles))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `isApprovedForAll` (0xe985e9c5) function
        pub fn is_approved_for_all(
            &self,
            owner: ::ethers::core::types::Address,
            operator: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([233, 133, 233, 197], (owner, operator))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `name` (0x06fdde03) function
        pub fn name(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::std::string::String> {
            self.0
                .method_hash([6, 253, 222, 3], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `ordinalsFromRoles` (0x7359e41f) function
        pub fn ordinals_from_roles(
            &self,
            roles: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::std::vec::Vec<u8>> {
            self.0
                .method_hash([115, 89, 228, 31], roles)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `owner` (0x8da5cb5b) function
        pub fn owner(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([141, 165, 203, 91], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `ownerOf` (0x6352211e) function
        pub fn owner_of(
            &self,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([99, 82, 33, 30], token_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `ownershipHandoverExpiresAt` (0xfee81cf4) function
        pub fn ownership_handover_expires_at(
            &self,
            pending_owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([254, 232, 28, 244], pending_owner)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `ownershipHandoverValidFor` (0xd7533f02) function
        pub fn ownership_handover_valid_for(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, u64> {
            self.0
                .method_hash([215, 83, 63, 2], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `renounceOwnership` (0x715018a6) function
        pub fn renounce_ownership(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([113, 80, 24, 166], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `renounceRoles` (0x183a4f6e) function
        pub fn renounce_roles(
            &self,
            roles: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([24, 58, 79, 110], roles)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `requestOwnershipHandover` (0x25692962) function
        pub fn request_ownership_handover(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([37, 105, 41, 98], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `revokeRoles` (0x4a4ee7b1) function
        pub fn revoke_roles(
            &self,
            user: ::ethers::core::types::Address,
            roles: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([74, 78, 231, 177], (user, roles))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `rolesFromOrdinals` (0x13a661ed) function
        pub fn roles_from_ordinals(
            &self,
            ordinals: ::std::vec::Vec<u8>,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([19, 166, 97, 237], ordinals)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `rolesOf` (0x2de94807) function
        pub fn roles_of(
            &self,
            user: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([45, 233, 72, 7], user)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `safeMint` (0x40d097c3) function
        pub fn safe_mint(
            &self,
            to: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([64, 208, 151, 195], to)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `safeTransferFrom` (0x42842e0e) function
        pub fn safe_transfer_from(
            &self,
            from: ::ethers::core::types::Address,
            to: ::ethers::core::types::Address,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([66, 132, 46, 14], (from, to, token_id))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `safeTransferFrom` (0xb88d4fde) function
        pub fn safe_transfer_from_with_from_and_to_and_data(
            &self,
            from: ::ethers::core::types::Address,
            to: ::ethers::core::types::Address,
            token_id: ::ethers::core::types::U256,
            data: ::ethers::core::types::Bytes,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([184, 141, 79, 222], (from, to, token_id, data))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `setApprovalForAll` (0xa22cb465) function
        pub fn set_approval_for_all(
            &self,
            operator: ::ethers::core::types::Address,
            approved: bool,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([162, 44, 180, 101], (operator, approved))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `supportsInterface` (0x01ffc9a7) function
        pub fn supports_interface(
            &self,
            interface_id: [u8; 4],
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([1, 255, 201, 167], interface_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `symbol` (0x95d89b41) function
        pub fn symbol(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::std::string::String> {
            self.0
                .method_hash([149, 216, 155, 65], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `tokenIdCounter` (0x98bdf6f5) function
        pub fn token_id_counter(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([152, 189, 246, 245], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `tokenURI` (0xc87b56dd) function
        pub fn token_uri(
            &self,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::std::string::String> {
            self.0
                .method_hash([200, 123, 86, 221], token_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `transferFrom` (0x23b872dd) function
        pub fn transfer_from(
            &self,
            from: ::ethers::core::types::Address,
            to: ::ethers::core::types::Address,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([35, 184, 114, 221], (from, to, token_id))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `transferOwnership` (0xf2fde38b) function
        pub fn transfer_ownership(
            &self,
            new_owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([242, 253, 227, 139], new_owner)
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `Approval` event
        pub fn approval_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            ApprovalFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `ApprovalForAll` event
        pub fn approval_for_all_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            ApprovalForAllFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `OwnershipHandoverCanceled` event
        pub fn ownership_handover_canceled_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            OwnershipHandoverCanceledFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `OwnershipHandoverRequested` event
        pub fn ownership_handover_requested_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            OwnershipHandoverRequestedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `OwnershipTransferred` event
        pub fn ownership_transferred_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            OwnershipTransferredFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `RolesUpdated` event
        pub fn roles_updated_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            RolesUpdatedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `Transfer` event
        pub fn transfer_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            TransferFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            DamnValuableNFTEvents,
        > {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for DamnValuableNFT<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `NewOwnerIsZeroAddress` with signature `NewOwnerIsZeroAddress()` and selector `0x7448fbae`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "NewOwnerIsZeroAddress", abi = "NewOwnerIsZeroAddress()")]
    pub struct NewOwnerIsZeroAddress;
    ///Custom Error type `NoHandoverRequest` with signature `NoHandoverRequest()` and selector `0x6f5e8818`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "NoHandoverRequest", abi = "NoHandoverRequest()")]
    pub struct NoHandoverRequest;
    ///Custom Error type `Unauthorized` with signature `Unauthorized()` and selector `0x82b42900`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "Unauthorized", abi = "Unauthorized()")]
    pub struct Unauthorized;
    ///Container type for all of the contract's custom errors
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum DamnValuableNFTErrors {
        NewOwnerIsZeroAddress(NewOwnerIsZeroAddress),
        NoHandoverRequest(NoHandoverRequest),
        Unauthorized(Unauthorized),
        /// The standard solidity revert string, with selector
        /// Error(string) -- 0x08c379a0
        RevertString(::std::string::String),
    }
    impl ::ethers::core::abi::AbiDecode for DamnValuableNFTErrors {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <::std::string::String as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RevertString(decoded));
            }
            if let Ok(decoded)
                = <NewOwnerIsZeroAddress as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::NewOwnerIsZeroAddress(decoded));
            }
            if let Ok(decoded)
                = <NoHandoverRequest as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::NoHandoverRequest(decoded));
            }
            if let Ok(decoded)
                = <Unauthorized as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Unauthorized(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for DamnValuableNFTErrors {
        fn encode(self) -> ::std::vec::Vec<u8> {
            match self {
                Self::NewOwnerIsZeroAddress(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::NoHandoverRequest(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Unauthorized(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RevertString(s) => ::ethers::core::abi::AbiEncode::encode(s),
            }
        }
    }
    impl ::ethers::contract::ContractRevert for DamnValuableNFTErrors {
        fn valid_selector(selector: [u8; 4]) -> bool {
            match selector {
                [0x08, 0xc3, 0x79, 0xa0] => true,
                _ if selector
                    == <NewOwnerIsZeroAddress as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <NoHandoverRequest as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <Unauthorized as ::ethers::contract::EthError>::selector() => true,
                _ => false,
            }
        }
    }
    impl ::core::fmt::Display for DamnValuableNFTErrors {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::NewOwnerIsZeroAddress(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::NoHandoverRequest(element) => ::core::fmt::Display::fmt(element, f),
                Self::Unauthorized(element) => ::core::fmt::Display::fmt(element, f),
                Self::RevertString(s) => ::core::fmt::Display::fmt(s, f),
            }
        }
    }
    impl ::core::convert::From<::std::string::String> for DamnValuableNFTErrors {
        fn from(value: String) -> Self {
            Self::RevertString(value)
        }
    }
    impl ::core::convert::From<NewOwnerIsZeroAddress> for DamnValuableNFTErrors {
        fn from(value: NewOwnerIsZeroAddress) -> Self {
            Self::NewOwnerIsZeroAddress(value)
        }
    }
    impl ::core::convert::From<NoHandoverRequest> for DamnValuableNFTErrors {
        fn from(value: NoHandoverRequest) -> Self {
            Self::NoHandoverRequest(value)
        }
    }
    impl ::core::convert::From<Unauthorized> for DamnValuableNFTErrors {
        fn from(value: Unauthorized) -> Self {
            Self::Unauthorized(value)
        }
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "Approval", abi = "Approval(address,address,uint256)")]
    pub struct ApprovalFilter {
        #[ethevent(indexed)]
        pub owner: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub approved: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub token_id: ::ethers::core::types::U256,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "ApprovalForAll", abi = "ApprovalForAll(address,address,bool)")]
    pub struct ApprovalForAllFilter {
        #[ethevent(indexed)]
        pub owner: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub operator: ::ethers::core::types::Address,
        pub approved: bool,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "OwnershipHandoverCanceled",
        abi = "OwnershipHandoverCanceled(address)"
    )]
    pub struct OwnershipHandoverCanceledFilter {
        #[ethevent(indexed)]
        pub pending_owner: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "OwnershipHandoverRequested",
        abi = "OwnershipHandoverRequested(address)"
    )]
    pub struct OwnershipHandoverRequestedFilter {
        #[ethevent(indexed)]
        pub pending_owner: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "OwnershipTransferred",
        abi = "OwnershipTransferred(address,address)"
    )]
    pub struct OwnershipTransferredFilter {
        #[ethevent(indexed)]
        pub old_owner: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub new_owner: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "RolesUpdated", abi = "RolesUpdated(address,uint256)")]
    pub struct RolesUpdatedFilter {
        #[ethevent(indexed)]
        pub user: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub roles: ::ethers::core::types::U256,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "Transfer", abi = "Transfer(address,address,uint256)")]
    pub struct TransferFilter {
        #[ethevent(indexed)]
        pub from: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub to: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all of the contract's events
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum DamnValuableNFTEvents {
        ApprovalFilter(ApprovalFilter),
        ApprovalForAllFilter(ApprovalForAllFilter),
        OwnershipHandoverCanceledFilter(OwnershipHandoverCanceledFilter),
        OwnershipHandoverRequestedFilter(OwnershipHandoverRequestedFilter),
        OwnershipTransferredFilter(OwnershipTransferredFilter),
        RolesUpdatedFilter(RolesUpdatedFilter),
        TransferFilter(TransferFilter),
    }
    impl ::ethers::contract::EthLogDecode for DamnValuableNFTEvents {
        fn decode_log(
            log: &::ethers::core::abi::RawLog,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::Error> {
            if let Ok(decoded) = ApprovalFilter::decode_log(log) {
                return Ok(DamnValuableNFTEvents::ApprovalFilter(decoded));
            }
            if let Ok(decoded) = ApprovalForAllFilter::decode_log(log) {
                return Ok(DamnValuableNFTEvents::ApprovalForAllFilter(decoded));
            }
            if let Ok(decoded) = OwnershipHandoverCanceledFilter::decode_log(log) {
                return Ok(
                    DamnValuableNFTEvents::OwnershipHandoverCanceledFilter(decoded),
                );
            }
            if let Ok(decoded) = OwnershipHandoverRequestedFilter::decode_log(log) {
                return Ok(
                    DamnValuableNFTEvents::OwnershipHandoverRequestedFilter(decoded),
                );
            }
            if let Ok(decoded) = OwnershipTransferredFilter::decode_log(log) {
                return Ok(DamnValuableNFTEvents::OwnershipTransferredFilter(decoded));
            }
            if let Ok(decoded) = RolesUpdatedFilter::decode_log(log) {
                return Ok(DamnValuableNFTEvents::RolesUpdatedFilter(decoded));
            }
            if let Ok(decoded) = TransferFilter::decode_log(log) {
                return Ok(DamnValuableNFTEvents::TransferFilter(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for DamnValuableNFTEvents {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::ApprovalFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::ApprovalForAllFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::OwnershipHandoverCanceledFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::OwnershipHandoverRequestedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::OwnershipTransferredFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::RolesUpdatedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::TransferFilter(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<ApprovalFilter> for DamnValuableNFTEvents {
        fn from(value: ApprovalFilter) -> Self {
            Self::ApprovalFilter(value)
        }
    }
    impl ::core::convert::From<ApprovalForAllFilter> for DamnValuableNFTEvents {
        fn from(value: ApprovalForAllFilter) -> Self {
            Self::ApprovalForAllFilter(value)
        }
    }
    impl ::core::convert::From<OwnershipHandoverCanceledFilter>
    for DamnValuableNFTEvents {
        fn from(value: OwnershipHandoverCanceledFilter) -> Self {
            Self::OwnershipHandoverCanceledFilter(value)
        }
    }
    impl ::core::convert::From<OwnershipHandoverRequestedFilter>
    for DamnValuableNFTEvents {
        fn from(value: OwnershipHandoverRequestedFilter) -> Self {
            Self::OwnershipHandoverRequestedFilter(value)
        }
    }
    impl ::core::convert::From<OwnershipTransferredFilter> for DamnValuableNFTEvents {
        fn from(value: OwnershipTransferredFilter) -> Self {
            Self::OwnershipTransferredFilter(value)
        }
    }
    impl ::core::convert::From<RolesUpdatedFilter> for DamnValuableNFTEvents {
        fn from(value: RolesUpdatedFilter) -> Self {
            Self::RolesUpdatedFilter(value)
        }
    }
    impl ::core::convert::From<TransferFilter> for DamnValuableNFTEvents {
        fn from(value: TransferFilter) -> Self {
            Self::TransferFilter(value)
        }
    }
    ///Container type for all input parameters for the `MINTER_ROLE` function with signature `MINTER_ROLE()` and selector `0xd5391393`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "MINTER_ROLE", abi = "MINTER_ROLE()")]
    pub struct MinterRoleCall;
    ///Container type for all input parameters for the `approve` function with signature `approve(address,uint256)` and selector `0x095ea7b3`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "approve", abi = "approve(address,uint256)")]
    pub struct ApproveCall {
        pub to: ::ethers::core::types::Address,
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `balanceOf` function with signature `balanceOf(address)` and selector `0x70a08231`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "balanceOf", abi = "balanceOf(address)")]
    pub struct BalanceOfCall {
        pub owner: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `burn` function with signature `burn(uint256)` and selector `0x42966c68`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "burn", abi = "burn(uint256)")]
    pub struct BurnCall {
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `cancelOwnershipHandover` function with signature `cancelOwnershipHandover()` and selector `0x54d1f13d`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "cancelOwnershipHandover", abi = "cancelOwnershipHandover()")]
    pub struct CancelOwnershipHandoverCall;
    ///Container type for all input parameters for the `completeOwnershipHandover` function with signature `completeOwnershipHandover(address)` and selector `0xf04e283e`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "completeOwnershipHandover",
        abi = "completeOwnershipHandover(address)"
    )]
    pub struct CompleteOwnershipHandoverCall {
        pub pending_owner: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `getApproved` function with signature `getApproved(uint256)` and selector `0x081812fc`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "getApproved", abi = "getApproved(uint256)")]
    pub struct GetApprovedCall {
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `grantRoles` function with signature `grantRoles(address,uint256)` and selector `0x1c10893f`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "grantRoles", abi = "grantRoles(address,uint256)")]
    pub struct GrantRolesCall {
        pub user: ::ethers::core::types::Address,
        pub roles: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `hasAllRoles` function with signature `hasAllRoles(address,uint256)` and selector `0x1cd64df4`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "hasAllRoles", abi = "hasAllRoles(address,uint256)")]
    pub struct HasAllRolesCall {
        pub user: ::ethers::core::types::Address,
        pub roles: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `hasAnyRole` function with signature `hasAnyRole(address,uint256)` and selector `0x514e62fc`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "hasAnyRole", abi = "hasAnyRole(address,uint256)")]
    pub struct HasAnyRoleCall {
        pub user: ::ethers::core::types::Address,
        pub roles: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `isApprovedForAll` function with signature `isApprovedForAll(address,address)` and selector `0xe985e9c5`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "isApprovedForAll", abi = "isApprovedForAll(address,address)")]
    pub struct IsApprovedForAllCall {
        pub owner: ::ethers::core::types::Address,
        pub operator: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `name` function with signature `name()` and selector `0x06fdde03`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "name", abi = "name()")]
    pub struct NameCall;
    ///Container type for all input parameters for the `ordinalsFromRoles` function with signature `ordinalsFromRoles(uint256)` and selector `0x7359e41f`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "ordinalsFromRoles", abi = "ordinalsFromRoles(uint256)")]
    pub struct OrdinalsFromRolesCall {
        pub roles: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `owner` function with signature `owner()` and selector `0x8da5cb5b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "owner", abi = "owner()")]
    pub struct OwnerCall;
    ///Container type for all input parameters for the `ownerOf` function with signature `ownerOf(uint256)` and selector `0x6352211e`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "ownerOf", abi = "ownerOf(uint256)")]
    pub struct OwnerOfCall {
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `ownershipHandoverExpiresAt` function with signature `ownershipHandoverExpiresAt(address)` and selector `0xfee81cf4`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "ownershipHandoverExpiresAt",
        abi = "ownershipHandoverExpiresAt(address)"
    )]
    pub struct OwnershipHandoverExpiresAtCall {
        pub pending_owner: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `ownershipHandoverValidFor` function with signature `ownershipHandoverValidFor()` and selector `0xd7533f02`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "ownershipHandoverValidFor", abi = "ownershipHandoverValidFor()")]
    pub struct OwnershipHandoverValidForCall;
    ///Container type for all input parameters for the `renounceOwnership` function with signature `renounceOwnership()` and selector `0x715018a6`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "renounceOwnership", abi = "renounceOwnership()")]
    pub struct RenounceOwnershipCall;
    ///Container type for all input parameters for the `renounceRoles` function with signature `renounceRoles(uint256)` and selector `0x183a4f6e`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "renounceRoles", abi = "renounceRoles(uint256)")]
    pub struct RenounceRolesCall {
        pub roles: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `requestOwnershipHandover` function with signature `requestOwnershipHandover()` and selector `0x25692962`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "requestOwnershipHandover", abi = "requestOwnershipHandover()")]
    pub struct RequestOwnershipHandoverCall;
    ///Container type for all input parameters for the `revokeRoles` function with signature `revokeRoles(address,uint256)` and selector `0x4a4ee7b1`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "revokeRoles", abi = "revokeRoles(address,uint256)")]
    pub struct RevokeRolesCall {
        pub user: ::ethers::core::types::Address,
        pub roles: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `rolesFromOrdinals` function with signature `rolesFromOrdinals(uint8[])` and selector `0x13a661ed`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "rolesFromOrdinals", abi = "rolesFromOrdinals(uint8[])")]
    pub struct RolesFromOrdinalsCall {
        pub ordinals: ::std::vec::Vec<u8>,
    }
    ///Container type for all input parameters for the `rolesOf` function with signature `rolesOf(address)` and selector `0x2de94807`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "rolesOf", abi = "rolesOf(address)")]
    pub struct RolesOfCall {
        pub user: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `safeMint` function with signature `safeMint(address)` and selector `0x40d097c3`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "safeMint", abi = "safeMint(address)")]
    pub struct SafeMintCall {
        pub to: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `safeTransferFrom` function with signature `safeTransferFrom(address,address,uint256)` and selector `0x42842e0e`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "safeTransferFrom",
        abi = "safeTransferFrom(address,address,uint256)"
    )]
    pub struct SafeTransferFromCall {
        pub from: ::ethers::core::types::Address,
        pub to: ::ethers::core::types::Address,
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `safeTransferFrom` function with signature `safeTransferFrom(address,address,uint256,bytes)` and selector `0xb88d4fde`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "safeTransferFrom",
        abi = "safeTransferFrom(address,address,uint256,bytes)"
    )]
    pub struct SafeTransferFromWithFromAndToAndDataCall {
        pub from: ::ethers::core::types::Address,
        pub to: ::ethers::core::types::Address,
        pub token_id: ::ethers::core::types::U256,
        pub data: ::ethers::core::types::Bytes,
    }
    ///Container type for all input parameters for the `setApprovalForAll` function with signature `setApprovalForAll(address,bool)` and selector `0xa22cb465`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "setApprovalForAll", abi = "setApprovalForAll(address,bool)")]
    pub struct SetApprovalForAllCall {
        pub operator: ::ethers::core::types::Address,
        pub approved: bool,
    }
    ///Container type for all input parameters for the `supportsInterface` function with signature `supportsInterface(bytes4)` and selector `0x01ffc9a7`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "supportsInterface", abi = "supportsInterface(bytes4)")]
    pub struct SupportsInterfaceCall {
        pub interface_id: [u8; 4],
    }
    ///Container type for all input parameters for the `symbol` function with signature `symbol()` and selector `0x95d89b41`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "symbol", abi = "symbol()")]
    pub struct SymbolCall;
    ///Container type for all input parameters for the `tokenIdCounter` function with signature `tokenIdCounter()` and selector `0x98bdf6f5`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "tokenIdCounter", abi = "tokenIdCounter()")]
    pub struct TokenIdCounterCall;
    ///Container type for all input parameters for the `tokenURI` function with signature `tokenURI(uint256)` and selector `0xc87b56dd`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "tokenURI", abi = "tokenURI(uint256)")]
    pub struct TokenURICall {
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `transferFrom` function with signature `transferFrom(address,address,uint256)` and selector `0x23b872dd`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "transferFrom", abi = "transferFrom(address,address,uint256)")]
    pub struct TransferFromCall {
        pub from: ::ethers::core::types::Address,
        pub to: ::ethers::core::types::Address,
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `transferOwnership` function with signature `transferOwnership(address)` and selector `0xf2fde38b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "transferOwnership", abi = "transferOwnership(address)")]
    pub struct TransferOwnershipCall {
        pub new_owner: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum DamnValuableNFTCalls {
        MinterRole(MinterRoleCall),
        Approve(ApproveCall),
        BalanceOf(BalanceOfCall),
        Burn(BurnCall),
        CancelOwnershipHandover(CancelOwnershipHandoverCall),
        CompleteOwnershipHandover(CompleteOwnershipHandoverCall),
        GetApproved(GetApprovedCall),
        GrantRoles(GrantRolesCall),
        HasAllRoles(HasAllRolesCall),
        HasAnyRole(HasAnyRoleCall),
        IsApprovedForAll(IsApprovedForAllCall),
        Name(NameCall),
        OrdinalsFromRoles(OrdinalsFromRolesCall),
        Owner(OwnerCall),
        OwnerOf(OwnerOfCall),
        OwnershipHandoverExpiresAt(OwnershipHandoverExpiresAtCall),
        OwnershipHandoverValidFor(OwnershipHandoverValidForCall),
        RenounceOwnership(RenounceOwnershipCall),
        RenounceRoles(RenounceRolesCall),
        RequestOwnershipHandover(RequestOwnershipHandoverCall),
        RevokeRoles(RevokeRolesCall),
        RolesFromOrdinals(RolesFromOrdinalsCall),
        RolesOf(RolesOfCall),
        SafeMint(SafeMintCall),
        SafeTransferFrom(SafeTransferFromCall),
        SafeTransferFromWithFromAndToAndData(SafeTransferFromWithFromAndToAndDataCall),
        SetApprovalForAll(SetApprovalForAllCall),
        SupportsInterface(SupportsInterfaceCall),
        Symbol(SymbolCall),
        TokenIdCounter(TokenIdCounterCall),
        TokenURI(TokenURICall),
        TransferFrom(TransferFromCall),
        TransferOwnership(TransferOwnershipCall),
    }
    impl ::ethers::core::abi::AbiDecode for DamnValuableNFTCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <MinterRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::MinterRole(decoded));
            }
            if let Ok(decoded)
                = <ApproveCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Approve(decoded));
            }
            if let Ok(decoded)
                = <BalanceOfCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::BalanceOf(decoded));
            }
            if let Ok(decoded)
                = <BurnCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Burn(decoded));
            }
            if let Ok(decoded)
                = <CancelOwnershipHandoverCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::CancelOwnershipHandover(decoded));
            }
            if let Ok(decoded)
                = <CompleteOwnershipHandoverCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::CompleteOwnershipHandover(decoded));
            }
            if let Ok(decoded)
                = <GetApprovedCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetApproved(decoded));
            }
            if let Ok(decoded)
                = <GrantRolesCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GrantRoles(decoded));
            }
            if let Ok(decoded)
                = <HasAllRolesCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::HasAllRoles(decoded));
            }
            if let Ok(decoded)
                = <HasAnyRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::HasAnyRole(decoded));
            }
            if let Ok(decoded)
                = <IsApprovedForAllCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::IsApprovedForAll(decoded));
            }
            if let Ok(decoded)
                = <NameCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Name(decoded));
            }
            if let Ok(decoded)
                = <OrdinalsFromRolesCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::OrdinalsFromRoles(decoded));
            }
            if let Ok(decoded)
                = <OwnerCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Owner(decoded));
            }
            if let Ok(decoded)
                = <OwnerOfCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::OwnerOf(decoded));
            }
            if let Ok(decoded)
                = <OwnershipHandoverExpiresAtCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::OwnershipHandoverExpiresAt(decoded));
            }
            if let Ok(decoded)
                = <OwnershipHandoverValidForCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::OwnershipHandoverValidFor(decoded));
            }
            if let Ok(decoded)
                = <RenounceOwnershipCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RenounceOwnership(decoded));
            }
            if let Ok(decoded)
                = <RenounceRolesCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RenounceRoles(decoded));
            }
            if let Ok(decoded)
                = <RequestOwnershipHandoverCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RequestOwnershipHandover(decoded));
            }
            if let Ok(decoded)
                = <RevokeRolesCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RevokeRoles(decoded));
            }
            if let Ok(decoded)
                = <RolesFromOrdinalsCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RolesFromOrdinals(decoded));
            }
            if let Ok(decoded)
                = <RolesOfCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RolesOf(decoded));
            }
            if let Ok(decoded)
                = <SafeMintCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::SafeMint(decoded));
            }
            if let Ok(decoded)
                = <SafeTransferFromCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::SafeTransferFrom(decoded));
            }
            if let Ok(decoded)
                = <SafeTransferFromWithFromAndToAndDataCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::SafeTransferFromWithFromAndToAndData(decoded));
            }
            if let Ok(decoded)
                = <SetApprovalForAllCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::SetApprovalForAll(decoded));
            }
            if let Ok(decoded)
                = <SupportsInterfaceCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::SupportsInterface(decoded));
            }
            if let Ok(decoded)
                = <SymbolCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Symbol(decoded));
            }
            if let Ok(decoded)
                = <TokenIdCounterCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::TokenIdCounter(decoded));
            }
            if let Ok(decoded)
                = <TokenURICall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::TokenURI(decoded));
            }
            if let Ok(decoded)
                = <TransferFromCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::TransferFrom(decoded));
            }
            if let Ok(decoded)
                = <TransferOwnershipCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::TransferOwnership(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for DamnValuableNFTCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::MinterRole(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Approve(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::BalanceOf(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Burn(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::CancelOwnershipHandover(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::CompleteOwnershipHandover(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GetApproved(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GrantRoles(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::HasAllRoles(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::HasAnyRole(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::IsApprovedForAll(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Name(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::OrdinalsFromRoles(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Owner(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::OwnerOf(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::OwnershipHandoverExpiresAt(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::OwnershipHandoverValidFor(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RenounceOwnership(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RenounceRoles(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RequestOwnershipHandover(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RevokeRoles(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RolesFromOrdinals(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RolesOf(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::SafeMint(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::SafeTransferFrom(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::SafeTransferFromWithFromAndToAndData(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::SetApprovalForAll(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::SupportsInterface(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Symbol(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::TokenIdCounter(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::TokenURI(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::TransferFrom(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::TransferOwnership(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for DamnValuableNFTCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::MinterRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::Approve(element) => ::core::fmt::Display::fmt(element, f),
                Self::BalanceOf(element) => ::core::fmt::Display::fmt(element, f),
                Self::Burn(element) => ::core::fmt::Display::fmt(element, f),
                Self::CancelOwnershipHandover(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::CompleteOwnershipHandover(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::GetApproved(element) => ::core::fmt::Display::fmt(element, f),
                Self::GrantRoles(element) => ::core::fmt::Display::fmt(element, f),
                Self::HasAllRoles(element) => ::core::fmt::Display::fmt(element, f),
                Self::HasAnyRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::IsApprovedForAll(element) => ::core::fmt::Display::fmt(element, f),
                Self::Name(element) => ::core::fmt::Display::fmt(element, f),
                Self::OrdinalsFromRoles(element) => ::core::fmt::Display::fmt(element, f),
                Self::Owner(element) => ::core::fmt::Display::fmt(element, f),
                Self::OwnerOf(element) => ::core::fmt::Display::fmt(element, f),
                Self::OwnershipHandoverExpiresAt(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::OwnershipHandoverValidFor(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::RenounceOwnership(element) => ::core::fmt::Display::fmt(element, f),
                Self::RenounceRoles(element) => ::core::fmt::Display::fmt(element, f),
                Self::RequestOwnershipHandover(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::RevokeRoles(element) => ::core::fmt::Display::fmt(element, f),
                Self::RolesFromOrdinals(element) => ::core::fmt::Display::fmt(element, f),
                Self::RolesOf(element) => ::core::fmt::Display::fmt(element, f),
                Self::SafeMint(element) => ::core::fmt::Display::fmt(element, f),
                Self::SafeTransferFrom(element) => ::core::fmt::Display::fmt(element, f),
                Self::SafeTransferFromWithFromAndToAndData(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::SetApprovalForAll(element) => ::core::fmt::Display::fmt(element, f),
                Self::SupportsInterface(element) => ::core::fmt::Display::fmt(element, f),
                Self::Symbol(element) => ::core::fmt::Display::fmt(element, f),
                Self::TokenIdCounter(element) => ::core::fmt::Display::fmt(element, f),
                Self::TokenURI(element) => ::core::fmt::Display::fmt(element, f),
                Self::TransferFrom(element) => ::core::fmt::Display::fmt(element, f),
                Self::TransferOwnership(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<MinterRoleCall> for DamnValuableNFTCalls {
        fn from(value: MinterRoleCall) -> Self {
            Self::MinterRole(value)
        }
    }
    impl ::core::convert::From<ApproveCall> for DamnValuableNFTCalls {
        fn from(value: ApproveCall) -> Self {
            Self::Approve(value)
        }
    }
    impl ::core::convert::From<BalanceOfCall> for DamnValuableNFTCalls {
        fn from(value: BalanceOfCall) -> Self {
            Self::BalanceOf(value)
        }
    }
    impl ::core::convert::From<BurnCall> for DamnValuableNFTCalls {
        fn from(value: BurnCall) -> Self {
            Self::Burn(value)
        }
    }
    impl ::core::convert::From<CancelOwnershipHandoverCall> for DamnValuableNFTCalls {
        fn from(value: CancelOwnershipHandoverCall) -> Self {
            Self::CancelOwnershipHandover(value)
        }
    }
    impl ::core::convert::From<CompleteOwnershipHandoverCall> for DamnValuableNFTCalls {
        fn from(value: CompleteOwnershipHandoverCall) -> Self {
            Self::CompleteOwnershipHandover(value)
        }
    }
    impl ::core::convert::From<GetApprovedCall> for DamnValuableNFTCalls {
        fn from(value: GetApprovedCall) -> Self {
            Self::GetApproved(value)
        }
    }
    impl ::core::convert::From<GrantRolesCall> for DamnValuableNFTCalls {
        fn from(value: GrantRolesCall) -> Self {
            Self::GrantRoles(value)
        }
    }
    impl ::core::convert::From<HasAllRolesCall> for DamnValuableNFTCalls {
        fn from(value: HasAllRolesCall) -> Self {
            Self::HasAllRoles(value)
        }
    }
    impl ::core::convert::From<HasAnyRoleCall> for DamnValuableNFTCalls {
        fn from(value: HasAnyRoleCall) -> Self {
            Self::HasAnyRole(value)
        }
    }
    impl ::core::convert::From<IsApprovedForAllCall> for DamnValuableNFTCalls {
        fn from(value: IsApprovedForAllCall) -> Self {
            Self::IsApprovedForAll(value)
        }
    }
    impl ::core::convert::From<NameCall> for DamnValuableNFTCalls {
        fn from(value: NameCall) -> Self {
            Self::Name(value)
        }
    }
    impl ::core::convert::From<OrdinalsFromRolesCall> for DamnValuableNFTCalls {
        fn from(value: OrdinalsFromRolesCall) -> Self {
            Self::OrdinalsFromRoles(value)
        }
    }
    impl ::core::convert::From<OwnerCall> for DamnValuableNFTCalls {
        fn from(value: OwnerCall) -> Self {
            Self::Owner(value)
        }
    }
    impl ::core::convert::From<OwnerOfCall> for DamnValuableNFTCalls {
        fn from(value: OwnerOfCall) -> Self {
            Self::OwnerOf(value)
        }
    }
    impl ::core::convert::From<OwnershipHandoverExpiresAtCall> for DamnValuableNFTCalls {
        fn from(value: OwnershipHandoverExpiresAtCall) -> Self {
            Self::OwnershipHandoverExpiresAt(value)
        }
    }
    impl ::core::convert::From<OwnershipHandoverValidForCall> for DamnValuableNFTCalls {
        fn from(value: OwnershipHandoverValidForCall) -> Self {
            Self::OwnershipHandoverValidFor(value)
        }
    }
    impl ::core::convert::From<RenounceOwnershipCall> for DamnValuableNFTCalls {
        fn from(value: RenounceOwnershipCall) -> Self {
            Self::RenounceOwnership(value)
        }
    }
    impl ::core::convert::From<RenounceRolesCall> for DamnValuableNFTCalls {
        fn from(value: RenounceRolesCall) -> Self {
            Self::RenounceRoles(value)
        }
    }
    impl ::core::convert::From<RequestOwnershipHandoverCall> for DamnValuableNFTCalls {
        fn from(value: RequestOwnershipHandoverCall) -> Self {
            Self::RequestOwnershipHandover(value)
        }
    }
    impl ::core::convert::From<RevokeRolesCall> for DamnValuableNFTCalls {
        fn from(value: RevokeRolesCall) -> Self {
            Self::RevokeRoles(value)
        }
    }
    impl ::core::convert::From<RolesFromOrdinalsCall> for DamnValuableNFTCalls {
        fn from(value: RolesFromOrdinalsCall) -> Self {
            Self::RolesFromOrdinals(value)
        }
    }
    impl ::core::convert::From<RolesOfCall> for DamnValuableNFTCalls {
        fn from(value: RolesOfCall) -> Self {
            Self::RolesOf(value)
        }
    }
    impl ::core::convert::From<SafeMintCall> for DamnValuableNFTCalls {
        fn from(value: SafeMintCall) -> Self {
            Self::SafeMint(value)
        }
    }
    impl ::core::convert::From<SafeTransferFromCall> for DamnValuableNFTCalls {
        fn from(value: SafeTransferFromCall) -> Self {
            Self::SafeTransferFrom(value)
        }
    }
    impl ::core::convert::From<SafeTransferFromWithFromAndToAndDataCall>
    for DamnValuableNFTCalls {
        fn from(value: SafeTransferFromWithFromAndToAndDataCall) -> Self {
            Self::SafeTransferFromWithFromAndToAndData(value)
        }
    }
    impl ::core::convert::From<SetApprovalForAllCall> for DamnValuableNFTCalls {
        fn from(value: SetApprovalForAllCall) -> Self {
            Self::SetApprovalForAll(value)
        }
    }
    impl ::core::convert::From<SupportsInterfaceCall> for DamnValuableNFTCalls {
        fn from(value: SupportsInterfaceCall) -> Self {
            Self::SupportsInterface(value)
        }
    }
    impl ::core::convert::From<SymbolCall> for DamnValuableNFTCalls {
        fn from(value: SymbolCall) -> Self {
            Self::Symbol(value)
        }
    }
    impl ::core::convert::From<TokenIdCounterCall> for DamnValuableNFTCalls {
        fn from(value: TokenIdCounterCall) -> Self {
            Self::TokenIdCounter(value)
        }
    }
    impl ::core::convert::From<TokenURICall> for DamnValuableNFTCalls {
        fn from(value: TokenURICall) -> Self {
            Self::TokenURI(value)
        }
    }
    impl ::core::convert::From<TransferFromCall> for DamnValuableNFTCalls {
        fn from(value: TransferFromCall) -> Self {
            Self::TransferFrom(value)
        }
    }
    impl ::core::convert::From<TransferOwnershipCall> for DamnValuableNFTCalls {
        fn from(value: TransferOwnershipCall) -> Self {
            Self::TransferOwnership(value)
        }
    }
    ///Container type for all return fields from the `MINTER_ROLE` function with signature `MINTER_ROLE()` and selector `0xd5391393`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct MinterRoleReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `balanceOf` function with signature `balanceOf(address)` and selector `0x70a08231`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct BalanceOfReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `getApproved` function with signature `getApproved(uint256)` and selector `0x081812fc`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetApprovedReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `hasAllRoles` function with signature `hasAllRoles(address,uint256)` and selector `0x1cd64df4`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct HasAllRolesReturn {
        pub result: bool,
    }
    ///Container type for all return fields from the `hasAnyRole` function with signature `hasAnyRole(address,uint256)` and selector `0x514e62fc`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct HasAnyRoleReturn {
        pub result: bool,
    }
    ///Container type for all return fields from the `isApprovedForAll` function with signature `isApprovedForAll(address,address)` and selector `0xe985e9c5`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct IsApprovedForAllReturn(pub bool);
    ///Container type for all return fields from the `name` function with signature `name()` and selector `0x06fdde03`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct NameReturn(pub ::std::string::String);
    ///Container type for all return fields from the `ordinalsFromRoles` function with signature `ordinalsFromRoles(uint256)` and selector `0x7359e41f`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct OrdinalsFromRolesReturn {
        pub ordinals: ::std::vec::Vec<u8>,
    }
    ///Container type for all return fields from the `owner` function with signature `owner()` and selector `0x8da5cb5b`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct OwnerReturn {
        pub result: ::ethers::core::types::Address,
    }
    ///Container type for all return fields from the `ownerOf` function with signature `ownerOf(uint256)` and selector `0x6352211e`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct OwnerOfReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `ownershipHandoverExpiresAt` function with signature `ownershipHandoverExpiresAt(address)` and selector `0xfee81cf4`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct OwnershipHandoverExpiresAtReturn {
        pub result: ::ethers::core::types::U256,
    }
    ///Container type for all return fields from the `ownershipHandoverValidFor` function with signature `ownershipHandoverValidFor()` and selector `0xd7533f02`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct OwnershipHandoverValidForReturn(pub u64);
    ///Container type for all return fields from the `rolesFromOrdinals` function with signature `rolesFromOrdinals(uint8[])` and selector `0x13a661ed`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct RolesFromOrdinalsReturn {
        pub roles: ::ethers::core::types::U256,
    }
    ///Container type for all return fields from the `rolesOf` function with signature `rolesOf(address)` and selector `0x2de94807`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct RolesOfReturn {
        pub roles: ::ethers::core::types::U256,
    }
    ///Container type for all return fields from the `safeMint` function with signature `safeMint(address)` and selector `0x40d097c3`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct SafeMintReturn {
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all return fields from the `supportsInterface` function with signature `supportsInterface(bytes4)` and selector `0x01ffc9a7`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct SupportsInterfaceReturn(pub bool);
    ///Container type for all return fields from the `symbol` function with signature `symbol()` and selector `0x95d89b41`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct SymbolReturn(pub ::std::string::String);
    ///Container type for all return fields from the `tokenIdCounter` function with signature `tokenIdCounter()` and selector `0x98bdf6f5`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TokenIdCounterReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `tokenURI` function with signature `tokenURI(uint256)` and selector `0xc87b56dd`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TokenURIReturn(pub ::std::string::String);
}
