pub use module_manager::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod module_manager {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"DisabledModule\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"EnabledModule\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"ExecutionFromModuleFailure\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"ExecutionFromModuleSuccess\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevModule\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"disableModule\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"enableModule\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\",\"components\":[]},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"execTransactionFromModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\",\"components\":[]},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"execTransactionFromModuleReturnData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\",\"components\":[]},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"start\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"pageSize\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getModulesPaginated\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"array\",\"type\":\"address[]\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"next\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isModuleEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]}]";
    ///The parsed JSON ABI of the contract.
    pub static MODULEMANAGER_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> = ::ethers::contract::Lazy::new(||
    ::ethers::core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid"));
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        9,
        24,
        128,
        97,
        0,
        32,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        98,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        45,
        154,
        213,
        61,
        20,
        97,
        0,
        103,
        87,
        128,
        99,
        70,
        135,
        33,
        167,
        20,
        97,
        0,
        143,
        87,
        128,
        99,
        82,
        41,
        7,
        63,
        20,
        97,
        0,
        162,
        87,
        128,
        99,
        97,
        11,
        89,
        37,
        20,
        97,
        0,
        195,
        87,
        128,
        99,
        204,
        47,
        132,
        82,
        20,
        97,
        0,
        216,
        87,
        128,
        99,
        224,
        9,
        207,
        222,
        20,
        97,
        0,
        249,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        122,
        97,
        0,
        117,
        54,
        96,
        4,
        97,
        6,
        90,
        86,
        91,
        97,
        1,
        12,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        0,
        122,
        97,
        0,
        157,
        54,
        96,
        4,
        97,
        6,
        161,
        86,
        91,
        97,
        1,
        71,
        86,
        91,
        97,
        0,
        181,
        97,
        0,
        176,
        54,
        96,
        4,
        97,
        6,
        161,
        86,
        91,
        97,
        2,
        35,
        86,
        91,
        96,
        64,
        81,
        97,
        0,
        134,
        146,
        145,
        144,
        97,
        7,
        125,
        86,
        91,
        97,
        0,
        214,
        97,
        0,
        209,
        54,
        96,
        4,
        97,
        6,
        90,
        86,
        91,
        97,
        2,
        89,
        86,
        91,
        0,
        91,
        97,
        0,
        235,
        97,
        0,
        230,
        54,
        96,
        4,
        97,
        7,
        213,
        86,
        91,
        97,
        3,
        153,
        86,
        91,
        96,
        64,
        81,
        97,
        0,
        134,
        146,
        145,
        144,
        97,
        7,
        255,
        86,
        91,
        97,
        0,
        214,
        97,
        1,
        7,
        54,
        96,
        4,
        97,
        8,
        92,
        86,
        91,
        97,
        4,
        146,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        20,
        128,
        21,
        144,
        97,
        1,
        65,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        22,
        21,
        21,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        51,
        96,
        1,
        20,
        128,
        21,
        144,
        97,
        1,
        113,
        87,
        80,
        51,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        21,
        21,
        91,
        97,
        1,
        170,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        17,
        212,
        204,
        76,
        13,
        96,
        218,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        1,
        183,
        133,
        133,
        133,
        133,
        90,
        97,
        5,
        190,
        86,
        91,
        144,
        80,
        128,
        21,
        97,
        1,
        239,
        87,
        96,
        64,
        81,
        51,
        144,
        127,
        104,
        149,
        193,
        54,
        100,
        170,
        79,
        103,
        40,
        139,
        37,
        215,
        162,
        29,
        122,
        170,
        52,
        145,
        110,
        53,
        95,
        185,
        182,
        250,
        224,
        161,
        57,
        169,
        8,
        91,
        236,
        184,
        144,
        96,
        0,
        144,
        162,
        97,
        2,
        27,
        86,
        91,
        96,
        64,
        81,
        51,
        144,
        127,
        172,
        210,
        200,
        112,
        40,
        4,
        18,
        143,
        219,
        13,
        178,
        187,
        73,
        246,
        209,
        39,
        221,
        1,
        129,
        193,
        63,
        212,
        93,
        191,
        225,
        109,
        224,
        147,
        14,
        43,
        211,
        117,
        144,
        96,
        0,
        144,
        162,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        96,
        97,
        2,
        51,
        134,
        134,
        134,
        134,
        97,
        1,
        71,
        86,
        91,
        145,
        80,
        96,
        64,
        81,
        96,
        32,
        61,
        1,
        129,
        1,
        96,
        64,
        82,
        61,
        129,
        82,
        61,
        96,
        0,
        96,
        32,
        131,
        1,
        62,
        128,
        145,
        80,
        80,
        148,
        80,
        148,
        146,
        80,
        80,
        80,
        86,
        91,
        97,
        2,
        97,
        97,
        6,
        5,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        21,
        128,
        21,
        144,
        97,
        2,
        131,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        1,
        20,
        21,
        91,
        97,
        2,
        183,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        49,
        48,
        49,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        161,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        22,
        21,
        97,
        3,
        7,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        35,
        169,
        152,
        152,
        25,
        96,
        217,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        161,
        86,
        91,
        96,
        0,
        96,
        32,
        129,
        129,
        82,
        127,
        173,
        165,
        1,
        49,
        34,
        211,
        149,
        186,
        60,
        84,
        119,
        34,
        131,
        251,
        6,
        155,
        16,
        66,
        96,
        86,
        239,
        140,
        165,
        71,
        80,
        203,
        155,
        181,
        82,
        165,
        158,
        125,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        129,
        22,
        128,
        134,
        82,
        96,
        64,
        128,
        135,
        32,
        128,
        84,
        147,
        144,
        148,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        147,
        132,
        22,
        23,
        144,
        147,
        85,
        96,
        1,
        144,
        149,
        82,
        130,
        84,
        22,
        132,
        23,
        144,
        145,
        85,
        81,
        145,
        130,
        82,
        127,
        236,
        223,
        58,
        62,
        255,
        234,
        87,
        131,
        163,
        196,
        194,
        20,
        14,
        103,
        117,
        119,
        102,
        100,
        40,
        212,
        78,
        217,
        212,
        116,
        160,
        179,
        164,
        201,
        148,
        63,
        132,
        64,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        86,
        91,
        96,
        96,
        96,
        0,
        130,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        3,
        182,
        87,
        97,
        3,
        182,
        97,
        6,
        124,
        86,
        91,
        96,
        64,
        81,
        144,
        128,
        130,
        82,
        128,
        96,
        32,
        2,
        96,
        32,
        1,
        130,
        1,
        96,
        64,
        82,
        128,
        21,
        97,
        3,
        223,
        87,
        129,
        96,
        32,
        1,
        96,
        32,
        130,
        2,
        128,
        54,
        131,
        55,
        1,
        144,
        80,
        91,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        134,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        129,
        32,
        84,
        146,
        148,
        80,
        145,
        22,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        21,
        128,
        21,
        144,
        97,
        4,
        34,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        1,
        20,
        21,
        91,
        128,
        21,
        97,
        4,
        45,
        87,
        80,
        132,
        130,
        16,
        91,
        21,
        97,
        4,
        132,
        87,
        128,
        132,
        131,
        129,
        81,
        129,
        16,
        97,
        4,
        69,
        87,
        97,
        4,
        69,
        97,
        8,
        143,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        131,
        22,
        96,
        32,
        145,
        130,
        2,
        146,
        144,
        146,
        1,
        129,
        1,
        145,
        144,
        145,
        82,
        145,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        145,
        130,
        144,
        82,
        96,
        64,
        144,
        145,
        32,
        84,
        22,
        129,
        97,
        4,
        124,
        129,
        97,
        8,
        165,
        86,
        91,
        146,
        80,
        80,
        97,
        4,
        0,
        86,
        91,
        144,
        131,
        82,
        145,
        148,
        145,
        147,
        80,
        144,
        145,
        80,
        80,
        86,
        91,
        97,
        4,
        154,
        97,
        6,
        5,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        21,
        128,
        21,
        144,
        97,
        4,
        188,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        1,
        20,
        21,
        91,
        97,
        4,
        240,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        49,
        48,
        49,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        161,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        22,
        144,
        130,
        22,
        20,
        97,
        5,
        68,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        49,
        48,
        51,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        161,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        128,
        84,
        136,
        135,
        22,
        133,
        82,
        130,
        133,
        32,
        128,
        84,
        145,
        144,
        151,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        145,
        130,
        22,
        23,
        144,
        150,
        85,
        146,
        132,
        144,
        82,
        130,
        84,
        144,
        148,
        22,
        144,
        145,
        85,
        145,
        81,
        144,
        129,
        82,
        127,
        170,
        180,
        250,
        43,
        70,
        63,
        88,
        27,
        43,
        50,
        203,
        59,
        126,
        59,
        112,
        75,
        156,
        227,
        124,
        194,
        9,
        181,
        251,
        77,
        119,
        229,
        147,
        172,
        228,
        5,
        66,
        118,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        1,
        131,
        96,
        1,
        129,
        17,
        21,
        97,
        5,
        212,
        87,
        97,
        5,
        212,
        97,
        8,
        204,
        86,
        91,
        3,
        97,
        5,
        236,
        87,
        96,
        0,
        128,
        133,
        81,
        96,
        32,
        135,
        1,
        137,
        134,
        244,
        144,
        80,
        97,
        5,
        252,
        86,
        91,
        96,
        0,
        128,
        133,
        81,
        96,
        32,
        135,
        1,
        136,
        138,
        135,
        241,
        144,
        80,
        91,
        149,
        148,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        51,
        48,
        20,
        97,
        6,
        60,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        48,
        51,
        49,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        161,
        86,
        91,
        86,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        6,
        85,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        6,
        108,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        6,
        117,
        130,
        97,
        6,
        62,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        128,
        53,
        96,
        2,
        129,
        16,
        97,
        6,
        85,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        128,
        133,
        135,
        3,
        18,
        21,
        97,
        6,
        183,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        6,
        192,
        133,
        97,
        6,
        62,
        86,
        91,
        147,
        80,
        96,
        32,
        133,
        1,
        53,
        146,
        80,
        96,
        64,
        133,
        1,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        6,
        228,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        135,
        1,
        145,
        80,
        135,
        96,
        31,
        131,
        1,
        18,
        97,
        6,
        248,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        129,
        129,
        17,
        21,
        97,
        7,
        10,
        87,
        97,
        7,
        10,
        97,
        6,
        124,
        86,
        91,
        96,
        64,
        81,
        96,
        31,
        130,
        1,
        96,
        31,
        25,
        144,
        129,
        22,
        96,
        63,
        1,
        22,
        129,
        1,
        144,
        131,
        130,
        17,
        129,
        131,
        16,
        23,
        21,
        97,
        7,
        50,
        87,
        97,
        7,
        50,
        97,
        6,
        124,
        86,
        91,
        129,
        96,
        64,
        82,
        130,
        129,
        82,
        138,
        96,
        32,
        132,
        135,
        1,
        1,
        17,
        21,
        97,
        7,
        75,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        96,
        32,
        134,
        1,
        96,
        32,
        131,
        1,
        55,
        96,
        0,
        96,
        32,
        132,
        131,
        1,
        1,
        82,
        128,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        97,
        7,
        114,
        96,
        96,
        134,
        1,
        97,
        6,
        146,
        86,
        91,
        144,
        80,
        146,
        149,
        145,
        148,
        80,
        146,
        80,
        86,
        91,
        130,
        21,
        21,
        129,
        82,
        96,
        0,
        96,
        32,
        96,
        64,
        129,
        132,
        1,
        82,
        131,
        81,
        128,
        96,
        64,
        133,
        1,
        82,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        7,
        179,
        87,
        133,
        129,
        1,
        131,
        1,
        81,
        133,
        130,
        1,
        96,
        96,
        1,
        82,
        130,
        1,
        97,
        7,
        151,
        86,
        91,
        80,
        96,
        0,
        96,
        96,
        130,
        134,
        1,
        1,
        82,
        96,
        96,
        96,
        31,
        25,
        96,
        31,
        131,
        1,
        22,
        133,
        1,
        1,
        146,
        80,
        80,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        7,
        232,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        7,
        241,
        131,
        97,
        6,
        62,
        86,
        91,
        148,
        96,
        32,
        147,
        144,
        147,
        1,
        53,
        147,
        80,
        80,
        80,
        86,
        91,
        96,
        64,
        128,
        130,
        82,
        131,
        81,
        144,
        130,
        1,
        129,
        144,
        82,
        96,
        0,
        144,
        96,
        32,
        144,
        96,
        96,
        132,
        1,
        144,
        130,
        135,
        1,
        132,
        91,
        130,
        129,
        16,
        21,
        97,
        8,
        65,
        87,
        129,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        132,
        82,
        146,
        132,
        1,
        146,
        144,
        132,
        1,
        144,
        96,
        1,
        1,
        97,
        8,
        28,
        86,
        91,
        80,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        148,
        144,
        148,
        22,
        146,
        1,
        145,
        144,
        145,
        82,
        80,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        8,
        111,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        8,
        120,
        131,
        97,
        6,
        62,
        86,
        91,
        145,
        80,
        97,
        8,
        134,
        96,
        32,
        132,
        1,
        97,
        6,
        62,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        96,
        1,
        130,
        1,
        97,
        8,
        197,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        96,
        1,
        1,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        33,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        92,
        101,
        226,
        196,
        249,
        73,
        82,
        212,
        195,
        102,
        200,
        38,
        177,
        104,
        114,
        227,
        10,
        102,
        105,
        179,
        19,
        238,
        70,
        110,
        34,
        103,
        22,
        22,
        252,
        243,
        87,
        9,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        20,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static MODULEMANAGER_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        98,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        45,
        154,
        213,
        61,
        20,
        97,
        0,
        103,
        87,
        128,
        99,
        70,
        135,
        33,
        167,
        20,
        97,
        0,
        143,
        87,
        128,
        99,
        82,
        41,
        7,
        63,
        20,
        97,
        0,
        162,
        87,
        128,
        99,
        97,
        11,
        89,
        37,
        20,
        97,
        0,
        195,
        87,
        128,
        99,
        204,
        47,
        132,
        82,
        20,
        97,
        0,
        216,
        87,
        128,
        99,
        224,
        9,
        207,
        222,
        20,
        97,
        0,
        249,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        122,
        97,
        0,
        117,
        54,
        96,
        4,
        97,
        6,
        90,
        86,
        91,
        97,
        1,
        12,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        0,
        122,
        97,
        0,
        157,
        54,
        96,
        4,
        97,
        6,
        161,
        86,
        91,
        97,
        1,
        71,
        86,
        91,
        97,
        0,
        181,
        97,
        0,
        176,
        54,
        96,
        4,
        97,
        6,
        161,
        86,
        91,
        97,
        2,
        35,
        86,
        91,
        96,
        64,
        81,
        97,
        0,
        134,
        146,
        145,
        144,
        97,
        7,
        125,
        86,
        91,
        97,
        0,
        214,
        97,
        0,
        209,
        54,
        96,
        4,
        97,
        6,
        90,
        86,
        91,
        97,
        2,
        89,
        86,
        91,
        0,
        91,
        97,
        0,
        235,
        97,
        0,
        230,
        54,
        96,
        4,
        97,
        7,
        213,
        86,
        91,
        97,
        3,
        153,
        86,
        91,
        96,
        64,
        81,
        97,
        0,
        134,
        146,
        145,
        144,
        97,
        7,
        255,
        86,
        91,
        97,
        0,
        214,
        97,
        1,
        7,
        54,
        96,
        4,
        97,
        8,
        92,
        86,
        91,
        97,
        4,
        146,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        20,
        128,
        21,
        144,
        97,
        1,
        65,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        22,
        21,
        21,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        51,
        96,
        1,
        20,
        128,
        21,
        144,
        97,
        1,
        113,
        87,
        80,
        51,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        21,
        21,
        91,
        97,
        1,
        170,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        17,
        212,
        204,
        76,
        13,
        96,
        218,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        1,
        183,
        133,
        133,
        133,
        133,
        90,
        97,
        5,
        190,
        86,
        91,
        144,
        80,
        128,
        21,
        97,
        1,
        239,
        87,
        96,
        64,
        81,
        51,
        144,
        127,
        104,
        149,
        193,
        54,
        100,
        170,
        79,
        103,
        40,
        139,
        37,
        215,
        162,
        29,
        122,
        170,
        52,
        145,
        110,
        53,
        95,
        185,
        182,
        250,
        224,
        161,
        57,
        169,
        8,
        91,
        236,
        184,
        144,
        96,
        0,
        144,
        162,
        97,
        2,
        27,
        86,
        91,
        96,
        64,
        81,
        51,
        144,
        127,
        172,
        210,
        200,
        112,
        40,
        4,
        18,
        143,
        219,
        13,
        178,
        187,
        73,
        246,
        209,
        39,
        221,
        1,
        129,
        193,
        63,
        212,
        93,
        191,
        225,
        109,
        224,
        147,
        14,
        43,
        211,
        117,
        144,
        96,
        0,
        144,
        162,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        96,
        97,
        2,
        51,
        134,
        134,
        134,
        134,
        97,
        1,
        71,
        86,
        91,
        145,
        80,
        96,
        64,
        81,
        96,
        32,
        61,
        1,
        129,
        1,
        96,
        64,
        82,
        61,
        129,
        82,
        61,
        96,
        0,
        96,
        32,
        131,
        1,
        62,
        128,
        145,
        80,
        80,
        148,
        80,
        148,
        146,
        80,
        80,
        80,
        86,
        91,
        97,
        2,
        97,
        97,
        6,
        5,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        21,
        128,
        21,
        144,
        97,
        2,
        131,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        1,
        20,
        21,
        91,
        97,
        2,
        183,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        49,
        48,
        49,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        161,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        22,
        21,
        97,
        3,
        7,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        35,
        169,
        152,
        152,
        25,
        96,
        217,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        161,
        86,
        91,
        96,
        0,
        96,
        32,
        129,
        129,
        82,
        127,
        173,
        165,
        1,
        49,
        34,
        211,
        149,
        186,
        60,
        84,
        119,
        34,
        131,
        251,
        6,
        155,
        16,
        66,
        96,
        86,
        239,
        140,
        165,
        71,
        80,
        203,
        155,
        181,
        82,
        165,
        158,
        125,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        129,
        22,
        128,
        134,
        82,
        96,
        64,
        128,
        135,
        32,
        128,
        84,
        147,
        144,
        148,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        147,
        132,
        22,
        23,
        144,
        147,
        85,
        96,
        1,
        144,
        149,
        82,
        130,
        84,
        22,
        132,
        23,
        144,
        145,
        85,
        81,
        145,
        130,
        82,
        127,
        236,
        223,
        58,
        62,
        255,
        234,
        87,
        131,
        163,
        196,
        194,
        20,
        14,
        103,
        117,
        119,
        102,
        100,
        40,
        212,
        78,
        217,
        212,
        116,
        160,
        179,
        164,
        201,
        148,
        63,
        132,
        64,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        86,
        91,
        96,
        96,
        96,
        0,
        130,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        3,
        182,
        87,
        97,
        3,
        182,
        97,
        6,
        124,
        86,
        91,
        96,
        64,
        81,
        144,
        128,
        130,
        82,
        128,
        96,
        32,
        2,
        96,
        32,
        1,
        130,
        1,
        96,
        64,
        82,
        128,
        21,
        97,
        3,
        223,
        87,
        129,
        96,
        32,
        1,
        96,
        32,
        130,
        2,
        128,
        54,
        131,
        55,
        1,
        144,
        80,
        91,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        134,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        129,
        32,
        84,
        146,
        148,
        80,
        145,
        22,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        21,
        128,
        21,
        144,
        97,
        4,
        34,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        1,
        20,
        21,
        91,
        128,
        21,
        97,
        4,
        45,
        87,
        80,
        132,
        130,
        16,
        91,
        21,
        97,
        4,
        132,
        87,
        128,
        132,
        131,
        129,
        81,
        129,
        16,
        97,
        4,
        69,
        87,
        97,
        4,
        69,
        97,
        8,
        143,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        131,
        22,
        96,
        32,
        145,
        130,
        2,
        146,
        144,
        146,
        1,
        129,
        1,
        145,
        144,
        145,
        82,
        145,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        145,
        130,
        144,
        82,
        96,
        64,
        144,
        145,
        32,
        84,
        22,
        129,
        97,
        4,
        124,
        129,
        97,
        8,
        165,
        86,
        91,
        146,
        80,
        80,
        97,
        4,
        0,
        86,
        91,
        144,
        131,
        82,
        145,
        148,
        145,
        147,
        80,
        144,
        145,
        80,
        80,
        86,
        91,
        97,
        4,
        154,
        97,
        6,
        5,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        21,
        128,
        21,
        144,
        97,
        4,
        188,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        1,
        20,
        21,
        91,
        97,
        4,
        240,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        49,
        48,
        49,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        161,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        22,
        144,
        130,
        22,
        20,
        97,
        5,
        68,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        49,
        48,
        51,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        161,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        128,
        84,
        136,
        135,
        22,
        133,
        82,
        130,
        133,
        32,
        128,
        84,
        145,
        144,
        151,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        145,
        130,
        22,
        23,
        144,
        150,
        85,
        146,
        132,
        144,
        82,
        130,
        84,
        144,
        148,
        22,
        144,
        145,
        85,
        145,
        81,
        144,
        129,
        82,
        127,
        170,
        180,
        250,
        43,
        70,
        63,
        88,
        27,
        43,
        50,
        203,
        59,
        126,
        59,
        112,
        75,
        156,
        227,
        124,
        194,
        9,
        181,
        251,
        77,
        119,
        229,
        147,
        172,
        228,
        5,
        66,
        118,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        1,
        131,
        96,
        1,
        129,
        17,
        21,
        97,
        5,
        212,
        87,
        97,
        5,
        212,
        97,
        8,
        204,
        86,
        91,
        3,
        97,
        5,
        236,
        87,
        96,
        0,
        128,
        133,
        81,
        96,
        32,
        135,
        1,
        137,
        134,
        244,
        144,
        80,
        97,
        5,
        252,
        86,
        91,
        96,
        0,
        128,
        133,
        81,
        96,
        32,
        135,
        1,
        136,
        138,
        135,
        241,
        144,
        80,
        91,
        149,
        148,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        51,
        48,
        20,
        97,
        6,
        60,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        48,
        51,
        49,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        161,
        86,
        91,
        86,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        6,
        85,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        6,
        108,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        6,
        117,
        130,
        97,
        6,
        62,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        128,
        53,
        96,
        2,
        129,
        16,
        97,
        6,
        85,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        128,
        133,
        135,
        3,
        18,
        21,
        97,
        6,
        183,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        6,
        192,
        133,
        97,
        6,
        62,
        86,
        91,
        147,
        80,
        96,
        32,
        133,
        1,
        53,
        146,
        80,
        96,
        64,
        133,
        1,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        6,
        228,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        135,
        1,
        145,
        80,
        135,
        96,
        31,
        131,
        1,
        18,
        97,
        6,
        248,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        129,
        129,
        17,
        21,
        97,
        7,
        10,
        87,
        97,
        7,
        10,
        97,
        6,
        124,
        86,
        91,
        96,
        64,
        81,
        96,
        31,
        130,
        1,
        96,
        31,
        25,
        144,
        129,
        22,
        96,
        63,
        1,
        22,
        129,
        1,
        144,
        131,
        130,
        17,
        129,
        131,
        16,
        23,
        21,
        97,
        7,
        50,
        87,
        97,
        7,
        50,
        97,
        6,
        124,
        86,
        91,
        129,
        96,
        64,
        82,
        130,
        129,
        82,
        138,
        96,
        32,
        132,
        135,
        1,
        1,
        17,
        21,
        97,
        7,
        75,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        96,
        32,
        134,
        1,
        96,
        32,
        131,
        1,
        55,
        96,
        0,
        96,
        32,
        132,
        131,
        1,
        1,
        82,
        128,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        97,
        7,
        114,
        96,
        96,
        134,
        1,
        97,
        6,
        146,
        86,
        91,
        144,
        80,
        146,
        149,
        145,
        148,
        80,
        146,
        80,
        86,
        91,
        130,
        21,
        21,
        129,
        82,
        96,
        0,
        96,
        32,
        96,
        64,
        129,
        132,
        1,
        82,
        131,
        81,
        128,
        96,
        64,
        133,
        1,
        82,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        7,
        179,
        87,
        133,
        129,
        1,
        131,
        1,
        81,
        133,
        130,
        1,
        96,
        96,
        1,
        82,
        130,
        1,
        97,
        7,
        151,
        86,
        91,
        80,
        96,
        0,
        96,
        96,
        130,
        134,
        1,
        1,
        82,
        96,
        96,
        96,
        31,
        25,
        96,
        31,
        131,
        1,
        22,
        133,
        1,
        1,
        146,
        80,
        80,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        7,
        232,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        7,
        241,
        131,
        97,
        6,
        62,
        86,
        91,
        148,
        96,
        32,
        147,
        144,
        147,
        1,
        53,
        147,
        80,
        80,
        80,
        86,
        91,
        96,
        64,
        128,
        130,
        82,
        131,
        81,
        144,
        130,
        1,
        129,
        144,
        82,
        96,
        0,
        144,
        96,
        32,
        144,
        96,
        96,
        132,
        1,
        144,
        130,
        135,
        1,
        132,
        91,
        130,
        129,
        16,
        21,
        97,
        8,
        65,
        87,
        129,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        132,
        82,
        146,
        132,
        1,
        146,
        144,
        132,
        1,
        144,
        96,
        1,
        1,
        97,
        8,
        28,
        86,
        91,
        80,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        148,
        144,
        148,
        22,
        146,
        1,
        145,
        144,
        145,
        82,
        80,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        8,
        111,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        8,
        120,
        131,
        97,
        6,
        62,
        86,
        91,
        145,
        80,
        97,
        8,
        134,
        96,
        32,
        132,
        1,
        97,
        6,
        62,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        96,
        1,
        130,
        1,
        97,
        8,
        197,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        96,
        1,
        1,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        33,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        92,
        101,
        226,
        196,
        249,
        73,
        82,
        212,
        195,
        102,
        200,
        38,
        177,
        104,
        114,
        227,
        10,
        102,
        105,
        179,
        19,
        238,
        70,
        110,
        34,
        103,
        22,
        22,
        252,
        243,
        87,
        9,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        20,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static MODULEMANAGER_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct ModuleManager<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for ModuleManager<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for ModuleManager<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for ModuleManager<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for ModuleManager<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(ModuleManager)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> ModuleManager<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    MODULEMANAGER_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                MODULEMANAGER_ABI.clone(),
                MODULEMANAGER_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `disableModule` (0xe009cfde) function
        pub fn disable_module(
            &self,
            prev_module: ::ethers::core::types::Address,
            module: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([224, 9, 207, 222], (prev_module, module))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `enableModule` (0x610b5925) function
        pub fn enable_module(
            &self,
            module: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([97, 11, 89, 37], module)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `execTransactionFromModule` (0x468721a7) function
        pub fn exec_transaction_from_module(
            &self,
            to: ::ethers::core::types::Address,
            value: ::ethers::core::types::U256,
            data: ::ethers::core::types::Bytes,
            operation: u8,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([70, 135, 33, 167], (to, value, data, operation))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `execTransactionFromModuleReturnData` (0x5229073f) function
        pub fn exec_transaction_from_module_return_data(
            &self,
            to: ::ethers::core::types::Address,
            value: ::ethers::core::types::U256,
            data: ::ethers::core::types::Bytes,
            operation: u8,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            (bool, ::ethers::core::types::Bytes),
        > {
            self.0
                .method_hash([82, 41, 7, 63], (to, value, data, operation))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getModulesPaginated` (0xcc2f8452) function
        pub fn get_modules_paginated(
            &self,
            start: ::ethers::core::types::Address,
            page_size: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            (
                ::std::vec::Vec<::ethers::core::types::Address>,
                ::ethers::core::types::Address,
            ),
        > {
            self.0
                .method_hash([204, 47, 132, 82], (start, page_size))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `isModuleEnabled` (0x2d9ad53d) function
        pub fn is_module_enabled(
            &self,
            module: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([45, 154, 213, 61], module)
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `DisabledModule` event
        pub fn disabled_module_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            DisabledModuleFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `EnabledModule` event
        pub fn enabled_module_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            EnabledModuleFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `ExecutionFromModuleFailure` event
        pub fn execution_from_module_failure_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            ExecutionFromModuleFailureFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `ExecutionFromModuleSuccess` event
        pub fn execution_from_module_success_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            ExecutionFromModuleSuccessFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            ModuleManagerEvents,
        > {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for ModuleManager<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "DisabledModule", abi = "DisabledModule(address)")]
    pub struct DisabledModuleFilter {
        pub module: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "EnabledModule", abi = "EnabledModule(address)")]
    pub struct EnabledModuleFilter {
        pub module: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "ExecutionFromModuleFailure",
        abi = "ExecutionFromModuleFailure(address)"
    )]
    pub struct ExecutionFromModuleFailureFilter {
        #[ethevent(indexed)]
        pub module: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "ExecutionFromModuleSuccess",
        abi = "ExecutionFromModuleSuccess(address)"
    )]
    pub struct ExecutionFromModuleSuccessFilter {
        #[ethevent(indexed)]
        pub module: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's events
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum ModuleManagerEvents {
        DisabledModuleFilter(DisabledModuleFilter),
        EnabledModuleFilter(EnabledModuleFilter),
        ExecutionFromModuleFailureFilter(ExecutionFromModuleFailureFilter),
        ExecutionFromModuleSuccessFilter(ExecutionFromModuleSuccessFilter),
    }
    impl ::ethers::contract::EthLogDecode for ModuleManagerEvents {
        fn decode_log(
            log: &::ethers::core::abi::RawLog,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::Error> {
            if let Ok(decoded) = DisabledModuleFilter::decode_log(log) {
                return Ok(ModuleManagerEvents::DisabledModuleFilter(decoded));
            }
            if let Ok(decoded) = EnabledModuleFilter::decode_log(log) {
                return Ok(ModuleManagerEvents::EnabledModuleFilter(decoded));
            }
            if let Ok(decoded) = ExecutionFromModuleFailureFilter::decode_log(log) {
                return Ok(
                    ModuleManagerEvents::ExecutionFromModuleFailureFilter(decoded),
                );
            }
            if let Ok(decoded) = ExecutionFromModuleSuccessFilter::decode_log(log) {
                return Ok(
                    ModuleManagerEvents::ExecutionFromModuleSuccessFilter(decoded),
                );
            }
            Err(::ethers::core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for ModuleManagerEvents {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::DisabledModuleFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::EnabledModuleFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::ExecutionFromModuleFailureFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::ExecutionFromModuleSuccessFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
            }
        }
    }
    impl ::core::convert::From<DisabledModuleFilter> for ModuleManagerEvents {
        fn from(value: DisabledModuleFilter) -> Self {
            Self::DisabledModuleFilter(value)
        }
    }
    impl ::core::convert::From<EnabledModuleFilter> for ModuleManagerEvents {
        fn from(value: EnabledModuleFilter) -> Self {
            Self::EnabledModuleFilter(value)
        }
    }
    impl ::core::convert::From<ExecutionFromModuleFailureFilter>
    for ModuleManagerEvents {
        fn from(value: ExecutionFromModuleFailureFilter) -> Self {
            Self::ExecutionFromModuleFailureFilter(value)
        }
    }
    impl ::core::convert::From<ExecutionFromModuleSuccessFilter>
    for ModuleManagerEvents {
        fn from(value: ExecutionFromModuleSuccessFilter) -> Self {
            Self::ExecutionFromModuleSuccessFilter(value)
        }
    }
    ///Container type for all input parameters for the `disableModule` function with signature `disableModule(address,address)` and selector `0xe009cfde`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "disableModule", abi = "disableModule(address,address)")]
    pub struct DisableModuleCall {
        pub prev_module: ::ethers::core::types::Address,
        pub module: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `enableModule` function with signature `enableModule(address)` and selector `0x610b5925`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "enableModule", abi = "enableModule(address)")]
    pub struct EnableModuleCall {
        pub module: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `execTransactionFromModule` function with signature `execTransactionFromModule(address,uint256,bytes,uint8)` and selector `0x468721a7`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "execTransactionFromModule",
        abi = "execTransactionFromModule(address,uint256,bytes,uint8)"
    )]
    pub struct ExecTransactionFromModuleCall {
        pub to: ::ethers::core::types::Address,
        pub value: ::ethers::core::types::U256,
        pub data: ::ethers::core::types::Bytes,
        pub operation: u8,
    }
    ///Container type for all input parameters for the `execTransactionFromModuleReturnData` function with signature `execTransactionFromModuleReturnData(address,uint256,bytes,uint8)` and selector `0x5229073f`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "execTransactionFromModuleReturnData",
        abi = "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)"
    )]
    pub struct ExecTransactionFromModuleReturnDataCall {
        pub to: ::ethers::core::types::Address,
        pub value: ::ethers::core::types::U256,
        pub data: ::ethers::core::types::Bytes,
        pub operation: u8,
    }
    ///Container type for all input parameters for the `getModulesPaginated` function with signature `getModulesPaginated(address,uint256)` and selector `0xcc2f8452`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "getModulesPaginated",
        abi = "getModulesPaginated(address,uint256)"
    )]
    pub struct GetModulesPaginatedCall {
        pub start: ::ethers::core::types::Address,
        pub page_size: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `isModuleEnabled` function with signature `isModuleEnabled(address)` and selector `0x2d9ad53d`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "isModuleEnabled", abi = "isModuleEnabled(address)")]
    pub struct IsModuleEnabledCall {
        pub module: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum ModuleManagerCalls {
        DisableModule(DisableModuleCall),
        EnableModule(EnableModuleCall),
        ExecTransactionFromModule(ExecTransactionFromModuleCall),
        ExecTransactionFromModuleReturnData(ExecTransactionFromModuleReturnDataCall),
        GetModulesPaginated(GetModulesPaginatedCall),
        IsModuleEnabled(IsModuleEnabledCall),
    }
    impl ::ethers::core::abi::AbiDecode for ModuleManagerCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <DisableModuleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::DisableModule(decoded));
            }
            if let Ok(decoded)
                = <EnableModuleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::EnableModule(decoded));
            }
            if let Ok(decoded)
                = <ExecTransactionFromModuleCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::ExecTransactionFromModule(decoded));
            }
            if let Ok(decoded)
                = <ExecTransactionFromModuleReturnDataCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::ExecTransactionFromModuleReturnData(decoded));
            }
            if let Ok(decoded)
                = <GetModulesPaginatedCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::GetModulesPaginated(decoded));
            }
            if let Ok(decoded)
                = <IsModuleEnabledCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::IsModuleEnabled(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for ModuleManagerCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::DisableModule(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::EnableModule(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::ExecTransactionFromModule(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::ExecTransactionFromModuleReturnData(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GetModulesPaginated(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::IsModuleEnabled(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for ModuleManagerCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::DisableModule(element) => ::core::fmt::Display::fmt(element, f),
                Self::EnableModule(element) => ::core::fmt::Display::fmt(element, f),
                Self::ExecTransactionFromModule(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::ExecTransactionFromModuleReturnData(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::GetModulesPaginated(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::IsModuleEnabled(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<DisableModuleCall> for ModuleManagerCalls {
        fn from(value: DisableModuleCall) -> Self {
            Self::DisableModule(value)
        }
    }
    impl ::core::convert::From<EnableModuleCall> for ModuleManagerCalls {
        fn from(value: EnableModuleCall) -> Self {
            Self::EnableModule(value)
        }
    }
    impl ::core::convert::From<ExecTransactionFromModuleCall> for ModuleManagerCalls {
        fn from(value: ExecTransactionFromModuleCall) -> Self {
            Self::ExecTransactionFromModule(value)
        }
    }
    impl ::core::convert::From<ExecTransactionFromModuleReturnDataCall>
    for ModuleManagerCalls {
        fn from(value: ExecTransactionFromModuleReturnDataCall) -> Self {
            Self::ExecTransactionFromModuleReturnData(value)
        }
    }
    impl ::core::convert::From<GetModulesPaginatedCall> for ModuleManagerCalls {
        fn from(value: GetModulesPaginatedCall) -> Self {
            Self::GetModulesPaginated(value)
        }
    }
    impl ::core::convert::From<IsModuleEnabledCall> for ModuleManagerCalls {
        fn from(value: IsModuleEnabledCall) -> Self {
            Self::IsModuleEnabled(value)
        }
    }
    ///Container type for all return fields from the `execTransactionFromModule` function with signature `execTransactionFromModule(address,uint256,bytes,uint8)` and selector `0x468721a7`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ExecTransactionFromModuleReturn {
        pub success: bool,
    }
    ///Container type for all return fields from the `execTransactionFromModuleReturnData` function with signature `execTransactionFromModuleReturnData(address,uint256,bytes,uint8)` and selector `0x5229073f`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ExecTransactionFromModuleReturnDataReturn {
        pub success: bool,
        pub return_data: ::ethers::core::types::Bytes,
    }
    ///Container type for all return fields from the `getModulesPaginated` function with signature `getModulesPaginated(address,uint256)` and selector `0xcc2f8452`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetModulesPaginatedReturn {
        pub array: ::std::vec::Vec<::ethers::core::types::Address>,
        pub next: ::ethers::core::types::Address,
    }
    ///Container type for all return fields from the `isModuleEnabled` function with signature `isModuleEnabled(address)` and selector `0x2d9ad53d`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct IsModuleEnabledReturn(pub bool);
}
