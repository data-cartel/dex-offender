pub use owner_manager::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod owner_manager {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"AddedOwner\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"ChangedThreshold\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"RemovedOwner\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"addOwnerWithThreshold\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"changeThreshold\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"removeOwner\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"swapOwner\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static OWNERMANAGER_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> = ::ethers::contract::Lazy::new(||
    ::ethers::core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid"));
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        10,
        103,
        128,
        97,
        0,
        32,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        125,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        160,
        230,
        126,
        43,
        17,
        97,
        0,
        91,
        87,
        128,
        99,
        160,
        230,
        126,
        43,
        20,
        97,
        0,
        210,
        87,
        128,
        99,
        227,
        24,
        181,
        43,
        20,
        97,
        0,
        231,
        87,
        128,
        99,
        231,
        82,
        53,
        184,
        20,
        97,
        0,
        250,
        87,
        128,
        99,
        248,
        220,
        93,
        217,
        20,
        97,
        1,
        11,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        13,
        88,
        47,
        19,
        20,
        97,
        0,
        130,
        87,
        128,
        99,
        47,
        84,
        191,
        110,
        20,
        97,
        0,
        151,
        87,
        128,
        99,
        105,
        78,
        128,
        195,
        20,
        97,
        0,
        191,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        149,
        97,
        0,
        144,
        54,
        96,
        4,
        97,
        8,
        92,
        86,
        91,
        97,
        1,
        30,
        86,
        91,
        0,
        91,
        97,
        0,
        170,
        97,
        0,
        165,
        54,
        96,
        4,
        97,
        8,
        134,
        86,
        91,
        97,
        2,
        151,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        0,
        149,
        97,
        0,
        205,
        54,
        96,
        4,
        97,
        8,
        168,
        86,
        91,
        97,
        2,
        210,
        86,
        91,
        97,
        0,
        218,
        97,
        3,
        136,
        86,
        91,
        96,
        64,
        81,
        97,
        0,
        182,
        145,
        144,
        97,
        8,
        193,
        86,
        91,
        97,
        0,
        149,
        97,
        0,
        245,
        54,
        96,
        4,
        97,
        9,
        14,
        86,
        91,
        97,
        4,
        120,
        86,
        91,
        96,
        2,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        97,
        0,
        182,
        86,
        91,
        97,
        0,
        149,
        97,
        1,
        25,
        54,
        96,
        4,
        97,
        9,
        81,
        86,
        91,
        97,
        6,
        125,
        86,
        91,
        97,
        1,
        38,
        97,
        8,
        7,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        21,
        128,
        21,
        144,
        97,
        1,
        72,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        1,
        20,
        21,
        91,
        128,
        21,
        97,
        1,
        93,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        48,
        20,
        21,
        91,
        97,
        1,
        130,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        1,
        121,
        144,
        97,
        9,
        141,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        22,
        21,
        97,
        1,
        210,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        17,
        212,
        204,
        140,
        13,
        96,
        218,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        0,
        96,
        32,
        129,
        144,
        82,
        127,
        173,
        165,
        1,
        49,
        34,
        211,
        149,
        186,
        60,
        84,
        119,
        34,
        131,
        251,
        6,
        155,
        16,
        66,
        96,
        86,
        239,
        140,
        165,
        71,
        80,
        203,
        155,
        181,
        82,
        165,
        158,
        125,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        129,
        22,
        128,
        133,
        82,
        96,
        64,
        133,
        32,
        128,
        84,
        146,
        144,
        147,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        146,
        131,
        22,
        23,
        144,
        146,
        85,
        96,
        1,
        128,
        133,
        82,
        131,
        84,
        144,
        145,
        22,
        144,
        145,
        23,
        144,
        145,
        85,
        128,
        84,
        145,
        97,
        2,
        64,
        131,
        97,
        9,
        194,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        129,
        82,
        127,
        148,
        101,
        250,
        12,
        150,
        44,
        199,
        105,
        88,
        230,
        55,
        58,
        153,
        51,
        38,
        64,
        12,
        28,
        148,
        248,
        190,
        47,
        227,
        169,
        82,
        173,
        250,
        127,
        96,
        178,
        234,
        38,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        128,
        96,
        2,
        84,
        20,
        97,
        2,
        147,
        87,
        97,
        2,
        147,
        129,
        97,
        2,
        210,
        86,
        91,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        1,
        20,
        128,
        21,
        144,
        97,
        2,
        204,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        22,
        21,
        21,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        97,
        2,
        218,
        97,
        8,
        7,
        86,
        91,
        96,
        1,
        84,
        129,
        17,
        21,
        97,
        3,
        20,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        50,
        48,
        49,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        1,
        129,
        16,
        21,
        97,
        3,
        77,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        35,
        169,
        153,
        24,
        25,
        96,
        217,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        2,
        129,
        144,
        85,
        96,
        64,
        81,
        129,
        129,
        82,
        127,
        97,
        15,
        127,
        242,
        179,
        4,
        174,
        137,
        3,
        195,
        222,
        116,
        198,
        12,
        106,
        177,
        247,
        214,
        34,
        107,
        63,
        82,
        197,
        22,
        25,
        5,
        187,
        90,
        212,
        3,
        156,
        147,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        86,
        91,
        96,
        96,
        96,
        0,
        96,
        1,
        84,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        3,
        167,
        87,
        97,
        3,
        167,
        97,
        9,
        219,
        86,
        91,
        96,
        64,
        81,
        144,
        128,
        130,
        82,
        128,
        96,
        32,
        2,
        96,
        32,
        1,
        130,
        1,
        96,
        64,
        82,
        128,
        21,
        97,
        3,
        208,
        87,
        129,
        96,
        32,
        1,
        96,
        32,
        130,
        2,
        128,
        54,
        131,
        55,
        1,
        144,
        80,
        91,
        80,
        96,
        1,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        127,
        173,
        165,
        1,
        49,
        34,
        211,
        149,
        186,
        60,
        84,
        119,
        34,
        131,
        251,
        6,
        155,
        16,
        66,
        96,
        86,
        239,
        140,
        165,
        71,
        80,
        203,
        155,
        181,
        82,
        165,
        158,
        125,
        84,
        145,
        146,
        80,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        1,
        20,
        97,
        4,
        112,
        87,
        128,
        131,
        131,
        129,
        81,
        129,
        16,
        97,
        4,
        49,
        87,
        97,
        4,
        49,
        97,
        9,
        241,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        131,
        22,
        96,
        32,
        145,
        130,
        2,
        146,
        144,
        146,
        1,
        129,
        1,
        145,
        144,
        145,
        82,
        145,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        145,
        130,
        144,
        82,
        96,
        64,
        144,
        145,
        32,
        84,
        22,
        129,
        97,
        4,
        104,
        129,
        97,
        9,
        194,
        86,
        91,
        146,
        80,
        80,
        97,
        4,
        13,
        86,
        91,
        80,
        144,
        146,
        145,
        80,
        80,
        86,
        91,
        97,
        4,
        128,
        97,
        8,
        7,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        21,
        128,
        21,
        144,
        97,
        4,
        162,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        1,
        20,
        21,
        91,
        128,
        21,
        97,
        4,
        183,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        48,
        20,
        21,
        91,
        97,
        4,
        211,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        1,
        121,
        144,
        97,
        9,
        141,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        22,
        21,
        97,
        5,
        35,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        17,
        212,
        204,
        140,
        13,
        96,
        218,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        21,
        128,
        21,
        144,
        97,
        5,
        69,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        1,
        20,
        21,
        91,
        97,
        5,
        97,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        1,
        121,
        144,
        97,
        9,
        141,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        22,
        144,
        131,
        22,
        20,
        97,
        5,
        181,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        50,
        48,
        53,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        128,
        84,
        135,
        135,
        22,
        128,
        134,
        82,
        131,
        134,
        32,
        128,
        84,
        146,
        137,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        147,
        132,
        22,
        23,
        144,
        85,
        150,
        138,
        22,
        133,
        82,
        130,
        133,
        32,
        128,
        84,
        130,
        22,
        144,
        151,
        23,
        144,
        150,
        85,
        146,
        132,
        144,
        82,
        130,
        84,
        144,
        148,
        22,
        144,
        145,
        85,
        145,
        81,
        144,
        129,
        82,
        127,
        248,
        212,
        159,
        197,
        41,
        129,
        46,
        154,
        124,
        92,
        80,
        230,
        156,
        32,
        240,
        220,
        204,
        13,
        184,
        250,
        149,
        201,
        139,
        197,
        140,
        201,
        164,
        241,
        193,
        41,
        158,
        175,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        129,
        82,
        127,
        148,
        101,
        250,
        12,
        150,
        44,
        199,
        105,
        88,
        230,
        55,
        58,
        153,
        51,
        38,
        64,
        12,
        28,
        148,
        248,
        190,
        47,
        227,
        169,
        82,
        173,
        250,
        127,
        96,
        178,
        234,
        38,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        80,
        80,
        86,
        91,
        97,
        6,
        133,
        97,
        8,
        7,
        86,
        91,
        128,
        96,
        1,
        128,
        84,
        97,
        6,
        148,
        145,
        144,
        97,
        10,
        7,
        86,
        91,
        16,
        21,
        97,
        6,
        202,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        50,
        48,
        49,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        21,
        128,
        21,
        144,
        97,
        6,
        236,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        1,
        20,
        21,
        91,
        97,
        7,
        8,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        1,
        121,
        144,
        97,
        9,
        141,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        22,
        144,
        131,
        22,
        20,
        97,
        7,
        92,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        50,
        48,
        53,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        128,
        130,
        32,
        128,
        84,
        136,
        134,
        22,
        132,
        82,
        145,
        131,
        32,
        128,
        84,
        146,
        144,
        149,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        146,
        131,
        22,
        23,
        144,
        148,
        85,
        145,
        129,
        82,
        130,
        84,
        144,
        145,
        22,
        144,
        145,
        85,
        96,
        1,
        128,
        84,
        145,
        97,
        7,
        175,
        131,
        97,
        10,
        26,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        129,
        82,
        127,
        248,
        212,
        159,
        197,
        41,
        129,
        46,
        154,
        124,
        92,
        80,
        230,
        156,
        32,
        240,
        220,
        204,
        13,
        184,
        250,
        149,
        201,
        139,
        197,
        140,
        201,
        164,
        241,
        193,
        41,
        158,
        175,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        128,
        96,
        2,
        84,
        20,
        97,
        8,
        2,
        87,
        97,
        8,
        2,
        129,
        97,
        2,
        210,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        51,
        48,
        20,
        97,
        8,
        62,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        48,
        51,
        49,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        86,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        8,
        87,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        8,
        111,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        8,
        120,
        131,
        97,
        8,
        64,
        86,
        91,
        148,
        96,
        32,
        147,
        144,
        147,
        1,
        53,
        147,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        8,
        152,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        8,
        161,
        130,
        97,
        8,
        64,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        8,
        186,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        130,
        81,
        130,
        130,
        1,
        129,
        144,
        82,
        96,
        0,
        145,
        144,
        132,
        130,
        1,
        144,
        96,
        64,
        133,
        1,
        144,
        132,
        91,
        129,
        129,
        16,
        21,
        97,
        9,
        2,
        87,
        131,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        131,
        82,
        146,
        132,
        1,
        146,
        145,
        132,
        1,
        145,
        96,
        1,
        1,
        97,
        8,
        221,
        86,
        91,
        80,
        144,
        150,
        149,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        97,
        9,
        35,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        9,
        44,
        132,
        97,
        8,
        64,
        86,
        91,
        146,
        80,
        97,
        9,
        58,
        96,
        32,
        133,
        1,
        97,
        8,
        64,
        86,
        91,
        145,
        80,
        97,
        9,
        72,
        96,
        64,
        133,
        1,
        97,
        8,
        64,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        80,
        146,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        97,
        9,
        102,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        9,
        111,
        132,
        97,
        8,
        64,
        86,
        91,
        146,
        80,
        97,
        9,
        125,
        96,
        32,
        133,
        1,
        97,
        8,
        64,
        86,
        91,
        145,
        80,
        96,
        64,
        132,
        1,
        53,
        144,
        80,
        146,
        80,
        146,
        80,
        146,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        96,
        5,
        144,
        130,
        1,
        82,
        100,
        71,
        83,
        50,
        48,
        51,
        96,
        216,
        27,
        96,
        64,
        130,
        1,
        82,
        96,
        96,
        1,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        96,
        1,
        130,
        1,
        97,
        9,
        212,
        87,
        97,
        9,
        212,
        97,
        9,
        172,
        86,
        91,
        80,
        96,
        1,
        1,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        2,
        204,
        87,
        97,
        2,
        204,
        97,
        9,
        172,
        86,
        91,
        96,
        0,
        129,
        97,
        10,
        41,
        87,
        97,
        10,
        41,
        97,
        9,
        172,
        86,
        91,
        80,
        96,
        0,
        25,
        1,
        144,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        72,
        70,
        254,
        114,
        127,
        15,
        98,
        234,
        86,
        175,
        24,
        18,
        119,
        114,
        162,
        93,
        122,
        149,
        122,
        93,
        75,
        102,
        46,
        149,
        70,
        105,
        59,
        28,
        140,
        100,
        31,
        162,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        20,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static OWNERMANAGER_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        125,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        160,
        230,
        126,
        43,
        17,
        97,
        0,
        91,
        87,
        128,
        99,
        160,
        230,
        126,
        43,
        20,
        97,
        0,
        210,
        87,
        128,
        99,
        227,
        24,
        181,
        43,
        20,
        97,
        0,
        231,
        87,
        128,
        99,
        231,
        82,
        53,
        184,
        20,
        97,
        0,
        250,
        87,
        128,
        99,
        248,
        220,
        93,
        217,
        20,
        97,
        1,
        11,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        13,
        88,
        47,
        19,
        20,
        97,
        0,
        130,
        87,
        128,
        99,
        47,
        84,
        191,
        110,
        20,
        97,
        0,
        151,
        87,
        128,
        99,
        105,
        78,
        128,
        195,
        20,
        97,
        0,
        191,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        149,
        97,
        0,
        144,
        54,
        96,
        4,
        97,
        8,
        92,
        86,
        91,
        97,
        1,
        30,
        86,
        91,
        0,
        91,
        97,
        0,
        170,
        97,
        0,
        165,
        54,
        96,
        4,
        97,
        8,
        134,
        86,
        91,
        97,
        2,
        151,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        0,
        149,
        97,
        0,
        205,
        54,
        96,
        4,
        97,
        8,
        168,
        86,
        91,
        97,
        2,
        210,
        86,
        91,
        97,
        0,
        218,
        97,
        3,
        136,
        86,
        91,
        96,
        64,
        81,
        97,
        0,
        182,
        145,
        144,
        97,
        8,
        193,
        86,
        91,
        97,
        0,
        149,
        97,
        0,
        245,
        54,
        96,
        4,
        97,
        9,
        14,
        86,
        91,
        97,
        4,
        120,
        86,
        91,
        96,
        2,
        84,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        97,
        0,
        182,
        86,
        91,
        97,
        0,
        149,
        97,
        1,
        25,
        54,
        96,
        4,
        97,
        9,
        81,
        86,
        91,
        97,
        6,
        125,
        86,
        91,
        97,
        1,
        38,
        97,
        8,
        7,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        21,
        128,
        21,
        144,
        97,
        1,
        72,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        1,
        20,
        21,
        91,
        128,
        21,
        97,
        1,
        93,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        48,
        20,
        21,
        91,
        97,
        1,
        130,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        1,
        121,
        144,
        97,
        9,
        141,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        22,
        21,
        97,
        1,
        210,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        17,
        212,
        204,
        140,
        13,
        96,
        218,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        0,
        96,
        32,
        129,
        144,
        82,
        127,
        173,
        165,
        1,
        49,
        34,
        211,
        149,
        186,
        60,
        84,
        119,
        34,
        131,
        251,
        6,
        155,
        16,
        66,
        96,
        86,
        239,
        140,
        165,
        71,
        80,
        203,
        155,
        181,
        82,
        165,
        158,
        125,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        129,
        22,
        128,
        133,
        82,
        96,
        64,
        133,
        32,
        128,
        84,
        146,
        144,
        147,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        146,
        131,
        22,
        23,
        144,
        146,
        85,
        96,
        1,
        128,
        133,
        82,
        131,
        84,
        144,
        145,
        22,
        144,
        145,
        23,
        144,
        145,
        85,
        128,
        84,
        145,
        97,
        2,
        64,
        131,
        97,
        9,
        194,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        129,
        82,
        127,
        148,
        101,
        250,
        12,
        150,
        44,
        199,
        105,
        88,
        230,
        55,
        58,
        153,
        51,
        38,
        64,
        12,
        28,
        148,
        248,
        190,
        47,
        227,
        169,
        82,
        173,
        250,
        127,
        96,
        178,
        234,
        38,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        128,
        96,
        2,
        84,
        20,
        97,
        2,
        147,
        87,
        97,
        2,
        147,
        129,
        97,
        2,
        210,
        86,
        91,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        1,
        20,
        128,
        21,
        144,
        97,
        2,
        204,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        22,
        21,
        21,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        97,
        2,
        218,
        97,
        8,
        7,
        86,
        91,
        96,
        1,
        84,
        129,
        17,
        21,
        97,
        3,
        20,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        50,
        48,
        49,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        1,
        129,
        16,
        21,
        97,
        3,
        77,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        35,
        169,
        153,
        24,
        25,
        96,
        217,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        2,
        129,
        144,
        85,
        96,
        64,
        81,
        129,
        129,
        82,
        127,
        97,
        15,
        127,
        242,
        179,
        4,
        174,
        137,
        3,
        195,
        222,
        116,
        198,
        12,
        106,
        177,
        247,
        214,
        34,
        107,
        63,
        82,
        197,
        22,
        25,
        5,
        187,
        90,
        212,
        3,
        156,
        147,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        86,
        91,
        96,
        96,
        96,
        0,
        96,
        1,
        84,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        3,
        167,
        87,
        97,
        3,
        167,
        97,
        9,
        219,
        86,
        91,
        96,
        64,
        81,
        144,
        128,
        130,
        82,
        128,
        96,
        32,
        2,
        96,
        32,
        1,
        130,
        1,
        96,
        64,
        82,
        128,
        21,
        97,
        3,
        208,
        87,
        129,
        96,
        32,
        1,
        96,
        32,
        130,
        2,
        128,
        54,
        131,
        55,
        1,
        144,
        80,
        91,
        80,
        96,
        1,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        127,
        173,
        165,
        1,
        49,
        34,
        211,
        149,
        186,
        60,
        84,
        119,
        34,
        131,
        251,
        6,
        155,
        16,
        66,
        96,
        86,
        239,
        140,
        165,
        71,
        80,
        203,
        155,
        181,
        82,
        165,
        158,
        125,
        84,
        145,
        146,
        80,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        1,
        20,
        97,
        4,
        112,
        87,
        128,
        131,
        131,
        129,
        81,
        129,
        16,
        97,
        4,
        49,
        87,
        97,
        4,
        49,
        97,
        9,
        241,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        131,
        22,
        96,
        32,
        145,
        130,
        2,
        146,
        144,
        146,
        1,
        129,
        1,
        145,
        144,
        145,
        82,
        145,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        145,
        130,
        144,
        82,
        96,
        64,
        144,
        145,
        32,
        84,
        22,
        129,
        97,
        4,
        104,
        129,
        97,
        9,
        194,
        86,
        91,
        146,
        80,
        80,
        97,
        4,
        13,
        86,
        91,
        80,
        144,
        146,
        145,
        80,
        80,
        86,
        91,
        97,
        4,
        128,
        97,
        8,
        7,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        21,
        128,
        21,
        144,
        97,
        4,
        162,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        1,
        20,
        21,
        91,
        128,
        21,
        97,
        4,
        183,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        48,
        20,
        21,
        91,
        97,
        4,
        211,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        1,
        121,
        144,
        97,
        9,
        141,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        22,
        21,
        97,
        5,
        35,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        17,
        212,
        204,
        140,
        13,
        96,
        218,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        21,
        128,
        21,
        144,
        97,
        5,
        69,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        1,
        20,
        21,
        91,
        97,
        5,
        97,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        1,
        121,
        144,
        97,
        9,
        141,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        22,
        144,
        131,
        22,
        20,
        97,
        5,
        181,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        50,
        48,
        53,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        128,
        84,
        135,
        135,
        22,
        128,
        134,
        82,
        131,
        134,
        32,
        128,
        84,
        146,
        137,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        147,
        132,
        22,
        23,
        144,
        85,
        150,
        138,
        22,
        133,
        82,
        130,
        133,
        32,
        128,
        84,
        130,
        22,
        144,
        151,
        23,
        144,
        150,
        85,
        146,
        132,
        144,
        82,
        130,
        84,
        144,
        148,
        22,
        144,
        145,
        85,
        145,
        81,
        144,
        129,
        82,
        127,
        248,
        212,
        159,
        197,
        41,
        129,
        46,
        154,
        124,
        92,
        80,
        230,
        156,
        32,
        240,
        220,
        204,
        13,
        184,
        250,
        149,
        201,
        139,
        197,
        140,
        201,
        164,
        241,
        193,
        41,
        158,
        175,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        129,
        82,
        127,
        148,
        101,
        250,
        12,
        150,
        44,
        199,
        105,
        88,
        230,
        55,
        58,
        153,
        51,
        38,
        64,
        12,
        28,
        148,
        248,
        190,
        47,
        227,
        169,
        82,
        173,
        250,
        127,
        96,
        178,
        234,
        38,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        80,
        80,
        86,
        91,
        97,
        6,
        133,
        97,
        8,
        7,
        86,
        91,
        128,
        96,
        1,
        128,
        84,
        97,
        6,
        148,
        145,
        144,
        97,
        10,
        7,
        86,
        91,
        16,
        21,
        97,
        6,
        202,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        50,
        48,
        49,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        21,
        128,
        21,
        144,
        97,
        6,
        236,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        1,
        20,
        21,
        91,
        97,
        7,
        8,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        1,
        121,
        144,
        97,
        9,
        141,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        22,
        144,
        131,
        22,
        20,
        97,
        7,
        92,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        50,
        48,
        53,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        128,
        130,
        32,
        128,
        84,
        136,
        134,
        22,
        132,
        82,
        145,
        131,
        32,
        128,
        84,
        146,
        144,
        149,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        146,
        131,
        22,
        23,
        144,
        148,
        85,
        145,
        129,
        82,
        130,
        84,
        144,
        145,
        22,
        144,
        145,
        85,
        96,
        1,
        128,
        84,
        145,
        97,
        7,
        175,
        131,
        97,
        10,
        26,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        129,
        82,
        127,
        248,
        212,
        159,
        197,
        41,
        129,
        46,
        154,
        124,
        92,
        80,
        230,
        156,
        32,
        240,
        220,
        204,
        13,
        184,
        250,
        149,
        201,
        139,
        197,
        140,
        201,
        164,
        241,
        193,
        41,
        158,
        175,
        144,
        96,
        32,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        128,
        96,
        2,
        84,
        20,
        97,
        8,
        2,
        87,
        97,
        8,
        2,
        129,
        97,
        2,
        210,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        51,
        48,
        20,
        97,
        8,
        62,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        5,
        96,
        36,
        130,
        1,
        82,
        100,
        71,
        83,
        48,
        51,
        49,
        96,
        216,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        1,
        121,
        86,
        91,
        86,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        8,
        87,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        8,
        111,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        8,
        120,
        131,
        97,
        8,
        64,
        86,
        91,
        148,
        96,
        32,
        147,
        144,
        147,
        1,
        53,
        147,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        8,
        152,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        8,
        161,
        130,
        97,
        8,
        64,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        8,
        186,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        130,
        81,
        130,
        130,
        1,
        129,
        144,
        82,
        96,
        0,
        145,
        144,
        132,
        130,
        1,
        144,
        96,
        64,
        133,
        1,
        144,
        132,
        91,
        129,
        129,
        16,
        21,
        97,
        9,
        2,
        87,
        131,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        131,
        82,
        146,
        132,
        1,
        146,
        145,
        132,
        1,
        145,
        96,
        1,
        1,
        97,
        8,
        221,
        86,
        91,
        80,
        144,
        150,
        149,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        97,
        9,
        35,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        9,
        44,
        132,
        97,
        8,
        64,
        86,
        91,
        146,
        80,
        97,
        9,
        58,
        96,
        32,
        133,
        1,
        97,
        8,
        64,
        86,
        91,
        145,
        80,
        97,
        9,
        72,
        96,
        64,
        133,
        1,
        97,
        8,
        64,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        80,
        146,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        97,
        9,
        102,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        9,
        111,
        132,
        97,
        8,
        64,
        86,
        91,
        146,
        80,
        97,
        9,
        125,
        96,
        32,
        133,
        1,
        97,
        8,
        64,
        86,
        91,
        145,
        80,
        96,
        64,
        132,
        1,
        53,
        144,
        80,
        146,
        80,
        146,
        80,
        146,
        86,
        91,
        96,
        32,
        128,
        130,
        82,
        96,
        5,
        144,
        130,
        1,
        82,
        100,
        71,
        83,
        50,
        48,
        51,
        96,
        216,
        27,
        96,
        64,
        130,
        1,
        82,
        96,
        96,
        1,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        96,
        1,
        130,
        1,
        97,
        9,
        212,
        87,
        97,
        9,
        212,
        97,
        9,
        172,
        86,
        91,
        80,
        96,
        1,
        1,
        144,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        2,
        204,
        87,
        97,
        2,
        204,
        97,
        9,
        172,
        86,
        91,
        96,
        0,
        129,
        97,
        10,
        41,
        87,
        97,
        10,
        41,
        97,
        9,
        172,
        86,
        91,
        80,
        96,
        0,
        25,
        1,
        144,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        72,
        70,
        254,
        114,
        127,
        15,
        98,
        234,
        86,
        175,
        24,
        18,
        119,
        114,
        162,
        93,
        122,
        149,
        122,
        93,
        75,
        102,
        46,
        149,
        70,
        105,
        59,
        28,
        140,
        100,
        31,
        162,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        20,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static OWNERMANAGER_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct OwnerManager<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for OwnerManager<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for OwnerManager<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for OwnerManager<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for OwnerManager<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(OwnerManager)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> OwnerManager<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    OWNERMANAGER_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                OWNERMANAGER_ABI.clone(),
                OWNERMANAGER_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `addOwnerWithThreshold` (0x0d582f13) function
        pub fn add_owner_with_threshold(
            &self,
            owner: ::ethers::core::types::Address,
            threshold: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([13, 88, 47, 19], (owner, threshold))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `changeThreshold` (0x694e80c3) function
        pub fn change_threshold(
            &self,
            threshold: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([105, 78, 128, 195], threshold)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getOwners` (0xa0e67e2b) function
        pub fn get_owners(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::std::vec::Vec<::ethers::core::types::Address>,
        > {
            self.0
                .method_hash([160, 230, 126, 43], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getThreshold` (0xe75235b8) function
        pub fn get_threshold(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([231, 82, 53, 184], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `isOwner` (0x2f54bf6e) function
        pub fn is_owner(
            &self,
            owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([47, 84, 191, 110], owner)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `removeOwner` (0xf8dc5dd9) function
        pub fn remove_owner(
            &self,
            prev_owner: ::ethers::core::types::Address,
            owner: ::ethers::core::types::Address,
            threshold: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([248, 220, 93, 217], (prev_owner, owner, threshold))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `swapOwner` (0xe318b52b) function
        pub fn swap_owner(
            &self,
            prev_owner: ::ethers::core::types::Address,
            old_owner: ::ethers::core::types::Address,
            new_owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([227, 24, 181, 43], (prev_owner, old_owner, new_owner))
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `AddedOwner` event
        pub fn added_owner_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            AddedOwnerFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `ChangedThreshold` event
        pub fn changed_threshold_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            ChangedThresholdFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `RemovedOwner` event
        pub fn removed_owner_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            RemovedOwnerFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            OwnerManagerEvents,
        > {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for OwnerManager<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "AddedOwner", abi = "AddedOwner(address)")]
    pub struct AddedOwnerFilter {
        pub owner: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "ChangedThreshold", abi = "ChangedThreshold(uint256)")]
    pub struct ChangedThresholdFilter {
        pub threshold: ::ethers::core::types::U256,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "RemovedOwner", abi = "RemovedOwner(address)")]
    pub struct RemovedOwnerFilter {
        pub owner: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's events
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum OwnerManagerEvents {
        AddedOwnerFilter(AddedOwnerFilter),
        ChangedThresholdFilter(ChangedThresholdFilter),
        RemovedOwnerFilter(RemovedOwnerFilter),
    }
    impl ::ethers::contract::EthLogDecode for OwnerManagerEvents {
        fn decode_log(
            log: &::ethers::core::abi::RawLog,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::Error> {
            if let Ok(decoded) = AddedOwnerFilter::decode_log(log) {
                return Ok(OwnerManagerEvents::AddedOwnerFilter(decoded));
            }
            if let Ok(decoded) = ChangedThresholdFilter::decode_log(log) {
                return Ok(OwnerManagerEvents::ChangedThresholdFilter(decoded));
            }
            if let Ok(decoded) = RemovedOwnerFilter::decode_log(log) {
                return Ok(OwnerManagerEvents::RemovedOwnerFilter(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for OwnerManagerEvents {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::AddedOwnerFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::ChangedThresholdFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::RemovedOwnerFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
            }
        }
    }
    impl ::core::convert::From<AddedOwnerFilter> for OwnerManagerEvents {
        fn from(value: AddedOwnerFilter) -> Self {
            Self::AddedOwnerFilter(value)
        }
    }
    impl ::core::convert::From<ChangedThresholdFilter> for OwnerManagerEvents {
        fn from(value: ChangedThresholdFilter) -> Self {
            Self::ChangedThresholdFilter(value)
        }
    }
    impl ::core::convert::From<RemovedOwnerFilter> for OwnerManagerEvents {
        fn from(value: RemovedOwnerFilter) -> Self {
            Self::RemovedOwnerFilter(value)
        }
    }
    ///Container type for all input parameters for the `addOwnerWithThreshold` function with signature `addOwnerWithThreshold(address,uint256)` and selector `0x0d582f13`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "addOwnerWithThreshold",
        abi = "addOwnerWithThreshold(address,uint256)"
    )]
    pub struct AddOwnerWithThresholdCall {
        pub owner: ::ethers::core::types::Address,
        pub threshold: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `changeThreshold` function with signature `changeThreshold(uint256)` and selector `0x694e80c3`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "changeThreshold", abi = "changeThreshold(uint256)")]
    pub struct ChangeThresholdCall {
        pub threshold: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `getOwners` function with signature `getOwners()` and selector `0xa0e67e2b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "getOwners", abi = "getOwners()")]
    pub struct GetOwnersCall;
    ///Container type for all input parameters for the `getThreshold` function with signature `getThreshold()` and selector `0xe75235b8`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "getThreshold", abi = "getThreshold()")]
    pub struct GetThresholdCall;
    ///Container type for all input parameters for the `isOwner` function with signature `isOwner(address)` and selector `0x2f54bf6e`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "isOwner", abi = "isOwner(address)")]
    pub struct IsOwnerCall {
        pub owner: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `removeOwner` function with signature `removeOwner(address,address,uint256)` and selector `0xf8dc5dd9`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "removeOwner", abi = "removeOwner(address,address,uint256)")]
    pub struct RemoveOwnerCall {
        pub prev_owner: ::ethers::core::types::Address,
        pub owner: ::ethers::core::types::Address,
        pub threshold: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `swapOwner` function with signature `swapOwner(address,address,address)` and selector `0xe318b52b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "swapOwner", abi = "swapOwner(address,address,address)")]
    pub struct SwapOwnerCall {
        pub prev_owner: ::ethers::core::types::Address,
        pub old_owner: ::ethers::core::types::Address,
        pub new_owner: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum OwnerManagerCalls {
        AddOwnerWithThreshold(AddOwnerWithThresholdCall),
        ChangeThreshold(ChangeThresholdCall),
        GetOwners(GetOwnersCall),
        GetThreshold(GetThresholdCall),
        IsOwner(IsOwnerCall),
        RemoveOwner(RemoveOwnerCall),
        SwapOwner(SwapOwnerCall),
    }
    impl ::ethers::core::abi::AbiDecode for OwnerManagerCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <AddOwnerWithThresholdCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::AddOwnerWithThreshold(decoded));
            }
            if let Ok(decoded)
                = <ChangeThresholdCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ChangeThreshold(decoded));
            }
            if let Ok(decoded)
                = <GetOwnersCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetOwners(decoded));
            }
            if let Ok(decoded)
                = <GetThresholdCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetThreshold(decoded));
            }
            if let Ok(decoded)
                = <IsOwnerCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::IsOwner(decoded));
            }
            if let Ok(decoded)
                = <RemoveOwnerCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RemoveOwner(decoded));
            }
            if let Ok(decoded)
                = <SwapOwnerCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::SwapOwner(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for OwnerManagerCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::AddOwnerWithThreshold(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::ChangeThreshold(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GetOwners(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GetThreshold(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::IsOwner(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::RemoveOwner(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::SwapOwner(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for OwnerManagerCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::AddOwnerWithThreshold(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::ChangeThreshold(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetOwners(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetThreshold(element) => ::core::fmt::Display::fmt(element, f),
                Self::IsOwner(element) => ::core::fmt::Display::fmt(element, f),
                Self::RemoveOwner(element) => ::core::fmt::Display::fmt(element, f),
                Self::SwapOwner(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<AddOwnerWithThresholdCall> for OwnerManagerCalls {
        fn from(value: AddOwnerWithThresholdCall) -> Self {
            Self::AddOwnerWithThreshold(value)
        }
    }
    impl ::core::convert::From<ChangeThresholdCall> for OwnerManagerCalls {
        fn from(value: ChangeThresholdCall) -> Self {
            Self::ChangeThreshold(value)
        }
    }
    impl ::core::convert::From<GetOwnersCall> for OwnerManagerCalls {
        fn from(value: GetOwnersCall) -> Self {
            Self::GetOwners(value)
        }
    }
    impl ::core::convert::From<GetThresholdCall> for OwnerManagerCalls {
        fn from(value: GetThresholdCall) -> Self {
            Self::GetThreshold(value)
        }
    }
    impl ::core::convert::From<IsOwnerCall> for OwnerManagerCalls {
        fn from(value: IsOwnerCall) -> Self {
            Self::IsOwner(value)
        }
    }
    impl ::core::convert::From<RemoveOwnerCall> for OwnerManagerCalls {
        fn from(value: RemoveOwnerCall) -> Self {
            Self::RemoveOwner(value)
        }
    }
    impl ::core::convert::From<SwapOwnerCall> for OwnerManagerCalls {
        fn from(value: SwapOwnerCall) -> Self {
            Self::SwapOwner(value)
        }
    }
    ///Container type for all return fields from the `getOwners` function with signature `getOwners()` and selector `0xa0e67e2b`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetOwnersReturn(pub ::std::vec::Vec<::ethers::core::types::Address>);
    ///Container type for all return fields from the `getThreshold` function with signature `getThreshold()` and selector `0xe75235b8`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetThresholdReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `isOwner` function with signature `isOwner(address)` and selector `0x2f54bf6e`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct IsOwnerReturn(pub bool);
}
