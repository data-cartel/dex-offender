pub use receiver_unstoppable::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod receiver_unstoppable {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"UnexpectedFlashLoan\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"executeFlashLoan\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"onFlashLoan\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transferOwnership\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static RECEIVERUNSTOPPABLE_ABI: ::ethers::contract::Lazy<
        ::ethers::core::abi::Abi,
    > = ::ethers::contract::Lazy::new(|| {
        ::ethers::core::utils::__serde_json::from_str(__ABI)
            .expect("ABI is always valid")
    });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        160,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        81,
        97,
        7,
        110,
        56,
        3,
        128,
        97,
        7,
        110,
        131,
        57,
        129,
        1,
        96,
        64,
        129,
        144,
        82,
        97,
        0,
        47,
        145,
        97,
        0,
        129,
        86,
        91,
        96,
        0,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        51,
        144,
        129,
        23,
        130,
        85,
        96,
        64,
        81,
        144,
        145,
        130,
        145,
        127,
        139,
        224,
        7,
        156,
        83,
        22,
        89,
        20,
        19,
        68,
        205,
        31,
        208,
        164,
        242,
        132,
        25,
        73,
        127,
        151,
        34,
        163,
        218,
        175,
        227,
        180,
        24,
        111,
        107,
        100,
        87,
        224,
        144,
        130,
        144,
        163,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        128,
        82,
        97,
        0,
        177,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        0,
        147,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        0,
        170,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        128,
        81,
        97,
        6,
        135,
        97,
        0,
        231,
        96,
        0,
        57,
        96,
        0,
        129,
        129,
        96,
        234,
        1,
        82,
        129,
        129,
        97,
        1,
        21,
        1,
        82,
        129,
        129,
        97,
        1,
        234,
        1,
        82,
        129,
        129,
        97,
        3,
        121,
        1,
        82,
        97,
        4,
        32,
        1,
        82,
        97,
        6,
        135,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        76,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        35,
        227,
        12,
        139,
        20,
        97,
        0,
        81,
        87,
        128,
        99,
        141,
        165,
        203,
        91,
        20,
        97,
        0,
        119,
        87,
        128,
        99,
        242,
        253,
        227,
        139,
        20,
        97,
        0,
        162,
        87,
        128,
        99,
        251,
        5,
        111,
        104,
        20,
        97,
        0,
        183,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        100,
        97,
        0,
        95,
        54,
        96,
        4,
        97,
        4,
        186,
        86,
        91,
        97,
        0,
        202,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        96,
        0,
        84,
        97,
        0,
        138,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        0,
        110,
        86,
        91,
        97,
        0,
        181,
        97,
        0,
        176,
        54,
        96,
        4,
        97,
        5,
        100,
        86,
        91,
        97,
        2,
        147,
        86,
        91,
        0,
        91,
        97,
        0,
        181,
        97,
        0,
        197,
        54,
        96,
        4,
        97,
        5,
        136,
        86,
        91,
        97,
        3,
        44,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        135,
        22,
        48,
        20,
        21,
        128,
        97,
        1,
        13,
        87,
        80,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        20,
        21,
        91,
        128,
        97,
        1,
        171,
        87,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        56,
        213,
        46,
        15,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        1,
        113,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        1,
        149,
        145,
        144,
        97,
        5,
        161,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        134,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        21,
        91,
        128,
        97,
        1,
        181,
        87,
        80,
        131,
        21,
        21,
        91,
        21,
        97,
        1,
        211,
        87,
        96,
        64,
        81,
        99,
        1,
        130,
        197,
        57,
        96,
        225,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        64,
        81,
        99,
        9,
        94,
        167,
        179,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        96,
        36,
        130,
        1,
        135,
        144,
        82,
        135,
        22,
        144,
        99,
        9,
        94,
        167,
        179,
        144,
        96,
        68,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        90,
        241,
        21,
        128,
        21,
        97,
        2,
        66,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        2,
        102,
        145,
        144,
        97,
        5,
        190,
        86,
        91,
        80,
        127,
        9,
        71,
        205,
        57,
        104,
        56,
        151,
        150,
        76,
        70,
        129,
        242,
        169,
        172,
        228,
        121,
        64,
        15,
        11,
        212,
        103,
        17,
        125,
        10,
        224,
        46,
        153,
        227,
        3,
        1,
        42,
        222,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        2,
        225,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        12,
        96,
        36,
        130,
        1,
        82,
        107,
        21,
        83,
        144,
        85,
        85,
        18,
        19,
        212,
        146,
        86,
        145,
        81,
        96,
        162,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        129,
        23,
        130,
        85,
        96,
        64,
        81,
        144,
        145,
        51,
        145,
        127,
        139,
        224,
        7,
        156,
        83,
        22,
        89,
        20,
        19,
        68,
        205,
        31,
        208,
        164,
        242,
        132,
        25,
        73,
        127,
        151,
        34,
        163,
        218,
        175,
        227,
        180,
        24,
        111,
        107,
        100,
        87,
        224,
        145,
        144,
        163,
        80,
        86,
        91,
        96,
        0,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        3,
        117,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        12,
        96,
        36,
        130,
        1,
        82,
        107,
        21,
        83,
        144,
        85,
        85,
        18,
        19,
        212,
        146,
        86,
        145,
        81,
        96,
        162,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        2,
        216,
        86,
        91,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        56,
        213,
        46,
        15,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        3,
        213,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        3,
        249,
        145,
        144,
        97,
        5,
        161,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        32,
        129,
        1,
        130,
        82,
        96,
        0,
        129,
        82,
        144,
        81,
        99,
        46,
        127,
        244,
        239,
        96,
        225,
        27,
        129,
        82,
        145,
        146,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        145,
        99,
        92,
        255,
        233,
        222,
        145,
        97,
        4,
        90,
        145,
        48,
        145,
        134,
        145,
        136,
        145,
        144,
        96,
        4,
        1,
        97,
        5,
        224,
        86,
        91,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        90,
        241,
        21,
        128,
        21,
        97,
        4,
        121,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        4,
        157,
        145,
        144,
        97,
        5,
        190,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        4,
        183,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        160,
        135,
        137,
        3,
        18,
        21,
        97,
        4,
        211,
        87,
        96,
        0,
        128,
        253,
        91,
        134,
        53,
        97,
        4,
        222,
        129,
        97,
        4,
        162,
        86,
        91,
        149,
        80,
        96,
        32,
        135,
        1,
        53,
        97,
        4,
        238,
        129,
        97,
        4,
        162,
        86,
        91,
        148,
        80,
        96,
        64,
        135,
        1,
        53,
        147,
        80,
        96,
        96,
        135,
        1,
        53,
        146,
        80,
        96,
        128,
        135,
        1,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        5,
        25,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        137,
        1,
        145,
        80,
        137,
        96,
        31,
        131,
        1,
        18,
        97,
        5,
        45,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        129,
        129,
        17,
        21,
        97,
        5,
        60,
        87,
        96,
        0,
        128,
        253,
        91,
        138,
        96,
        32,
        130,
        133,
        1,
        1,
        17,
        21,
        97,
        5,
        78,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        32,
        131,
        1,
        148,
        80,
        128,
        147,
        80,
        80,
        80,
        80,
        146,
        149,
        80,
        146,
        149,
        80,
        146,
        149,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        5,
        118,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        5,
        129,
        129,
        97,
        4,
        162,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        5,
        154,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        5,
        179,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        97,
        5,
        129,
        129,
        97,
        4,
        162,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        5,
        208,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        128,
        21,
        21,
        129,
        20,
        97,
        5,
        129,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        128,
        135,
        22,
        131,
        82,
        96,
        32,
        129,
        135,
        22,
        129,
        133,
        1,
        82,
        133,
        96,
        64,
        133,
        1,
        82,
        96,
        128,
        96,
        96,
        133,
        1,
        82,
        132,
        81,
        145,
        80,
        129,
        96,
        128,
        133,
        1,
        82,
        96,
        0,
        91,
        130,
        129,
        16,
        21,
        97,
        6,
        45,
        87,
        133,
        129,
        1,
        130,
        1,
        81,
        133,
        130,
        1,
        96,
        160,
        1,
        82,
        129,
        1,
        97,
        6,
        17,
        86,
        91,
        80,
        80,
        96,
        0,
        96,
        160,
        130,
        133,
        1,
        1,
        82,
        96,
        160,
        96,
        31,
        25,
        96,
        31,
        131,
        1,
        22,
        132,
        1,
        1,
        145,
        80,
        80,
        149,
        148,
        80,
        80,
        80,
        80,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        233,
        117,
        163,
        254,
        80,
        207,
        247,
        32,
        1,
        126,
        79,
        127,
        144,
        237,
        194,
        170,
        112,
        86,
        112,
        111,
        18,
        239,
        71,
        12,
        18,
        3,
        65,
        30,
        171,
        37,
        152,
        86,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        20,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static RECEIVERUNSTOPPABLE_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        76,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        35,
        227,
        12,
        139,
        20,
        97,
        0,
        81,
        87,
        128,
        99,
        141,
        165,
        203,
        91,
        20,
        97,
        0,
        119,
        87,
        128,
        99,
        242,
        253,
        227,
        139,
        20,
        97,
        0,
        162,
        87,
        128,
        99,
        251,
        5,
        111,
        104,
        20,
        97,
        0,
        183,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        100,
        97,
        0,
        95,
        54,
        96,
        4,
        97,
        4,
        186,
        86,
        91,
        97,
        0,
        202,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        96,
        0,
        84,
        97,
        0,
        138,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        0,
        110,
        86,
        91,
        97,
        0,
        181,
        97,
        0,
        176,
        54,
        96,
        4,
        97,
        5,
        100,
        86,
        91,
        97,
        2,
        147,
        86,
        91,
        0,
        91,
        97,
        0,
        181,
        97,
        0,
        197,
        54,
        96,
        4,
        97,
        5,
        136,
        86,
        91,
        97,
        3,
        44,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        135,
        22,
        48,
        20,
        21,
        128,
        97,
        1,
        13,
        87,
        80,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        20,
        21,
        91,
        128,
        97,
        1,
        171,
        87,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        56,
        213,
        46,
        15,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        1,
        113,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        1,
        149,
        145,
        144,
        97,
        5,
        161,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        134,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        21,
        91,
        128,
        97,
        1,
        181,
        87,
        80,
        131,
        21,
        21,
        91,
        21,
        97,
        1,
        211,
        87,
        96,
        64,
        81,
        99,
        1,
        130,
        197,
        57,
        96,
        225,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        64,
        81,
        99,
        9,
        94,
        167,
        179,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        96,
        36,
        130,
        1,
        135,
        144,
        82,
        135,
        22,
        144,
        99,
        9,
        94,
        167,
        179,
        144,
        96,
        68,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        90,
        241,
        21,
        128,
        21,
        97,
        2,
        66,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        2,
        102,
        145,
        144,
        97,
        5,
        190,
        86,
        91,
        80,
        127,
        9,
        71,
        205,
        57,
        104,
        56,
        151,
        150,
        76,
        70,
        129,
        242,
        169,
        172,
        228,
        121,
        64,
        15,
        11,
        212,
        103,
        17,
        125,
        10,
        224,
        46,
        153,
        227,
        3,
        1,
        42,
        222,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        2,
        225,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        12,
        96,
        36,
        130,
        1,
        82,
        107,
        21,
        83,
        144,
        85,
        85,
        18,
        19,
        212,
        146,
        86,
        145,
        81,
        96,
        162,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        129,
        23,
        130,
        85,
        96,
        64,
        81,
        144,
        145,
        51,
        145,
        127,
        139,
        224,
        7,
        156,
        83,
        22,
        89,
        20,
        19,
        68,
        205,
        31,
        208,
        164,
        242,
        132,
        25,
        73,
        127,
        151,
        34,
        163,
        218,
        175,
        227,
        180,
        24,
        111,
        107,
        100,
        87,
        224,
        145,
        144,
        163,
        80,
        86,
        91,
        96,
        0,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        3,
        117,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        12,
        96,
        36,
        130,
        1,
        82,
        107,
        21,
        83,
        144,
        85,
        85,
        18,
        19,
        212,
        146,
        86,
        145,
        81,
        96,
        162,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        2,
        216,
        86,
        91,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        56,
        213,
        46,
        15,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        3,
        213,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        3,
        249,
        145,
        144,
        97,
        5,
        161,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        32,
        129,
        1,
        130,
        82,
        96,
        0,
        129,
        82,
        144,
        81,
        99,
        46,
        127,
        244,
        239,
        96,
        225,
        27,
        129,
        82,
        145,
        146,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        145,
        99,
        92,
        255,
        233,
        222,
        145,
        97,
        4,
        90,
        145,
        48,
        145,
        134,
        145,
        136,
        145,
        144,
        96,
        4,
        1,
        97,
        5,
        224,
        86,
        91,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        90,
        241,
        21,
        128,
        21,
        97,
        4,
        121,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        4,
        157,
        145,
        144,
        97,
        5,
        190,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        4,
        183,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        160,
        135,
        137,
        3,
        18,
        21,
        97,
        4,
        211,
        87,
        96,
        0,
        128,
        253,
        91,
        134,
        53,
        97,
        4,
        222,
        129,
        97,
        4,
        162,
        86,
        91,
        149,
        80,
        96,
        32,
        135,
        1,
        53,
        97,
        4,
        238,
        129,
        97,
        4,
        162,
        86,
        91,
        148,
        80,
        96,
        64,
        135,
        1,
        53,
        147,
        80,
        96,
        96,
        135,
        1,
        53,
        146,
        80,
        96,
        128,
        135,
        1,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        5,
        25,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        137,
        1,
        145,
        80,
        137,
        96,
        31,
        131,
        1,
        18,
        97,
        5,
        45,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        129,
        129,
        17,
        21,
        97,
        5,
        60,
        87,
        96,
        0,
        128,
        253,
        91,
        138,
        96,
        32,
        130,
        133,
        1,
        1,
        17,
        21,
        97,
        5,
        78,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        32,
        131,
        1,
        148,
        80,
        128,
        147,
        80,
        80,
        80,
        80,
        146,
        149,
        80,
        146,
        149,
        80,
        146,
        149,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        5,
        118,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        5,
        129,
        129,
        97,
        4,
        162,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        5,
        154,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        5,
        179,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        97,
        5,
        129,
        129,
        97,
        4,
        162,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        5,
        208,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        128,
        21,
        21,
        129,
        20,
        97,
        5,
        129,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        96,
        1,
        128,
        96,
        160,
        27,
        3,
        128,
        135,
        22,
        131,
        82,
        96,
        32,
        129,
        135,
        22,
        129,
        133,
        1,
        82,
        133,
        96,
        64,
        133,
        1,
        82,
        96,
        128,
        96,
        96,
        133,
        1,
        82,
        132,
        81,
        145,
        80,
        129,
        96,
        128,
        133,
        1,
        82,
        96,
        0,
        91,
        130,
        129,
        16,
        21,
        97,
        6,
        45,
        87,
        133,
        129,
        1,
        130,
        1,
        81,
        133,
        130,
        1,
        96,
        160,
        1,
        82,
        129,
        1,
        97,
        6,
        17,
        86,
        91,
        80,
        80,
        96,
        0,
        96,
        160,
        130,
        133,
        1,
        1,
        82,
        96,
        160,
        96,
        31,
        25,
        96,
        31,
        131,
        1,
        22,
        132,
        1,
        1,
        145,
        80,
        80,
        149,
        148,
        80,
        80,
        80,
        80,
        80,
        86,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        233,
        117,
        163,
        254,
        80,
        207,
        247,
        32,
        1,
        126,
        79,
        127,
        144,
        237,
        194,
        170,
        112,
        86,
        112,
        111,
        18,
        239,
        71,
        12,
        18,
        3,
        65,
        30,
        171,
        37,
        152,
        86,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        20,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static RECEIVERUNSTOPPABLE_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct ReceiverUnstoppable<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for ReceiverUnstoppable<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for ReceiverUnstoppable<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for ReceiverUnstoppable<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for ReceiverUnstoppable<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(ReceiverUnstoppable))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> ReceiverUnstoppable<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    RECEIVERUNSTOPPABLE_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                RECEIVERUNSTOPPABLE_ABI.clone(),
                RECEIVERUNSTOPPABLE_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `executeFlashLoan` (0xfb056f68) function
        pub fn execute_flash_loan(
            &self,
            amount: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([251, 5, 111, 104], amount)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `onFlashLoan` (0x23e30c8b) function
        pub fn on_flash_loan(
            &self,
            initiator: ::ethers::core::types::Address,
            token: ::ethers::core::types::Address,
            amount: ::ethers::core::types::U256,
            fee: ::ethers::core::types::U256,
            p4: ::ethers::core::types::Bytes,
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([35, 227, 12, 139], (initiator, token, amount, fee, p4))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `owner` (0x8da5cb5b) function
        pub fn owner(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([141, 165, 203, 91], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `transferOwnership` (0xf2fde38b) function
        pub fn transfer_ownership(
            &self,
            new_owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([242, 253, 227, 139], new_owner)
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `OwnershipTransferred` event
        pub fn ownership_transferred_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            OwnershipTransferredFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            OwnershipTransferredFilter,
        > {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for ReceiverUnstoppable<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `UnexpectedFlashLoan` with signature `UnexpectedFlashLoan()` and selector `0x03058a72`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "UnexpectedFlashLoan", abi = "UnexpectedFlashLoan()")]
    pub struct UnexpectedFlashLoan;
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "OwnershipTransferred",
        abi = "OwnershipTransferred(address,address)"
    )]
    pub struct OwnershipTransferredFilter {
        #[ethevent(indexed)]
        pub user: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub new_owner: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `executeFlashLoan` function with signature `executeFlashLoan(uint256)` and selector `0xfb056f68`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "executeFlashLoan", abi = "executeFlashLoan(uint256)")]
    pub struct ExecuteFlashLoanCall {
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `onFlashLoan` function with signature `onFlashLoan(address,address,uint256,uint256,bytes)` and selector `0x23e30c8b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "onFlashLoan",
        abi = "onFlashLoan(address,address,uint256,uint256,bytes)"
    )]
    pub struct OnFlashLoanCall {
        pub initiator: ::ethers::core::types::Address,
        pub token: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
        pub fee: ::ethers::core::types::U256,
        pub p4: ::ethers::core::types::Bytes,
    }
    ///Container type for all input parameters for the `owner` function with signature `owner()` and selector `0x8da5cb5b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "owner", abi = "owner()")]
    pub struct OwnerCall;
    ///Container type for all input parameters for the `transferOwnership` function with signature `transferOwnership(address)` and selector `0xf2fde38b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "transferOwnership", abi = "transferOwnership(address)")]
    pub struct TransferOwnershipCall {
        pub new_owner: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum ReceiverUnstoppableCalls {
        ExecuteFlashLoan(ExecuteFlashLoanCall),
        OnFlashLoan(OnFlashLoanCall),
        Owner(OwnerCall),
        TransferOwnership(TransferOwnershipCall),
    }
    impl ::ethers::core::abi::AbiDecode for ReceiverUnstoppableCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <ExecuteFlashLoanCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::ExecuteFlashLoan(decoded));
            }
            if let Ok(decoded)
                = <OnFlashLoanCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::OnFlashLoan(decoded));
            }
            if let Ok(decoded)
                = <OwnerCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Owner(decoded));
            }
            if let Ok(decoded)
                = <TransferOwnershipCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::TransferOwnership(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for ReceiverUnstoppableCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::ExecuteFlashLoan(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::OnFlashLoan(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Owner(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::TransferOwnership(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for ReceiverUnstoppableCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::ExecuteFlashLoan(element) => ::core::fmt::Display::fmt(element, f),
                Self::OnFlashLoan(element) => ::core::fmt::Display::fmt(element, f),
                Self::Owner(element) => ::core::fmt::Display::fmt(element, f),
                Self::TransferOwnership(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<ExecuteFlashLoanCall> for ReceiverUnstoppableCalls {
        fn from(value: ExecuteFlashLoanCall) -> Self {
            Self::ExecuteFlashLoan(value)
        }
    }
    impl ::core::convert::From<OnFlashLoanCall> for ReceiverUnstoppableCalls {
        fn from(value: OnFlashLoanCall) -> Self {
            Self::OnFlashLoan(value)
        }
    }
    impl ::core::convert::From<OwnerCall> for ReceiverUnstoppableCalls {
        fn from(value: OwnerCall) -> Self {
            Self::Owner(value)
        }
    }
    impl ::core::convert::From<TransferOwnershipCall> for ReceiverUnstoppableCalls {
        fn from(value: TransferOwnershipCall) -> Self {
            Self::TransferOwnership(value)
        }
    }
    ///Container type for all return fields from the `onFlashLoan` function with signature `onFlashLoan(address,address,uint256,uint256,bytes)` and selector `0x23e30c8b`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct OnFlashLoanReturn(pub [u8; 32]);
    ///Container type for all return fields from the `owner` function with signature `owner()` and selector `0x8da5cb5b`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct OwnerReturn(pub ::ethers::core::types::Address);
}
