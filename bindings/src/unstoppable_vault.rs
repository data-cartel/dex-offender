pub use unstoppable_vault::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod unstoppable_vault {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"CallbackFailed\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[]}],\"type\":\"error\",\"name\":\"InvalidAmount\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"InvalidBalance\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"UnsupportedCurrency\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"Approval\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\",\"components\":[],\"indexed\":false},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"Deposit\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeRecipient\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"FeeRecipientUpdated\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"Transfer\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\",\"components\":[],\"indexed\":false},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"Withdraw\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"FEE_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"GRACE_PERIOD\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"asset\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\",\"components\":[]},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"permit\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setFeeRecipient\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transferOwnership\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\",\"components\":[]}]}]";
    ///The parsed JSON ABI of the contract.
    pub static UNSTOPPABLEVAULT_ABI: ::ethers::contract::Lazy<
        ::ethers::core::abi::Abi,
    > = ::ethers::contract::Lazy::new(|| {
        ::ethers::core::utils::__serde_json::from_str(__ABI)
            .expect("ABI is always valid")
    });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        97,
        1,
        32,
        96,
        64,
        82,
        96,
        1,
        96,
        0,
        85,
        98,
        0,
        0,
        25,
        98,
        39,
        141,
        0,
        66,
        98,
        0,
        2,
        139,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        22,
        97,
        1,
        0,
        82,
        52,
        128,
        21,
        98,
        0,
        0,
        51,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        81,
        98,
        0,
        33,
        115,
        56,
        3,
        128,
        98,
        0,
        33,
        115,
        131,
        57,
        129,
        1,
        96,
        64,
        129,
        144,
        82,
        98,
        0,
        0,
        86,
        145,
        98,
        0,
        2,
        218,
        86,
        91,
        130,
        96,
        64,
        81,
        128,
        96,
        64,
        1,
        96,
        64,
        82,
        128,
        96,
        22,
        129,
        82,
        96,
        32,
        1,
        127,
        79,
        104,
        32,
        68,
        97,
        109,
        110,
        32,
        86,
        97,
        108,
        117,
        97,
        98,
        108,
        101,
        32,
        84,
        111,
        107,
        101,
        110,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        80,
        96,
        64,
        81,
        128,
        96,
        64,
        1,
        96,
        64,
        82,
        128,
        96,
        4,
        129,
        82,
        96,
        32,
        1,
        99,
        27,
        209,
        21,
        149,
        96,
        226,
        27,
        129,
        82,
        80,
        129,
        129,
        132,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        99,
        49,
        60,
        229,
        103,
        96,
        64,
        81,
        129,
        99,
        255,
        255,
        255,
        255,
        22,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        98,
        0,
        0,
        235,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        98,
        0,
        1,
        17,
        145,
        144,
        98,
        0,
        3,
        46,
        86,
        91,
        96,
        1,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        138,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        137,
        145,
        144,
        96,
        0,
        144,
        127,
        139,
        224,
        7,
        156,
        83,
        22,
        89,
        20,
        19,
        68,
        205,
        31,
        208,
        164,
        242,
        132,
        25,
        73,
        127,
        151,
        34,
        163,
        218,
        175,
        227,
        180,
        24,
        111,
        107,
        100,
        87,
        224,
        144,
        130,
        144,
        163,
        80,
        96,
        2,
        98,
        0,
        1,
        108,
        132,
        130,
        98,
        0,
        3,
        255,
        86,
        91,
        80,
        96,
        3,
        98,
        0,
        1,
        123,
        131,
        130,
        98,
        0,
        3,
        255,
        86,
        91,
        80,
        96,
        255,
        129,
        22,
        96,
        128,
        82,
        70,
        96,
        160,
        82,
        98,
        0,
        1,
        145,
        98,
        0,
        1,
        239,
        86,
        91,
        96,
        192,
        82,
        80,
        80,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        145,
        130,
        22,
        96,
        224,
        82,
        80,
        96,
        8,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        145,
        131,
        22,
        145,
        130,
        23,
        144,
        85,
        96,
        64,
        81,
        127,
        122,
        123,
        90,
        10,
        19,
        47,
        158,
        5,
        129,
        235,
        133,
        39,
        246,
        110,
        174,
        158,
        232,
        156,
        42,
        62,
        121,
        212,
        172,
        126,
        65,
        161,
        241,
        244,
        212,
        138,
        127,
        194,
        144,
        96,
        0,
        144,
        162,
        80,
        80,
        80,
        98,
        0,
        5,
        73,
        86,
        91,
        96,
        0,
        127,
        139,
        115,
        195,
        198,
        155,
        184,
        254,
        61,
        81,
        46,
        204,
        76,
        247,
        89,
        204,
        121,
        35,
        159,
        123,
        23,
        155,
        15,
        250,
        202,
        169,
        167,
        93,
        82,
        43,
        57,
        64,
        15,
        96,
        2,
        96,
        64,
        81,
        98,
        0,
        2,
        35,
        145,
        144,
        98,
        0,
        4,
        203,
        86,
        91,
        96,
        64,
        128,
        81,
        145,
        130,
        144,
        3,
        130,
        32,
        96,
        32,
        131,
        1,
        147,
        144,
        147,
        82,
        129,
        1,
        145,
        144,
        145,
        82,
        127,
        200,
        158,
        253,
        170,
        84,
        192,
        242,
        12,
        122,
        223,
        97,
        40,
        130,
        223,
        9,
        80,
        245,
        169,
        81,
        99,
        126,
        3,
        7,
        205,
        203,
        76,
        103,
        47,
        41,
        139,
        139,
        198,
        96,
        96,
        130,
        1,
        82,
        70,
        96,
        128,
        130,
        1,
        82,
        48,
        96,
        160,
        130,
        1,
        82,
        96,
        192,
        1,
        96,
        64,
        81,
        96,
        32,
        129,
        131,
        3,
        3,
        129,
        82,
        144,
        96,
        64,
        82,
        128,
        81,
        144,
        96,
        32,
        1,
        32,
        144,
        80,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        129,
        129,
        22,
        131,
        130,
        22,
        1,
        144,
        128,
        130,
        17,
        21,
        98,
        0,
        2,
        186,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        98,
        0,
        2,
        215,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        98,
        0,
        2,
        240,
        87,
        96,
        0,
        128,
        253,
        91,
        131,
        81,
        98,
        0,
        2,
        253,
        129,
        98,
        0,
        2,
        193,
        86,
        91,
        96,
        32,
        133,
        1,
        81,
        144,
        147,
        80,
        98,
        0,
        3,
        16,
        129,
        98,
        0,
        2,
        193,
        86,
        91,
        96,
        64,
        133,
        1,
        81,
        144,
        146,
        80,
        98,
        0,
        3,
        35,
        129,
        98,
        0,
        2,
        193,
        86,
        91,
        128,
        145,
        80,
        80,
        146,
        80,
        146,
        80,
        146,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        98,
        0,
        3,
        65,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        96,
        255,
        129,
        22,
        129,
        20,
        98,
        0,
        3,
        83,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        1,
        129,
        129,
        28,
        144,
        130,
        22,
        128,
        98,
        0,
        3,
        133,
        87,
        96,
        127,
        130,
        22,
        145,
        80,
        91,
        96,
        32,
        130,
        16,
        129,
        3,
        98,
        0,
        3,
        166,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        34,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        145,
        144,
        80,
        86,
        91,
        96,
        31,
        130,
        17,
        21,
        98,
        0,
        3,
        250,
        87,
        96,
        0,
        129,
        129,
        82,
        96,
        32,
        129,
        32,
        96,
        31,
        133,
        1,
        96,
        5,
        28,
        129,
        1,
        96,
        32,
        134,
        16,
        21,
        98,
        0,
        3,
        213,
        87,
        80,
        128,
        91,
        96,
        31,
        133,
        1,
        96,
        5,
        28,
        130,
        1,
        145,
        80,
        91,
        129,
        129,
        16,
        21,
        98,
        0,
        3,
        246,
        87,
        130,
        129,
        85,
        96,
        1,
        1,
        98,
        0,
        3,
        225,
        86,
        91,
        80,
        80,
        80,
        91,
        80,
        80,
        80,
        86,
        91,
        129,
        81,
        96,
        1,
        96,
        1,
        96,
        64,
        27,
        3,
        129,
        17,
        21,
        98,
        0,
        4,
        27,
        87,
        98,
        0,
        4,
        27,
        98,
        0,
        3,
        90,
        86,
        91,
        98,
        0,
        4,
        51,
        129,
        98,
        0,
        4,
        44,
        132,
        84,
        98,
        0,
        3,
        112,
        86,
        91,
        132,
        98,
        0,
        3,
        172,
        86,
        91,
        96,
        32,
        128,
        96,
        31,
        131,
        17,
        96,
        1,
        129,
        20,
        98,
        0,
        4,
        107,
        87,
        96,
        0,
        132,
        21,
        98,
        0,
        4,
        82,
        87,
        80,
        133,
        131,
        1,
        81,
        91,
        96,
        0,
        25,
        96,
        3,
        134,
        144,
        27,
        28,
        25,
        22,
        96,
        1,
        133,
        144,
        27,
        23,
        133,
        85,
        98,
        0,
        3,
        246,
        86,
        91,
        96,
        0,
        133,
        129,
        82,
        96,
        32,
        129,
        32,
        96,
        31,
        25,
        134,
        22,
        145,
        91,
        130,
        129,
        16,
        21,
        98,
        0,
        4,
        156,
        87,
        136,
        134,
        1,
        81,
        130,
        85,
        148,
        132,
        1,
        148,
        96,
        1,
        144,
        145,
        1,
        144,
        132,
        1,
        98,
        0,
        4,
        123,
        86,
        91,
        80,
        133,
        130,
        16,
        21,
        98,
        0,
        4,
        187,
        87,
        135,
        133,
        1,
        81,
        96,
        0,
        25,
        96,
        3,
        136,
        144,
        27,
        96,
        248,
        22,
        28,
        25,
        22,
        129,
        85,
        91,
        80,
        80,
        80,
        80,
        80,
        96,
        1,
        144,
        129,
        27,
        1,
        144,
        85,
        80,
        86,
        91,
        96,
        0,
        128,
        131,
        84,
        98,
        0,
        4,
        219,
        129,
        98,
        0,
        3,
        112,
        86,
        91,
        96,
        1,
        130,
        129,
        22,
        128,
        21,
        98,
        0,
        4,
        246,
        87,
        96,
        1,
        129,
        20,
        98,
        0,
        5,
        12,
        87,
        98,
        0,
        5,
        61,
        86,
        91,
        96,
        255,
        25,
        132,
        22,
        135,
        82,
        130,
        21,
        21,
        131,
        2,
        135,
        1,
        148,
        80,
        98,
        0,
        5,
        61,
        86,
        91,
        135,
        96,
        0,
        82,
        96,
        32,
        128,
        96,
        0,
        32,
        96,
        0,
        91,
        133,
        129,
        16,
        21,
        98,
        0,
        5,
        52,
        87,
        129,
        84,
        138,
        130,
        1,
        82,
        144,
        132,
        1,
        144,
        130,
        1,
        98,
        0,
        5,
        25,
        86,
        91,
        80,
        80,
        80,
        130,
        135,
        1,
        148,
        80,
        91,
        80,
        146,
        150,
        149,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        128,
        81,
        96,
        160,
        81,
        96,
        192,
        81,
        96,
        224,
        81,
        97,
        1,
        0,
        81,
        97,
        27,
        159,
        98,
        0,
        5,
        212,
        96,
        0,
        57,
        96,
        0,
        129,
        129,
        97,
        5,
        120,
        1,
        82,
        97,
        18,
        93,
        1,
        82,
        96,
        0,
        129,
        129,
        97,
        3,
        18,
        1,
        82,
        129,
        129,
        97,
        5,
        220,
        1,
        82,
        129,
        129,
        97,
        9,
        20,
        1,
        82,
        129,
        129,
        97,
        9,
        250,
        1,
        82,
        129,
        129,
        97,
        10,
        226,
        1,
        82,
        129,
        129,
        97,
        11,
        119,
        1,
        82,
        129,
        129,
        97,
        12,
        19,
        1,
        82,
        129,
        129,
        97,
        14,
        14,
        1,
        82,
        129,
        129,
        97,
        15,
        90,
        1,
        82,
        97,
        18,
        21,
        1,
        82,
        96,
        0,
        97,
        8,
        176,
        1,
        82,
        96,
        0,
        97,
        8,
        128,
        1,
        82,
        96,
        0,
        97,
        2,
        209,
        1,
        82,
        97,
        27,
        159,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        2,
        50,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        141,
        165,
        203,
        91,
        17,
        97,
        1,
        48,
        87,
        128,
        99,
        198,
        230,
        245,
        146,
        17,
        97,
        0,
        184,
        87,
        128,
        99,
        221,
        98,
        237,
        62,
        17,
        97,
        0,
        124,
        87,
        128,
        99,
        221,
        98,
        237,
        62,
        20,
        97,
        5,
        34,
        87,
        128,
        99,
        231,
        75,
        152,
        27,
        20,
        97,
        5,
        77,
        87,
        128,
        99,
        239,
        139,
        48,
        247,
        20,
        97,
        5,
        96,
        87,
        128,
        99,
        239,
        190,
        28,
        28,
        20,
        97,
        5,
        115,
        87,
        128,
        99,
        242,
        253,
        227,
        139,
        20,
        97,
        5,
        154,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        198,
        230,
        245,
        146,
        20,
        97,
        4,
        171,
        87,
        128,
        99,
        206,
        150,
        203,
        119,
        20,
        97,
        4,
        190,
        87,
        128,
        99,
        213,
        5,
        172,
        207,
        20,
        97,
        4,
        209,
        87,
        128,
        99,
        217,
        5,
        119,
        126,
        20,
        97,
        4,
        230,
        87,
        128,
        99,
        217,
        217,
        140,
        228,
        20,
        97,
        5,
        15,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        179,
        215,
        246,
        185,
        17,
        97,
        0,
        255,
        87,
        128,
        99,
        179,
        215,
        246,
        185,
        20,
        97,
        4,
        79,
        87,
        128,
        99,
        180,
        96,
        175,
        148,
        20,
        97,
        4,
        98,
        87,
        128,
        99,
        186,
        8,
        118,
        82,
        20,
        97,
        4,
        117,
        87,
        128,
        99,
        193,
        162,
        135,
        226,
        20,
        97,
        4,
        136,
        87,
        128,
        99,
        198,
        61,
        117,
        182,
        20,
        97,
        3,
        76,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        141,
        165,
        203,
        91,
        20,
        97,
        4,
        14,
        87,
        128,
        99,
        148,
        191,
        128,
        77,
        20,
        97,
        4,
        33,
        87,
        128,
        99,
        149,
        216,
        155,
        65,
        20,
        97,
        4,
        52,
        87,
        128,
        99,
        169,
        5,
        156,
        187,
        20,
        97,
        4,
        60,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        56,
        213,
        46,
        15,
        17,
        97,
        1,
        190,
        87,
        128,
        99,
        92,
        255,
        233,
        222,
        17,
        97,
        1,
        130,
        87,
        128,
        99,
        92,
        255,
        233,
        222,
        20,
        97,
        3,
        149,
        87,
        128,
        99,
        97,
        50,
        85,
        171,
        20,
        97,
        3,
        168,
        87,
        128,
        99,
        110,
        85,
        63,
        101,
        20,
        97,
        3,
        187,
        87,
        128,
        99,
        112,
        160,
        130,
        49,
        20,
        97,
        3,
        206,
        87,
        128,
        99,
        126,
        206,
        190,
        0,
        20,
        97,
        3,
        238,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        56,
        213,
        46,
        15,
        20,
        97,
        3,
        13,
        87,
        128,
        99,
        64,
        45,
        38,
        125,
        20,
        97,
        3,
        76,
        87,
        128,
        99,
        70,
        144,
        72,
        64,
        20,
        97,
        3,
        97,
        87,
        128,
        99,
        76,
        218,
        213,
        6,
        20,
        97,
        3,
        116,
        87,
        128,
        99,
        90,
        251,
        196,
        168,
        20,
        97,
        3,
        135,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        10,
        40,
        164,
        119,
        17,
        97,
        2,
        5,
        87,
        128,
        99,
        10,
        40,
        164,
        119,
        20,
        97,
        2,
        157,
        87,
        128,
        99,
        24,
        22,
        13,
        221,
        20,
        97,
        2,
        176,
        87,
        128,
        99,
        35,
        184,
        114,
        221,
        20,
        97,
        2,
        185,
        87,
        128,
        99,
        49,
        60,
        229,
        103,
        20,
        97,
        2,
        204,
        87,
        128,
        99,
        54,
        68,
        229,
        21,
        20,
        97,
        3,
        5,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        1,
        225,
        209,
        20,
        20,
        97,
        2,
        55,
        87,
        128,
        99,
        6,
        253,
        222,
        3,
        20,
        97,
        2,
        82,
        87,
        128,
        99,
        7,
        162,
        209,
        58,
        20,
        97,
        2,
        103,
        87,
        128,
        99,
        9,
        94,
        167,
        179,
        20,
        97,
        2,
        122,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        2,
        63,
        97,
        5,
        173,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        2,
        90,
        97,
        6,
        84,
        86,
        91,
        96,
        64,
        81,
        97,
        2,
        73,
        145,
        144,
        97,
        23,
        3,
        86,
        91,
        97,
        2,
        63,
        97,
        2,
        117,
        54,
        96,
        4,
        97,
        23,
        81,
        86,
        91,
        97,
        6,
        226,
        86,
        91,
        97,
        2,
        141,
        97,
        2,
        136,
        54,
        96,
        4,
        97,
        23,
        127,
        86,
        91,
        97,
        7,
        15,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        73,
        86,
        91,
        97,
        2,
        63,
        97,
        2,
        171,
        54,
        96,
        4,
        97,
        23,
        81,
        86,
        91,
        97,
        7,
        124,
        86,
        91,
        97,
        2,
        63,
        96,
        4,
        84,
        129,
        86,
        91,
        97,
        2,
        141,
        97,
        2,
        199,
        54,
        96,
        4,
        97,
        23,
        171,
        86,
        91,
        97,
        7,
        156,
        86,
        91,
        97,
        2,
        243,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        64,
        81,
        96,
        255,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        73,
        86,
        91,
        97,
        2,
        63,
        97,
        8,
        124,
        86,
        91,
        97,
        3,
        52,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        73,
        86,
        91,
        97,
        2,
        63,
        97,
        3,
        90,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        80,
        96,
        0,
        25,
        144,
        86,
        91,
        96,
        8,
        84,
        97,
        3,
        52,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        2,
        63,
        97,
        3,
        130,
        54,
        96,
        4,
        97,
        23,
        81,
        86,
        91,
        97,
        8,
        210,
        86,
        91,
        97,
        2,
        63,
        102,
        177,
        162,
        188,
        46,
        197,
        0,
        0,
        129,
        86,
        91,
        97,
        2,
        141,
        97,
        3,
        163,
        54,
        96,
        4,
        97,
        24,
        9,
        86,
        91,
        97,
        8,
        221,
        86,
        91,
        97,
        2,
        63,
        97,
        3,
        182,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        97,
        10,
        212,
        86,
        91,
        97,
        2,
        63,
        97,
        3,
        201,
        54,
        96,
        4,
        97,
        24,
        168,
        86,
        91,
        97,
        11,
        31,
        86,
        91,
        97,
        2,
        63,
        97,
        3,
        220,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        96,
        5,
        96,
        32,
        82,
        96,
        0,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        86,
        91,
        97,
        2,
        63,
        97,
        3,
        252,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        96,
        7,
        96,
        32,
        82,
        96,
        0,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        86,
        91,
        96,
        1,
        84,
        97,
        3,
        52,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        2,
        63,
        97,
        4,
        47,
        54,
        96,
        4,
        97,
        24,
        168,
        86,
        91,
        97,
        11,
        249,
        86,
        91,
        97,
        2,
        90,
        97,
        12,
        149,
        86,
        91,
        97,
        2,
        141,
        97,
        4,
        74,
        54,
        96,
        4,
        97,
        23,
        127,
        86,
        91,
        97,
        12,
        162,
        86,
        91,
        97,
        2,
        63,
        97,
        4,
        93,
        54,
        96,
        4,
        97,
        23,
        81,
        86,
        91,
        97,
        13,
        8,
        86,
        91,
        97,
        2,
        63,
        97,
        4,
        112,
        54,
        96,
        4,
        97,
        24,
        216,
        86,
        91,
        97,
        13,
        39,
        86,
        91,
        97,
        2,
        63,
        97,
        4,
        131,
        54,
        96,
        4,
        97,
        24,
        216,
        86,
        91,
        97,
        14,
        53,
        86,
        91,
        97,
        4,
        146,
        98,
        39,
        141,
        0,
        129,
        86,
        91,
        96,
        64,
        81,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        73,
        86,
        91,
        97,
        2,
        63,
        97,
        4,
        185,
        54,
        96,
        4,
        97,
        23,
        81,
        86,
        91,
        97,
        15,
        129,
        86,
        91,
        97,
        2,
        63,
        97,
        4,
        204,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        97,
        15,
        161,
        86,
        91,
        97,
        4,
        228,
        97,
        4,
        223,
        54,
        96,
        4,
        97,
        25,
        26,
        86,
        91,
        97,
        15,
        195,
        86,
        91,
        0,
        91,
        97,
        2,
        63,
        97,
        4,
        244,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        144,
        86,
        91,
        97,
        2,
        63,
        97,
        5,
        29,
        54,
        96,
        4,
        97,
        23,
        127,
        86,
        91,
        97,
        18,
        7,
        86,
        91,
        97,
        2,
        63,
        97,
        5,
        48,
        54,
        96,
        4,
        97,
        25,
        145,
        86,
        91,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        0,
        146,
        131,
        82,
        96,
        64,
        128,
        132,
        32,
        144,
        145,
        82,
        144,
        130,
        82,
        144,
        32,
        84,
        129,
        86,
        91,
        97,
        4,
        228,
        97,
        5,
        91,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        97,
        18,
        192,
        86,
        91,
        97,
        2,
        63,
        97,
        5,
        110,
        54,
        96,
        4,
        97,
        23,
        81,
        86,
        91,
        97,
        19,
        100,
        86,
        91,
        97,
        4,
        146,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        4,
        228,
        97,
        5,
        168,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        97,
        19,
        111,
        86,
        91,
        96,
        0,
        96,
        2,
        96,
        0,
        84,
        3,
        97,
        5,
        199,
        87,
        99,
        237,
        59,
        166,
        166,
        96,
        0,
        82,
        96,
        4,
        96,
        28,
        253,
        91,
        96,
        64,
        81,
        99,
        112,
        160,
        130,
        49,
        96,
        224,
        27,
        129,
        82,
        48,
        96,
        4,
        130,
        1,
        82,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        144,
        99,
        112,
        160,
        130,
        49,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        6,
        43,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        6,
        79,
        145,
        144,
        97,
        25,
        191,
        86,
        91,
        144,
        80,
        144,
        86,
        91,
        96,
        2,
        128,
        84,
        97,
        6,
        97,
        144,
        97,
        25,
        216,
        86,
        91,
        128,
        96,
        31,
        1,
        96,
        32,
        128,
        145,
        4,
        2,
        96,
        32,
        1,
        96,
        64,
        81,
        144,
        129,
        1,
        96,
        64,
        82,
        128,
        146,
        145,
        144,
        129,
        129,
        82,
        96,
        32,
        1,
        130,
        128,
        84,
        97,
        6,
        141,
        144,
        97,
        25,
        216,
        86,
        91,
        128,
        21,
        97,
        6,
        218,
        87,
        128,
        96,
        31,
        16,
        97,
        6,
        175,
        87,
        97,
        1,
        0,
        128,
        131,
        84,
        4,
        2,
        131,
        82,
        145,
        96,
        32,
        1,
        145,
        97,
        6,
        218,
        86,
        91,
        130,
        1,
        145,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        144,
        91,
        129,
        84,
        129,
        82,
        144,
        96,
        1,
        1,
        144,
        96,
        32,
        1,
        128,
        131,
        17,
        97,
        6,
        189,
        87,
        130,
        144,
        3,
        96,
        31,
        22,
        130,
        1,
        145,
        91,
        80,
        80,
        80,
        80,
        80,
        129,
        86,
        91,
        96,
        4,
        84,
        96,
        0,
        144,
        128,
        21,
        97,
        7,
        6,
        87,
        97,
        7,
        1,
        97,
        6,
        249,
        97,
        5,
        173,
        86,
        91,
        132,
        144,
        131,
        97,
        20,
        4,
        86,
        91,
        97,
        7,
        8,
        86,
        91,
        130,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        51,
        96,
        0,
        129,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        135,
        22,
        128,
        133,
        82,
        146,
        82,
        128,
        131,
        32,
        133,
        144,
        85,
        81,
        145,
        146,
        144,
        145,
        127,
        140,
        91,
        225,
        229,
        235,
        236,
        125,
        91,
        209,
        79,
        113,
        66,
        125,
        30,
        132,
        243,
        221,
        3,
        20,
        192,
        247,
        178,
        41,
        30,
        91,
        32,
        10,
        200,
        199,
        195,
        185,
        37,
        144,
        97,
        7,
        106,
        144,
        134,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        80,
        96,
        1,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        4,
        84,
        96,
        0,
        144,
        128,
        21,
        97,
        7,
        6,
        87,
        97,
        7,
        1,
        129,
        97,
        7,
        148,
        97,
        5,
        173,
        86,
        91,
        133,
        145,
        144,
        97,
        20,
        34,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        51,
        132,
        82,
        144,
        145,
        82,
        129,
        32,
        84,
        96,
        0,
        25,
        129,
        20,
        97,
        7,
        248,
        87,
        97,
        7,
        211,
        131,
        130,
        97,
        26,
        40,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        134,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        51,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        85,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        133,
        146,
        144,
        97,
        8,
        32,
        144,
        132,
        144,
        97,
        26,
        40,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        133,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        144,
        129,
        144,
        32,
        128,
        84,
        135,
        1,
        144,
        85,
        81,
        144,
        145,
        135,
        22,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        74,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        97,
        8,
        105,
        144,
        135,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        80,
        96,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        70,
        20,
        97,
        8,
        173,
        87,
        97,
        6,
        79,
        97,
        20,
        72,
        86,
        91,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        144,
        86,
        91,
        96,
        0,
        97,
        7,
        118,
        130,
        97,
        6,
        226,
        86,
        91,
        96,
        0,
        131,
        96,
        0,
        3,
        97,
        9,
        8,
        87,
        96,
        64,
        81,
        99,
        55,
        40,
        184,
        61,
        96,
        224,
        27,
        129,
        82,
        96,
        0,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        132,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        97,
        9,
        90,
        87,
        96,
        64,
        81,
        99,
        17,
        49,
        250,
        113,
        96,
        225,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        97,
        9,
        100,
        97,
        5,
        173,
        86,
        91,
        144,
        80,
        128,
        97,
        9,
        114,
        96,
        4,
        84,
        97,
        15,
        129,
        86,
        91,
        20,
        97,
        9,
        144,
        87,
        96,
        64,
        81,
        99,
        197,
        46,
        62,
        255,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        97,
        9,
        156,
        135,
        135,
        97,
        18,
        7,
        86,
        91,
        144,
        80,
        97,
        9,
        178,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        136,
        22,
        137,
        136,
        97,
        20,
        226,
        86,
        91,
        96,
        64,
        81,
        99,
        35,
        227,
        12,
        139,
        96,
        224,
        27,
        129,
        82,
        127,
        9,
        71,
        205,
        57,
        104,
        56,
        151,
        150,
        76,
        70,
        129,
        242,
        169,
        172,
        228,
        121,
        64,
        15,
        11,
        212,
        103,
        17,
        125,
        10,
        224,
        46,
        153,
        227,
        3,
        1,
        42,
        222,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        138,
        22,
        144,
        99,
        35,
        227,
        12,
        139,
        144,
        97,
        10,
        42,
        144,
        51,
        144,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        144,
        140,
        144,
        136,
        144,
        141,
        144,
        141,
        144,
        96,
        4,
        1,
        97,
        26,
        59,
        86,
        91,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        90,
        241,
        21,
        128,
        21,
        97,
        10,
        73,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        10,
        109,
        145,
        144,
        97,
        25,
        191,
        86,
        91,
        20,
        97,
        10,
        139,
        87,
        96,
        64,
        81,
        99,
        4,
        67,
        236,
        43,
        96,
        227,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        10,
        172,
        136,
        48,
        97,
        10,
        154,
        132,
        138,
        97,
        26,
        151,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        139,
        22,
        146,
        145,
        144,
        97,
        21,
        96,
        86,
        91,
        96,
        8,
        84,
        97,
        10,
        198,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        137,
        129,
        22,
        145,
        22,
        131,
        97,
        20,
        226,
        86,
        91,
        80,
        96,
        1,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        97,
        11,
        23,
        87,
        80,
        96,
        0,
        145,
        144,
        80,
        86,
        91,
        97,
        7,
        118,
        97,
        5,
        173,
        86,
        91,
        96,
        0,
        97,
        11,
        42,
        131,
        97,
        19,
        100,
        86,
        91,
        144,
        80,
        128,
        96,
        0,
        3,
        97,
        11,
        106,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        11,
        96,
        36,
        130,
        1,
        82,
        106,
        90,
        69,
        82,
        79,
        95,
        83,
        72,
        65,
        82,
        69,
        83,
        96,
        168,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        97,
        11,
        159,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        51,
        48,
        134,
        97,
        21,
        96,
        86,
        91,
        97,
        11,
        169,
        130,
        130,
        97,
        21,
        234,
        86,
        91,
        96,
        64,
        128,
        81,
        132,
        129,
        82,
        96,
        32,
        129,
        1,
        131,
        144,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        145,
        51,
        145,
        127,
        220,
        188,
        28,
        5,
        36,
        15,
        49,
        255,
        58,
        208,
        103,
        239,
        30,
        227,
        92,
        228,
        153,
        119,
        98,
        117,
        46,
        58,
        9,
        82,
        132,
        117,
        69,
        68,
        244,
        199,
        9,
        215,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        97,
        7,
        118,
        131,
        130,
        97,
        22,
        68,
        86,
        91,
        96,
        0,
        97,
        12,
        4,
        131,
        97,
        13,
        8,
        86,
        91,
        144,
        80,
        97,
        12,
        59,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        51,
        48,
        132,
        97,
        21,
        96,
        86,
        91,
        97,
        12,
        69,
        130,
        132,
        97,
        21,
        234,
        86,
        91,
        96,
        64,
        128,
        81,
        130,
        129,
        82,
        96,
        32,
        129,
        1,
        133,
        144,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        145,
        51,
        145,
        127,
        220,
        188,
        28,
        5,
        36,
        15,
        49,
        255,
        58,
        208,
        103,
        239,
        30,
        227,
        92,
        228,
        153,
        119,
        98,
        117,
        46,
        58,
        9,
        82,
        132,
        117,
        69,
        68,
        244,
        199,
        9,
        215,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        97,
        7,
        118,
        129,
        132,
        97,
        22,
        68,
        86,
        91,
        96,
        3,
        128,
        84,
        97,
        6,
        97,
        144,
        97,
        25,
        216,
        86,
        91,
        51,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        131,
        145,
        144,
        131,
        144,
        97,
        12,
        195,
        144,
        132,
        144,
        97,
        26,
        40,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        144,
        129,
        144,
        32,
        128,
        84,
        133,
        1,
        144,
        85,
        81,
        51,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        74,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        97,
        7,
        106,
        144,
        134,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        4,
        84,
        96,
        0,
        144,
        128,
        21,
        97,
        7,
        6,
        87,
        97,
        7,
        1,
        97,
        13,
        31,
        97,
        5,
        173,
        86,
        91,
        132,
        144,
        131,
        97,
        20,
        34,
        86,
        91,
        96,
        0,
        97,
        13,
        50,
        132,
        97,
        7,
        124,
        86,
        91,
        144,
        80,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        20,
        97,
        13,
        162,
        87,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        51,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        84,
        96,
        0,
        25,
        129,
        20,
        97,
        13,
        160,
        87,
        97,
        13,
        123,
        130,
        130,
        97,
        26,
        40,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        51,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        85,
        91,
        80,
        91,
        97,
        13,
        172,
        132,
        130,
        97,
        22,
        68,
        86,
        91,
        97,
        13,
        182,
        130,
        130,
        97,
        22,
        140,
        86,
        91,
        96,
        64,
        128,
        81,
        133,
        129,
        82,
        96,
        32,
        129,
        1,
        131,
        144,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        133,
        22,
        146,
        144,
        134,
        22,
        145,
        51,
        145,
        127,
        251,
        222,
        121,
        125,
        32,
        28,
        104,
        27,
        145,
        5,
        101,
        41,
        17,
        158,
        11,
        2,
        64,
        124,
        123,
        185,
        106,
        74,
        44,
        117,
        192,
        31,
        201,
        102,
        114,
        50,
        200,
        219,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        97,
        7,
        8,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        132,
        134,
        97,
        20,
        226,
        86,
        91,
        96,
        0,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        20,
        97,
        14,
        165,
        87,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        51,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        84,
        96,
        0,
        25,
        129,
        20,
        97,
        14,
        163,
        87,
        97,
        14,
        126,
        133,
        130,
        97,
        26,
        40,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        51,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        85,
        91,
        80,
        91,
        97,
        14,
        174,
        132,
        97,
        8,
        210,
        86,
        91,
        144,
        80,
        128,
        96,
        0,
        3,
        97,
        14,
        238,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        11,
        96,
        36,
        130,
        1,
        82,
        106,
        90,
        69,
        82,
        79,
        95,
        65,
        83,
        83,
        69,
        84,
        83,
        96,
        168,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        97,
        14,
        248,
        129,
        133,
        97,
        22,
        68,
        86,
        91,
        97,
        15,
        2,
        130,
        133,
        97,
        22,
        140,
        86,
        91,
        96,
        64,
        128,
        81,
        130,
        129,
        82,
        96,
        32,
        129,
        1,
        134,
        144,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        133,
        22,
        146,
        144,
        134,
        22,
        145,
        51,
        145,
        127,
        251,
        222,
        121,
        125,
        32,
        28,
        104,
        27,
        145,
        5,
        101,
        41,
        17,
        158,
        11,
        2,
        64,
        124,
        123,
        185,
        106,
        74,
        44,
        117,
        192,
        31,
        201,
        102,
        114,
        50,
        200,
        219,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        97,
        7,
        8,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        132,
        131,
        97,
        20,
        226,
        86,
        91,
        96,
        4,
        84,
        96,
        0,
        144,
        128,
        21,
        97,
        7,
        6,
        87,
        97,
        7,
        1,
        129,
        97,
        15,
        153,
        97,
        5,
        173,
        86,
        91,
        133,
        145,
        144,
        97,
        20,
        4,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        97,
        7,
        118,
        144,
        97,
        6,
        226,
        86,
        91,
        66,
        132,
        16,
        21,
        97,
        16,
        19,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        23,
        96,
        36,
        130,
        1,
        82,
        127,
        80,
        69,
        82,
        77,
        73,
        84,
        95,
        68,
        69,
        65,
        68,
        76,
        73,
        78,
        69,
        95,
        69,
        88,
        80,
        73,
        82,
        69,
        68,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        96,
        0,
        96,
        1,
        97,
        16,
        31,
        97,
        8,
        124,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        138,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        7,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        145,
        130,
        144,
        32,
        128,
        84,
        96,
        1,
        129,
        1,
        144,
        145,
        85,
        130,
        81,
        127,
        110,
        113,
        237,
        174,
        18,
        177,
        185,
        127,
        77,
        31,
        96,
        55,
        15,
        239,
        16,
        16,
        95,
        162,
        250,
        174,
        1,
        38,
        17,
        74,
        22,
        156,
        100,
        132,
        93,
        97,
        38,
        201,
        129,
        132,
        1,
        82,
        128,
        132,
        1,
        148,
        144,
        148,
        82,
        147,
        141,
        22,
        96,
        96,
        132,
        1,
        82,
        96,
        128,
        131,
        1,
        140,
        144,
        82,
        96,
        160,
        131,
        1,
        147,
        144,
        147,
        82,
        96,
        192,
        128,
        131,
        1,
        139,
        144,
        82,
        129,
        81,
        128,
        132,
        3,
        144,
        145,
        1,
        129,
        82,
        96,
        224,
        131,
        1,
        144,
        145,
        82,
        128,
        81,
        146,
        1,
        145,
        144,
        145,
        32,
        97,
        25,
        1,
        96,
        240,
        27,
        97,
        1,
        0,
        131,
        1,
        82,
        97,
        1,
        2,
        130,
        1,
        146,
        144,
        146,
        82,
        97,
        1,
        34,
        129,
        1,
        145,
        144,
        145,
        82,
        97,
        1,
        66,
        1,
        96,
        64,
        128,
        81,
        96,
        31,
        25,
        129,
        132,
        3,
        1,
        129,
        82,
        130,
        130,
        82,
        128,
        81,
        96,
        32,
        145,
        130,
        1,
        32,
        96,
        0,
        132,
        82,
        144,
        131,
        1,
        128,
        131,
        82,
        82,
        96,
        255,
        135,
        22,
        144,
        130,
        1,
        82,
        96,
        96,
        129,
        1,
        133,
        144,
        82,
        96,
        128,
        129,
        1,
        132,
        144,
        82,
        96,
        160,
        1,
        96,
        32,
        96,
        64,
        81,
        96,
        32,
        129,
        3,
        144,
        128,
        132,
        3,
        144,
        133,
        90,
        250,
        21,
        128,
        21,
        97,
        17,
        43,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        96,
        64,
        81,
        96,
        31,
        25,
        1,
        81,
        145,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        21,
        128,
        21,
        144,
        97,
        17,
        97,
        87,
        80,
        135,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        91,
        97,
        17,
        158,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        14,
        96,
        36,
        130,
        1,
        82,
        109,
        36,
        167,
        43,
        32,
        166,
        36,
        162,
        47,
        169,
        164,
        163,
        167,
        34,
        169,
        96,
        145,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        138,
        133,
        22,
        128,
        133,
        82,
        144,
        131,
        82,
        146,
        129,
        144,
        32,
        137,
        144,
        85,
        81,
        136,
        129,
        82,
        145,
        146,
        138,
        22,
        145,
        127,
        140,
        91,
        225,
        229,
        235,
        236,
        125,
        91,
        209,
        79,
        113,
        66,
        125,
        30,
        132,
        243,
        221,
        3,
        20,
        192,
        247,
        178,
        41,
        30,
        91,
        32,
        10,
        200,
        199,
        195,
        185,
        37,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        97,
        18,
        91,
        87,
        96,
        64,
        81,
        99,
        17,
        49,
        250,
        113,
        96,
        225,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        66,
        16,
        128,
        21,
        97,
        18,
        155,
        87,
        80,
        97,
        18,
        152,
        131,
        97,
        10,
        212,
        86,
        91,
        130,
        16,
        91,
        21,
        97,
        18,
        168,
        87,
        80,
        96,
        0,
        97,
        7,
        118,
        86,
        91,
        97,
        18,
        185,
        130,
        102,
        177,
        162,
        188,
        46,
        197,
        0,
        0,
        97,
        22,
        238,
        86,
        91,
        144,
        80,
        97,
        7,
        118,
        86,
        91,
        96,
        1,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        19,
        9,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        12,
        96,
        36,
        130,
        1,
        82,
        107,
        21,
        83,
        144,
        85,
        85,
        18,
        19,
        212,
        146,
        86,
        145,
        81,
        96,
        162,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        48,
        20,
        97,
        19,
        97,
        87,
        96,
        8,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        127,
        122,
        123,
        90,
        10,
        19,
        47,
        158,
        5,
        129,
        235,
        133,
        39,
        246,
        110,
        174,
        158,
        232,
        156,
        42,
        62,
        121,
        212,
        172,
        126,
        65,
        161,
        241,
        244,
        212,
        138,
        127,
        194,
        144,
        96,
        0,
        144,
        162,
        91,
        80,
        86,
        91,
        96,
        0,
        97,
        7,
        118,
        130,
        97,
        15,
        129,
        86,
        91,
        96,
        1,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        19,
        184,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        12,
        96,
        36,
        130,
        1,
        82,
        107,
        21,
        83,
        144,
        85,
        85,
        18,
        19,
        212,
        146,
        86,
        145,
        81,
        96,
        162,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        96,
        1,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        51,
        144,
        127,
        139,
        224,
        7,
        156,
        83,
        22,
        89,
        20,
        19,
        68,
        205,
        31,
        208,
        164,
        242,
        132,
        25,
        73,
        127,
        151,
        34,
        163,
        218,
        175,
        227,
        180,
        24,
        111,
        107,
        100,
        87,
        224,
        144,
        96,
        0,
        144,
        163,
        80,
        86,
        91,
        96,
        0,
        130,
        96,
        0,
        25,
        4,
        132,
        17,
        131,
        2,
        21,
        130,
        2,
        97,
        20,
        27,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        145,
        2,
        4,
        144,
        86,
        91,
        96,
        0,
        130,
        96,
        0,
        25,
        4,
        132,
        17,
        131,
        2,
        21,
        130,
        2,
        97,
        20,
        57,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        145,
        2,
        129,
        129,
        6,
        21,
        21,
        145,
        144,
        4,
        1,
        144,
        86,
        91,
        96,
        0,
        127,
        139,
        115,
        195,
        198,
        155,
        184,
        254,
        61,
        81,
        46,
        204,
        76,
        247,
        89,
        204,
        121,
        35,
        159,
        123,
        23,
        155,
        15,
        250,
        202,
        169,
        167,
        93,
        82,
        43,
        57,
        64,
        15,
        96,
        2,
        96,
        64,
        81,
        97,
        20,
        122,
        145,
        144,
        97,
        26,
        170,
        86,
        91,
        96,
        64,
        128,
        81,
        145,
        130,
        144,
        3,
        130,
        32,
        96,
        32,
        131,
        1,
        147,
        144,
        147,
        82,
        129,
        1,
        145,
        144,
        145,
        82,
        127,
        200,
        158,
        253,
        170,
        84,
        192,
        242,
        12,
        122,
        223,
        97,
        40,
        130,
        223,
        9,
        80,
        245,
        169,
        81,
        99,
        126,
        3,
        7,
        205,
        203,
        76,
        103,
        47,
        41,
        139,
        139,
        198,
        96,
        96,
        130,
        1,
        82,
        70,
        96,
        128,
        130,
        1,
        82,
        48,
        96,
        160,
        130,
        1,
        82,
        96,
        192,
        1,
        96,
        64,
        81,
        96,
        32,
        129,
        131,
        3,
        3,
        129,
        82,
        144,
        96,
        64,
        82,
        128,
        81,
        144,
        96,
        32,
        1,
        32,
        144,
        80,
        144,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        99,
        169,
        5,
        156,
        187,
        96,
        224,
        27,
        129,
        82,
        131,
        96,
        4,
        130,
        1,
        82,
        130,
        96,
        36,
        130,
        1,
        82,
        96,
        32,
        96,
        0,
        96,
        68,
        131,
        96,
        0,
        137,
        90,
        241,
        61,
        21,
        96,
        31,
        61,
        17,
        96,
        1,
        96,
        0,
        81,
        20,
        22,
        23,
        22,
        145,
        80,
        80,
        128,
        97,
        21,
        90,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        15,
        96,
        36,
        130,
        1,
        82,
        110,
        21,
        20,
        144,
        83,
        148,
        209,
        145,
        84,
        151,
        209,
        144,
        82,
        83,
        17,
        81,
        96,
        138,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        99,
        35,
        184,
        114,
        221,
        96,
        224,
        27,
        129,
        82,
        132,
        96,
        4,
        130,
        1,
        82,
        131,
        96,
        36,
        130,
        1,
        82,
        130,
        96,
        68,
        130,
        1,
        82,
        96,
        32,
        96,
        0,
        96,
        100,
        131,
        96,
        0,
        138,
        90,
        241,
        61,
        21,
        96,
        31,
        61,
        17,
        96,
        1,
        96,
        0,
        81,
        20,
        22,
        23,
        22,
        145,
        80,
        80,
        128,
        97,
        21,
        227,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        20,
        96,
        36,
        130,
        1,
        82,
        115,
        21,
        20,
        144,
        83,
        148,
        209,
        145,
        84,
        151,
        209,
        148,
        147,
        211,
        87,
        209,
        144,
        82,
        83,
        17,
        81,
        96,
        98,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        128,
        96,
        4,
        96,
        0,
        130,
        130,
        84,
        97,
        21,
        252,
        145,
        144,
        97,
        26,
        151,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        5,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        128,
        84,
        134,
        1,
        144,
        85,
        81,
        132,
        129,
        82,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        74,
        131,
        57,
        129,
        81,
        145,
        82,
        145,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        80,
        80,
        86,
        91,
        96,
        0,
        84,
        96,
        1,
        20,
        97,
        22,
        131,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        10,
        96,
        36,
        130,
        1,
        82,
        105,
        82,
        69,
        69,
        78,
        84,
        82,
        65,
        78,
        67,
        89,
        96,
        176,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        80,
        80,
        96,
        1,
        96,
        0,
        85,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        131,
        146,
        144,
        97,
        22,
        180,
        144,
        132,
        144,
        97,
        26,
        40,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        4,
        128,
        84,
        130,
        144,
        3,
        144,
        85,
        96,
        64,
        81,
        129,
        129,
        82,
        96,
        0,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        74,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        96,
        32,
        1,
        97,
        22,
        56,
        86,
        91,
        96,
        0,
        97,
        7,
        8,
        131,
        131,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        97,
        20,
        34,
        86,
        91,
        96,
        0,
        96,
        32,
        128,
        131,
        82,
        131,
        81,
        128,
        130,
        133,
        1,
        82,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        23,
        48,
        87,
        133,
        129,
        1,
        131,
        1,
        81,
        133,
        130,
        1,
        96,
        64,
        1,
        82,
        130,
        1,
        97,
        23,
        20,
        86,
        91,
        80,
        96,
        0,
        96,
        64,
        130,
        134,
        1,
        1,
        82,
        96,
        64,
        96,
        31,
        25,
        96,
        31,
        131,
        1,
        22,
        133,
        1,
        1,
        146,
        80,
        80,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        23,
        99,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        19,
        97,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        23,
        146,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        97,
        23,
        157,
        129,
        97,
        23,
        106,
        86,
        91,
        148,
        96,
        32,
        147,
        144,
        147,
        1,
        53,
        147,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        97,
        23,
        192,
        87,
        96,
        0,
        128,
        253,
        91,
        131,
        53,
        97,
        23,
        203,
        129,
        97,
        23,
        106,
        86,
        91,
        146,
        80,
        96,
        32,
        132,
        1,
        53,
        97,
        23,
        219,
        129,
        97,
        23,
        106,
        86,
        91,
        146,
        149,
        146,
        148,
        80,
        80,
        80,
        96,
        64,
        145,
        144,
        145,
        1,
        53,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        23,
        254,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        7,
        8,
        129,
        97,
        23,
        106,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        96,
        128,
        134,
        136,
        3,
        18,
        21,
        97,
        24,
        33,
        87,
        96,
        0,
        128,
        253,
        91,
        133,
        53,
        97,
        24,
        44,
        129,
        97,
        23,
        106,
        86,
        91,
        148,
        80,
        96,
        32,
        134,
        1,
        53,
        97,
        24,
        60,
        129,
        97,
        23,
        106,
        86,
        91,
        147,
        80,
        96,
        64,
        134,
        1,
        53,
        146,
        80,
        96,
        96,
        134,
        1,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        24,
        96,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        136,
        1,
        145,
        80,
        136,
        96,
        31,
        131,
        1,
        18,
        97,
        24,
        116,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        129,
        129,
        17,
        21,
        97,
        24,
        131,
        87,
        96,
        0,
        128,
        253,
        91,
        137,
        96,
        32,
        130,
        133,
        1,
        1,
        17,
        21,
        97,
        24,
        149,
        87,
        96,
        0,
        128,
        253,
        91,
        150,
        153,
        149,
        152,
        80,
        147,
        150,
        80,
        96,
        32,
        1,
        148,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        24,
        187,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        145,
        80,
        96,
        32,
        131,
        1,
        53,
        97,
        24,
        205,
        129,
        97,
        23,
        106,
        86,
        91,
        128,
        145,
        80,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        97,
        24,
        237,
        87,
        96,
        0,
        128,
        253,
        91,
        131,
        53,
        146,
        80,
        96,
        32,
        132,
        1,
        53,
        97,
        24,
        255,
        129,
        97,
        23,
        106,
        86,
        91,
        145,
        80,
        96,
        64,
        132,
        1,
        53,
        97,
        25,
        15,
        129,
        97,
        23,
        106,
        86,
        91,
        128,
        145,
        80,
        80,
        146,
        80,
        146,
        80,
        146,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        96,
        224,
        136,
        138,
        3,
        18,
        21,
        97,
        25,
        53,
        87,
        96,
        0,
        128,
        253,
        91,
        135,
        53,
        97,
        25,
        64,
        129,
        97,
        23,
        106,
        86,
        91,
        150,
        80,
        96,
        32,
        136,
        1,
        53,
        97,
        25,
        80,
        129,
        97,
        23,
        106,
        86,
        91,
        149,
        80,
        96,
        64,
        136,
        1,
        53,
        148,
        80,
        96,
        96,
        136,
        1,
        53,
        147,
        80,
        96,
        128,
        136,
        1,
        53,
        96,
        255,
        129,
        22,
        129,
        20,
        97,
        25,
        116,
        87,
        96,
        0,
        128,
        253,
        91,
        150,
        153,
        149,
        152,
        80,
        147,
        150,
        146,
        149,
        148,
        96,
        160,
        132,
        1,
        53,
        148,
        80,
        96,
        192,
        144,
        147,
        1,
        53,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        25,
        164,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        97,
        25,
        175,
        129,
        97,
        23,
        106,
        86,
        91,
        145,
        80,
        96,
        32,
        131,
        1,
        53,
        97,
        24,
        205,
        129,
        97,
        23,
        106,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        25,
        209,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        96,
        1,
        129,
        129,
        28,
        144,
        130,
        22,
        128,
        97,
        25,
        236,
        87,
        96,
        127,
        130,
        22,
        145,
        80,
        91,
        96,
        32,
        130,
        16,
        129,
        3,
        97,
        26,
        12,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        34,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        145,
        144,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        7,
        118,
        87,
        97,
        7,
        118,
        97,
        26,
        18,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        135,
        129,
        22,
        130,
        82,
        134,
        22,
        96,
        32,
        130,
        1,
        82,
        96,
        64,
        129,
        1,
        133,
        144,
        82,
        96,
        96,
        129,
        1,
        132,
        144,
        82,
        96,
        160,
        96,
        128,
        130,
        1,
        129,
        144,
        82,
        129,
        1,
        130,
        144,
        82,
        96,
        0,
        130,
        132,
        96,
        192,
        132,
        1,
        55,
        96,
        0,
        96,
        192,
        132,
        132,
        1,
        1,
        82,
        96,
        192,
        96,
        31,
        25,
        96,
        31,
        133,
        1,
        22,
        131,
        1,
        1,
        144,
        80,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        128,
        130,
        1,
        128,
        130,
        17,
        21,
        97,
        7,
        118,
        87,
        97,
        7,
        118,
        97,
        26,
        18,
        86,
        91,
        96,
        0,
        128,
        131,
        84,
        129,
        96,
        1,
        130,
        129,
        28,
        145,
        80,
        128,
        131,
        22,
        128,
        97,
        26,
        198,
        87,
        96,
        127,
        131,
        22,
        146,
        80,
        91,
        96,
        32,
        128,
        132,
        16,
        130,
        3,
        97,
        26,
        229,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        134,
        82,
        96,
        34,
        96,
        4,
        82,
        96,
        36,
        134,
        253,
        91,
        129,
        128,
        21,
        97,
        26,
        249,
        87,
        96,
        1,
        129,
        20,
        97,
        27,
        14,
        87,
        97,
        27,
        59,
        86,
        91,
        96,
        255,
        25,
        134,
        22,
        137,
        82,
        132,
        21,
        21,
        133,
        2,
        137,
        1,
        150,
        80,
        97,
        27,
        59,
        86,
        91,
        96,
        0,
        138,
        129,
        82,
        96,
        32,
        144,
        32,
        96,
        0,
        91,
        134,
        129,
        16,
        21,
        97,
        27,
        51,
        87,
        129,
        84,
        139,
        130,
        1,
        82,
        144,
        133,
        1,
        144,
        131,
        1,
        97,
        27,
        26,
        86,
        91,
        80,
        80,
        132,
        137,
        1,
        150,
        80,
        91,
        80,
        148,
        152,
        151,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        254,
        221,
        242,
        82,
        173,
        27,
        226,
        200,
        155,
        105,
        194,
        176,
        104,
        252,
        55,
        141,
        170,
        149,
        43,
        167,
        241,
        99,
        196,
        161,
        22,
        40,
        245,
        90,
        77,
        245,
        35,
        179,
        239,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        123,
        214,
        235,
        222,
        60,
        154,
        194,
        105,
        99,
        183,
        133,
        114,
        127,
        0,
        80,
        56,
        195,
        3,
        44,
        32,
        19,
        33,
        110,
        212,
        12,
        76,
        77,
        130,
        4,
        160,
        50,
        66,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        20,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static UNSTOPPABLEVAULT_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        2,
        50,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        141,
        165,
        203,
        91,
        17,
        97,
        1,
        48,
        87,
        128,
        99,
        198,
        230,
        245,
        146,
        17,
        97,
        0,
        184,
        87,
        128,
        99,
        221,
        98,
        237,
        62,
        17,
        97,
        0,
        124,
        87,
        128,
        99,
        221,
        98,
        237,
        62,
        20,
        97,
        5,
        34,
        87,
        128,
        99,
        231,
        75,
        152,
        27,
        20,
        97,
        5,
        77,
        87,
        128,
        99,
        239,
        139,
        48,
        247,
        20,
        97,
        5,
        96,
        87,
        128,
        99,
        239,
        190,
        28,
        28,
        20,
        97,
        5,
        115,
        87,
        128,
        99,
        242,
        253,
        227,
        139,
        20,
        97,
        5,
        154,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        198,
        230,
        245,
        146,
        20,
        97,
        4,
        171,
        87,
        128,
        99,
        206,
        150,
        203,
        119,
        20,
        97,
        4,
        190,
        87,
        128,
        99,
        213,
        5,
        172,
        207,
        20,
        97,
        4,
        209,
        87,
        128,
        99,
        217,
        5,
        119,
        126,
        20,
        97,
        4,
        230,
        87,
        128,
        99,
        217,
        217,
        140,
        228,
        20,
        97,
        5,
        15,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        179,
        215,
        246,
        185,
        17,
        97,
        0,
        255,
        87,
        128,
        99,
        179,
        215,
        246,
        185,
        20,
        97,
        4,
        79,
        87,
        128,
        99,
        180,
        96,
        175,
        148,
        20,
        97,
        4,
        98,
        87,
        128,
        99,
        186,
        8,
        118,
        82,
        20,
        97,
        4,
        117,
        87,
        128,
        99,
        193,
        162,
        135,
        226,
        20,
        97,
        4,
        136,
        87,
        128,
        99,
        198,
        61,
        117,
        182,
        20,
        97,
        3,
        76,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        141,
        165,
        203,
        91,
        20,
        97,
        4,
        14,
        87,
        128,
        99,
        148,
        191,
        128,
        77,
        20,
        97,
        4,
        33,
        87,
        128,
        99,
        149,
        216,
        155,
        65,
        20,
        97,
        4,
        52,
        87,
        128,
        99,
        169,
        5,
        156,
        187,
        20,
        97,
        4,
        60,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        56,
        213,
        46,
        15,
        17,
        97,
        1,
        190,
        87,
        128,
        99,
        92,
        255,
        233,
        222,
        17,
        97,
        1,
        130,
        87,
        128,
        99,
        92,
        255,
        233,
        222,
        20,
        97,
        3,
        149,
        87,
        128,
        99,
        97,
        50,
        85,
        171,
        20,
        97,
        3,
        168,
        87,
        128,
        99,
        110,
        85,
        63,
        101,
        20,
        97,
        3,
        187,
        87,
        128,
        99,
        112,
        160,
        130,
        49,
        20,
        97,
        3,
        206,
        87,
        128,
        99,
        126,
        206,
        190,
        0,
        20,
        97,
        3,
        238,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        56,
        213,
        46,
        15,
        20,
        97,
        3,
        13,
        87,
        128,
        99,
        64,
        45,
        38,
        125,
        20,
        97,
        3,
        76,
        87,
        128,
        99,
        70,
        144,
        72,
        64,
        20,
        97,
        3,
        97,
        87,
        128,
        99,
        76,
        218,
        213,
        6,
        20,
        97,
        3,
        116,
        87,
        128,
        99,
        90,
        251,
        196,
        168,
        20,
        97,
        3,
        135,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        10,
        40,
        164,
        119,
        17,
        97,
        2,
        5,
        87,
        128,
        99,
        10,
        40,
        164,
        119,
        20,
        97,
        2,
        157,
        87,
        128,
        99,
        24,
        22,
        13,
        221,
        20,
        97,
        2,
        176,
        87,
        128,
        99,
        35,
        184,
        114,
        221,
        20,
        97,
        2,
        185,
        87,
        128,
        99,
        49,
        60,
        229,
        103,
        20,
        97,
        2,
        204,
        87,
        128,
        99,
        54,
        68,
        229,
        21,
        20,
        97,
        3,
        5,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        1,
        225,
        209,
        20,
        20,
        97,
        2,
        55,
        87,
        128,
        99,
        6,
        253,
        222,
        3,
        20,
        97,
        2,
        82,
        87,
        128,
        99,
        7,
        162,
        209,
        58,
        20,
        97,
        2,
        103,
        87,
        128,
        99,
        9,
        94,
        167,
        179,
        20,
        97,
        2,
        122,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        2,
        63,
        97,
        5,
        173,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        2,
        90,
        97,
        6,
        84,
        86,
        91,
        96,
        64,
        81,
        97,
        2,
        73,
        145,
        144,
        97,
        23,
        3,
        86,
        91,
        97,
        2,
        63,
        97,
        2,
        117,
        54,
        96,
        4,
        97,
        23,
        81,
        86,
        91,
        97,
        6,
        226,
        86,
        91,
        97,
        2,
        141,
        97,
        2,
        136,
        54,
        96,
        4,
        97,
        23,
        127,
        86,
        91,
        97,
        7,
        15,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        73,
        86,
        91,
        97,
        2,
        63,
        97,
        2,
        171,
        54,
        96,
        4,
        97,
        23,
        81,
        86,
        91,
        97,
        7,
        124,
        86,
        91,
        97,
        2,
        63,
        96,
        4,
        84,
        129,
        86,
        91,
        97,
        2,
        141,
        97,
        2,
        199,
        54,
        96,
        4,
        97,
        23,
        171,
        86,
        91,
        97,
        7,
        156,
        86,
        91,
        97,
        2,
        243,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        64,
        81,
        96,
        255,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        73,
        86,
        91,
        97,
        2,
        63,
        97,
        8,
        124,
        86,
        91,
        97,
        3,
        52,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        73,
        86,
        91,
        97,
        2,
        63,
        97,
        3,
        90,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        80,
        96,
        0,
        25,
        144,
        86,
        91,
        96,
        8,
        84,
        97,
        3,
        52,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        2,
        63,
        97,
        3,
        130,
        54,
        96,
        4,
        97,
        23,
        81,
        86,
        91,
        97,
        8,
        210,
        86,
        91,
        97,
        2,
        63,
        102,
        177,
        162,
        188,
        46,
        197,
        0,
        0,
        129,
        86,
        91,
        97,
        2,
        141,
        97,
        3,
        163,
        54,
        96,
        4,
        97,
        24,
        9,
        86,
        91,
        97,
        8,
        221,
        86,
        91,
        97,
        2,
        63,
        97,
        3,
        182,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        97,
        10,
        212,
        86,
        91,
        97,
        2,
        63,
        97,
        3,
        201,
        54,
        96,
        4,
        97,
        24,
        168,
        86,
        91,
        97,
        11,
        31,
        86,
        91,
        97,
        2,
        63,
        97,
        3,
        220,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        96,
        5,
        96,
        32,
        82,
        96,
        0,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        86,
        91,
        97,
        2,
        63,
        97,
        3,
        252,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        96,
        7,
        96,
        32,
        82,
        96,
        0,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        86,
        91,
        96,
        1,
        84,
        97,
        3,
        52,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        2,
        63,
        97,
        4,
        47,
        54,
        96,
        4,
        97,
        24,
        168,
        86,
        91,
        97,
        11,
        249,
        86,
        91,
        97,
        2,
        90,
        97,
        12,
        149,
        86,
        91,
        97,
        2,
        141,
        97,
        4,
        74,
        54,
        96,
        4,
        97,
        23,
        127,
        86,
        91,
        97,
        12,
        162,
        86,
        91,
        97,
        2,
        63,
        97,
        4,
        93,
        54,
        96,
        4,
        97,
        23,
        81,
        86,
        91,
        97,
        13,
        8,
        86,
        91,
        97,
        2,
        63,
        97,
        4,
        112,
        54,
        96,
        4,
        97,
        24,
        216,
        86,
        91,
        97,
        13,
        39,
        86,
        91,
        97,
        2,
        63,
        97,
        4,
        131,
        54,
        96,
        4,
        97,
        24,
        216,
        86,
        91,
        97,
        14,
        53,
        86,
        91,
        97,
        4,
        146,
        98,
        39,
        141,
        0,
        129,
        86,
        91,
        96,
        64,
        81,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        2,
        73,
        86,
        91,
        97,
        2,
        63,
        97,
        4,
        185,
        54,
        96,
        4,
        97,
        23,
        81,
        86,
        91,
        97,
        15,
        129,
        86,
        91,
        97,
        2,
        63,
        97,
        4,
        204,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        97,
        15,
        161,
        86,
        91,
        97,
        4,
        228,
        97,
        4,
        223,
        54,
        96,
        4,
        97,
        25,
        26,
        86,
        91,
        97,
        15,
        195,
        86,
        91,
        0,
        91,
        97,
        2,
        63,
        97,
        4,
        244,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        144,
        86,
        91,
        97,
        2,
        63,
        97,
        5,
        29,
        54,
        96,
        4,
        97,
        23,
        127,
        86,
        91,
        97,
        18,
        7,
        86,
        91,
        97,
        2,
        63,
        97,
        5,
        48,
        54,
        96,
        4,
        97,
        25,
        145,
        86,
        91,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        0,
        146,
        131,
        82,
        96,
        64,
        128,
        132,
        32,
        144,
        145,
        82,
        144,
        130,
        82,
        144,
        32,
        84,
        129,
        86,
        91,
        97,
        4,
        228,
        97,
        5,
        91,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        97,
        18,
        192,
        86,
        91,
        97,
        2,
        63,
        97,
        5,
        110,
        54,
        96,
        4,
        97,
        23,
        81,
        86,
        91,
        97,
        19,
        100,
        86,
        91,
        97,
        4,
        146,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        86,
        91,
        97,
        4,
        228,
        97,
        5,
        168,
        54,
        96,
        4,
        97,
        23,
        236,
        86,
        91,
        97,
        19,
        111,
        86,
        91,
        96,
        0,
        96,
        2,
        96,
        0,
        84,
        3,
        97,
        5,
        199,
        87,
        99,
        237,
        59,
        166,
        166,
        96,
        0,
        82,
        96,
        4,
        96,
        28,
        253,
        91,
        96,
        64,
        81,
        99,
        112,
        160,
        130,
        49,
        96,
        224,
        27,
        129,
        82,
        48,
        96,
        4,
        130,
        1,
        82,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        144,
        99,
        112,
        160,
        130,
        49,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        6,
        43,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        6,
        79,
        145,
        144,
        97,
        25,
        191,
        86,
        91,
        144,
        80,
        144,
        86,
        91,
        96,
        2,
        128,
        84,
        97,
        6,
        97,
        144,
        97,
        25,
        216,
        86,
        91,
        128,
        96,
        31,
        1,
        96,
        32,
        128,
        145,
        4,
        2,
        96,
        32,
        1,
        96,
        64,
        81,
        144,
        129,
        1,
        96,
        64,
        82,
        128,
        146,
        145,
        144,
        129,
        129,
        82,
        96,
        32,
        1,
        130,
        128,
        84,
        97,
        6,
        141,
        144,
        97,
        25,
        216,
        86,
        91,
        128,
        21,
        97,
        6,
        218,
        87,
        128,
        96,
        31,
        16,
        97,
        6,
        175,
        87,
        97,
        1,
        0,
        128,
        131,
        84,
        4,
        2,
        131,
        82,
        145,
        96,
        32,
        1,
        145,
        97,
        6,
        218,
        86,
        91,
        130,
        1,
        145,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        144,
        91,
        129,
        84,
        129,
        82,
        144,
        96,
        1,
        1,
        144,
        96,
        32,
        1,
        128,
        131,
        17,
        97,
        6,
        189,
        87,
        130,
        144,
        3,
        96,
        31,
        22,
        130,
        1,
        145,
        91,
        80,
        80,
        80,
        80,
        80,
        129,
        86,
        91,
        96,
        4,
        84,
        96,
        0,
        144,
        128,
        21,
        97,
        7,
        6,
        87,
        97,
        7,
        1,
        97,
        6,
        249,
        97,
        5,
        173,
        86,
        91,
        132,
        144,
        131,
        97,
        20,
        4,
        86,
        91,
        97,
        7,
        8,
        86,
        91,
        130,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        51,
        96,
        0,
        129,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        135,
        22,
        128,
        133,
        82,
        146,
        82,
        128,
        131,
        32,
        133,
        144,
        85,
        81,
        145,
        146,
        144,
        145,
        127,
        140,
        91,
        225,
        229,
        235,
        236,
        125,
        91,
        209,
        79,
        113,
        66,
        125,
        30,
        132,
        243,
        221,
        3,
        20,
        192,
        247,
        178,
        41,
        30,
        91,
        32,
        10,
        200,
        199,
        195,
        185,
        37,
        144,
        97,
        7,
        106,
        144,
        134,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        80,
        96,
        1,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        4,
        84,
        96,
        0,
        144,
        128,
        21,
        97,
        7,
        6,
        87,
        97,
        7,
        1,
        129,
        97,
        7,
        148,
        97,
        5,
        173,
        86,
        91,
        133,
        145,
        144,
        97,
        20,
        34,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        51,
        132,
        82,
        144,
        145,
        82,
        129,
        32,
        84,
        96,
        0,
        25,
        129,
        20,
        97,
        7,
        248,
        87,
        97,
        7,
        211,
        131,
        130,
        97,
        26,
        40,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        134,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        51,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        85,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        133,
        146,
        144,
        97,
        8,
        32,
        144,
        132,
        144,
        97,
        26,
        40,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        133,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        144,
        129,
        144,
        32,
        128,
        84,
        135,
        1,
        144,
        85,
        81,
        144,
        145,
        135,
        22,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        74,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        97,
        8,
        105,
        144,
        135,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        80,
        96,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        70,
        20,
        97,
        8,
        173,
        87,
        97,
        6,
        79,
        97,
        20,
        72,
        86,
        91,
        80,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        144,
        86,
        91,
        96,
        0,
        97,
        7,
        118,
        130,
        97,
        6,
        226,
        86,
        91,
        96,
        0,
        131,
        96,
        0,
        3,
        97,
        9,
        8,
        87,
        96,
        64,
        81,
        99,
        55,
        40,
        184,
        61,
        96,
        224,
        27,
        129,
        82,
        96,
        0,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        132,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        97,
        9,
        90,
        87,
        96,
        64,
        81,
        99,
        17,
        49,
        250,
        113,
        96,
        225,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        97,
        9,
        100,
        97,
        5,
        173,
        86,
        91,
        144,
        80,
        128,
        97,
        9,
        114,
        96,
        4,
        84,
        97,
        15,
        129,
        86,
        91,
        20,
        97,
        9,
        144,
        87,
        96,
        64,
        81,
        99,
        197,
        46,
        62,
        255,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        97,
        9,
        156,
        135,
        135,
        97,
        18,
        7,
        86,
        91,
        144,
        80,
        97,
        9,
        178,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        136,
        22,
        137,
        136,
        97,
        20,
        226,
        86,
        91,
        96,
        64,
        81,
        99,
        35,
        227,
        12,
        139,
        96,
        224,
        27,
        129,
        82,
        127,
        9,
        71,
        205,
        57,
        104,
        56,
        151,
        150,
        76,
        70,
        129,
        242,
        169,
        172,
        228,
        121,
        64,
        15,
        11,
        212,
        103,
        17,
        125,
        10,
        224,
        46,
        153,
        227,
        3,
        1,
        42,
        222,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        138,
        22,
        144,
        99,
        35,
        227,
        12,
        139,
        144,
        97,
        10,
        42,
        144,
        51,
        144,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        144,
        140,
        144,
        136,
        144,
        141,
        144,
        141,
        144,
        96,
        4,
        1,
        97,
        26,
        59,
        86,
        91,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        90,
        241,
        21,
        128,
        21,
        97,
        10,
        73,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        10,
        109,
        145,
        144,
        97,
        25,
        191,
        86,
        91,
        20,
        97,
        10,
        139,
        87,
        96,
        64,
        81,
        99,
        4,
        67,
        236,
        43,
        96,
        227,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        10,
        172,
        136,
        48,
        97,
        10,
        154,
        132,
        138,
        97,
        26,
        151,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        139,
        22,
        146,
        145,
        144,
        97,
        21,
        96,
        86,
        91,
        96,
        8,
        84,
        97,
        10,
        198,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        137,
        129,
        22,
        145,
        22,
        131,
        97,
        20,
        226,
        86,
        91,
        80,
        96,
        1,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        97,
        11,
        23,
        87,
        80,
        96,
        0,
        145,
        144,
        80,
        86,
        91,
        97,
        7,
        118,
        97,
        5,
        173,
        86,
        91,
        96,
        0,
        97,
        11,
        42,
        131,
        97,
        19,
        100,
        86,
        91,
        144,
        80,
        128,
        96,
        0,
        3,
        97,
        11,
        106,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        11,
        96,
        36,
        130,
        1,
        82,
        106,
        90,
        69,
        82,
        79,
        95,
        83,
        72,
        65,
        82,
        69,
        83,
        96,
        168,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        97,
        11,
        159,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        51,
        48,
        134,
        97,
        21,
        96,
        86,
        91,
        97,
        11,
        169,
        130,
        130,
        97,
        21,
        234,
        86,
        91,
        96,
        64,
        128,
        81,
        132,
        129,
        82,
        96,
        32,
        129,
        1,
        131,
        144,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        145,
        51,
        145,
        127,
        220,
        188,
        28,
        5,
        36,
        15,
        49,
        255,
        58,
        208,
        103,
        239,
        30,
        227,
        92,
        228,
        153,
        119,
        98,
        117,
        46,
        58,
        9,
        82,
        132,
        117,
        69,
        68,
        244,
        199,
        9,
        215,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        97,
        7,
        118,
        131,
        130,
        97,
        22,
        68,
        86,
        91,
        96,
        0,
        97,
        12,
        4,
        131,
        97,
        13,
        8,
        86,
        91,
        144,
        80,
        97,
        12,
        59,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        51,
        48,
        132,
        97,
        21,
        96,
        86,
        91,
        97,
        12,
        69,
        130,
        132,
        97,
        21,
        234,
        86,
        91,
        96,
        64,
        128,
        81,
        130,
        129,
        82,
        96,
        32,
        129,
        1,
        133,
        144,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        145,
        51,
        145,
        127,
        220,
        188,
        28,
        5,
        36,
        15,
        49,
        255,
        58,
        208,
        103,
        239,
        30,
        227,
        92,
        228,
        153,
        119,
        98,
        117,
        46,
        58,
        9,
        82,
        132,
        117,
        69,
        68,
        244,
        199,
        9,
        215,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        97,
        7,
        118,
        129,
        132,
        97,
        22,
        68,
        86,
        91,
        96,
        3,
        128,
        84,
        97,
        6,
        97,
        144,
        97,
        25,
        216,
        86,
        91,
        51,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        131,
        145,
        144,
        131,
        144,
        97,
        12,
        195,
        144,
        132,
        144,
        97,
        26,
        40,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        144,
        129,
        144,
        32,
        128,
        84,
        133,
        1,
        144,
        85,
        81,
        51,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        74,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        97,
        7,
        106,
        144,
        134,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        4,
        84,
        96,
        0,
        144,
        128,
        21,
        97,
        7,
        6,
        87,
        97,
        7,
        1,
        97,
        13,
        31,
        97,
        5,
        173,
        86,
        91,
        132,
        144,
        131,
        97,
        20,
        34,
        86,
        91,
        96,
        0,
        97,
        13,
        50,
        132,
        97,
        7,
        124,
        86,
        91,
        144,
        80,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        20,
        97,
        13,
        162,
        87,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        51,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        84,
        96,
        0,
        25,
        129,
        20,
        97,
        13,
        160,
        87,
        97,
        13,
        123,
        130,
        130,
        97,
        26,
        40,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        51,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        85,
        91,
        80,
        91,
        97,
        13,
        172,
        132,
        130,
        97,
        22,
        68,
        86,
        91,
        97,
        13,
        182,
        130,
        130,
        97,
        22,
        140,
        86,
        91,
        96,
        64,
        128,
        81,
        133,
        129,
        82,
        96,
        32,
        129,
        1,
        131,
        144,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        133,
        22,
        146,
        144,
        134,
        22,
        145,
        51,
        145,
        127,
        251,
        222,
        121,
        125,
        32,
        28,
        104,
        27,
        145,
        5,
        101,
        41,
        17,
        158,
        11,
        2,
        64,
        124,
        123,
        185,
        106,
        74,
        44,
        117,
        192,
        31,
        201,
        102,
        114,
        50,
        200,
        219,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        97,
        7,
        8,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        132,
        134,
        97,
        20,
        226,
        86,
        91,
        96,
        0,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        20,
        97,
        14,
        165,
        87,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        51,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        84,
        96,
        0,
        25,
        129,
        20,
        97,
        14,
        163,
        87,
        97,
        14,
        126,
        133,
        130,
        97,
        26,
        40,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        51,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        85,
        91,
        80,
        91,
        97,
        14,
        174,
        132,
        97,
        8,
        210,
        86,
        91,
        144,
        80,
        128,
        96,
        0,
        3,
        97,
        14,
        238,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        11,
        96,
        36,
        130,
        1,
        82,
        106,
        90,
        69,
        82,
        79,
        95,
        65,
        83,
        83,
        69,
        84,
        83,
        96,
        168,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        97,
        14,
        248,
        129,
        133,
        97,
        22,
        68,
        86,
        91,
        97,
        15,
        2,
        130,
        133,
        97,
        22,
        140,
        86,
        91,
        96,
        64,
        128,
        81,
        130,
        129,
        82,
        96,
        32,
        129,
        1,
        134,
        144,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        133,
        22,
        146,
        144,
        134,
        22,
        145,
        51,
        145,
        127,
        251,
        222,
        121,
        125,
        32,
        28,
        104,
        27,
        145,
        5,
        101,
        41,
        17,
        158,
        11,
        2,
        64,
        124,
        123,
        185,
        106,
        74,
        44,
        117,
        192,
        31,
        201,
        102,
        114,
        50,
        200,
        219,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        97,
        7,
        8,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        22,
        132,
        131,
        97,
        20,
        226,
        86,
        91,
        96,
        4,
        84,
        96,
        0,
        144,
        128,
        21,
        97,
        7,
        6,
        87,
        97,
        7,
        1,
        129,
        97,
        15,
        153,
        97,
        5,
        173,
        86,
        91,
        133,
        145,
        144,
        97,
        20,
        4,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        97,
        7,
        118,
        144,
        97,
        6,
        226,
        86,
        91,
        66,
        132,
        16,
        21,
        97,
        16,
        19,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        23,
        96,
        36,
        130,
        1,
        82,
        127,
        80,
        69,
        82,
        77,
        73,
        84,
        95,
        68,
        69,
        65,
        68,
        76,
        73,
        78,
        69,
        95,
        69,
        88,
        80,
        73,
        82,
        69,
        68,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        96,
        0,
        96,
        1,
        97,
        16,
        31,
        97,
        8,
        124,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        138,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        7,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        145,
        130,
        144,
        32,
        128,
        84,
        96,
        1,
        129,
        1,
        144,
        145,
        85,
        130,
        81,
        127,
        110,
        113,
        237,
        174,
        18,
        177,
        185,
        127,
        77,
        31,
        96,
        55,
        15,
        239,
        16,
        16,
        95,
        162,
        250,
        174,
        1,
        38,
        17,
        74,
        22,
        156,
        100,
        132,
        93,
        97,
        38,
        201,
        129,
        132,
        1,
        82,
        128,
        132,
        1,
        148,
        144,
        148,
        82,
        147,
        141,
        22,
        96,
        96,
        132,
        1,
        82,
        96,
        128,
        131,
        1,
        140,
        144,
        82,
        96,
        160,
        131,
        1,
        147,
        144,
        147,
        82,
        96,
        192,
        128,
        131,
        1,
        139,
        144,
        82,
        129,
        81,
        128,
        132,
        3,
        144,
        145,
        1,
        129,
        82,
        96,
        224,
        131,
        1,
        144,
        145,
        82,
        128,
        81,
        146,
        1,
        145,
        144,
        145,
        32,
        97,
        25,
        1,
        96,
        240,
        27,
        97,
        1,
        0,
        131,
        1,
        82,
        97,
        1,
        2,
        130,
        1,
        146,
        144,
        146,
        82,
        97,
        1,
        34,
        129,
        1,
        145,
        144,
        145,
        82,
        97,
        1,
        66,
        1,
        96,
        64,
        128,
        81,
        96,
        31,
        25,
        129,
        132,
        3,
        1,
        129,
        82,
        130,
        130,
        82,
        128,
        81,
        96,
        32,
        145,
        130,
        1,
        32,
        96,
        0,
        132,
        82,
        144,
        131,
        1,
        128,
        131,
        82,
        82,
        96,
        255,
        135,
        22,
        144,
        130,
        1,
        82,
        96,
        96,
        129,
        1,
        133,
        144,
        82,
        96,
        128,
        129,
        1,
        132,
        144,
        82,
        96,
        160,
        1,
        96,
        32,
        96,
        64,
        81,
        96,
        32,
        129,
        3,
        144,
        128,
        132,
        3,
        144,
        133,
        90,
        250,
        21,
        128,
        21,
        97,
        17,
        43,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        96,
        64,
        81,
        96,
        31,
        25,
        1,
        81,
        145,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        21,
        128,
        21,
        144,
        97,
        17,
        97,
        87,
        80,
        135,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        91,
        97,
        17,
        158,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        14,
        96,
        36,
        130,
        1,
        82,
        109,
        36,
        167,
        43,
        32,
        166,
        36,
        162,
        47,
        169,
        164,
        163,
        167,
        34,
        169,
        96,
        145,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        6,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        138,
        133,
        22,
        128,
        133,
        82,
        144,
        131,
        82,
        146,
        129,
        144,
        32,
        137,
        144,
        85,
        81,
        136,
        129,
        82,
        145,
        146,
        138,
        22,
        145,
        127,
        140,
        91,
        225,
        229,
        235,
        236,
        125,
        91,
        209,
        79,
        113,
        66,
        125,
        30,
        132,
        243,
        221,
        3,
        20,
        192,
        247,
        178,
        41,
        30,
        91,
        32,
        10,
        200,
        199,
        195,
        185,
        37,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        20,
        97,
        18,
        91,
        87,
        96,
        64,
        81,
        99,
        17,
        49,
        250,
        113,
        96,
        225,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        127,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        66,
        16,
        128,
        21,
        97,
        18,
        155,
        87,
        80,
        97,
        18,
        152,
        131,
        97,
        10,
        212,
        86,
        91,
        130,
        16,
        91,
        21,
        97,
        18,
        168,
        87,
        80,
        96,
        0,
        97,
        7,
        118,
        86,
        91,
        97,
        18,
        185,
        130,
        102,
        177,
        162,
        188,
        46,
        197,
        0,
        0,
        97,
        22,
        238,
        86,
        91,
        144,
        80,
        97,
        7,
        118,
        86,
        91,
        96,
        1,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        19,
        9,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        12,
        96,
        36,
        130,
        1,
        82,
        107,
        21,
        83,
        144,
        85,
        85,
        18,
        19,
        212,
        146,
        86,
        145,
        81,
        96,
        162,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        48,
        20,
        97,
        19,
        97,
        87,
        96,
        8,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        127,
        122,
        123,
        90,
        10,
        19,
        47,
        158,
        5,
        129,
        235,
        133,
        39,
        246,
        110,
        174,
        158,
        232,
        156,
        42,
        62,
        121,
        212,
        172,
        126,
        65,
        161,
        241,
        244,
        212,
        138,
        127,
        194,
        144,
        96,
        0,
        144,
        162,
        91,
        80,
        86,
        91,
        96,
        0,
        97,
        7,
        118,
        130,
        97,
        15,
        129,
        86,
        91,
        96,
        1,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        19,
        184,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        12,
        96,
        36,
        130,
        1,
        82,
        107,
        21,
        83,
        144,
        85,
        85,
        18,
        19,
        212,
        146,
        86,
        145,
        81,
        96,
        162,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        96,
        1,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        51,
        144,
        127,
        139,
        224,
        7,
        156,
        83,
        22,
        89,
        20,
        19,
        68,
        205,
        31,
        208,
        164,
        242,
        132,
        25,
        73,
        127,
        151,
        34,
        163,
        218,
        175,
        227,
        180,
        24,
        111,
        107,
        100,
        87,
        224,
        144,
        96,
        0,
        144,
        163,
        80,
        86,
        91,
        96,
        0,
        130,
        96,
        0,
        25,
        4,
        132,
        17,
        131,
        2,
        21,
        130,
        2,
        97,
        20,
        27,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        145,
        2,
        4,
        144,
        86,
        91,
        96,
        0,
        130,
        96,
        0,
        25,
        4,
        132,
        17,
        131,
        2,
        21,
        130,
        2,
        97,
        20,
        57,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        145,
        2,
        129,
        129,
        6,
        21,
        21,
        145,
        144,
        4,
        1,
        144,
        86,
        91,
        96,
        0,
        127,
        139,
        115,
        195,
        198,
        155,
        184,
        254,
        61,
        81,
        46,
        204,
        76,
        247,
        89,
        204,
        121,
        35,
        159,
        123,
        23,
        155,
        15,
        250,
        202,
        169,
        167,
        93,
        82,
        43,
        57,
        64,
        15,
        96,
        2,
        96,
        64,
        81,
        97,
        20,
        122,
        145,
        144,
        97,
        26,
        170,
        86,
        91,
        96,
        64,
        128,
        81,
        145,
        130,
        144,
        3,
        130,
        32,
        96,
        32,
        131,
        1,
        147,
        144,
        147,
        82,
        129,
        1,
        145,
        144,
        145,
        82,
        127,
        200,
        158,
        253,
        170,
        84,
        192,
        242,
        12,
        122,
        223,
        97,
        40,
        130,
        223,
        9,
        80,
        245,
        169,
        81,
        99,
        126,
        3,
        7,
        205,
        203,
        76,
        103,
        47,
        41,
        139,
        139,
        198,
        96,
        96,
        130,
        1,
        82,
        70,
        96,
        128,
        130,
        1,
        82,
        48,
        96,
        160,
        130,
        1,
        82,
        96,
        192,
        1,
        96,
        64,
        81,
        96,
        32,
        129,
        131,
        3,
        3,
        129,
        82,
        144,
        96,
        64,
        82,
        128,
        81,
        144,
        96,
        32,
        1,
        32,
        144,
        80,
        144,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        99,
        169,
        5,
        156,
        187,
        96,
        224,
        27,
        129,
        82,
        131,
        96,
        4,
        130,
        1,
        82,
        130,
        96,
        36,
        130,
        1,
        82,
        96,
        32,
        96,
        0,
        96,
        68,
        131,
        96,
        0,
        137,
        90,
        241,
        61,
        21,
        96,
        31,
        61,
        17,
        96,
        1,
        96,
        0,
        81,
        20,
        22,
        23,
        22,
        145,
        80,
        80,
        128,
        97,
        21,
        90,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        15,
        96,
        36,
        130,
        1,
        82,
        110,
        21,
        20,
        144,
        83,
        148,
        209,
        145,
        84,
        151,
        209,
        144,
        82,
        83,
        17,
        81,
        96,
        138,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        99,
        35,
        184,
        114,
        221,
        96,
        224,
        27,
        129,
        82,
        132,
        96,
        4,
        130,
        1,
        82,
        131,
        96,
        36,
        130,
        1,
        82,
        130,
        96,
        68,
        130,
        1,
        82,
        96,
        32,
        96,
        0,
        96,
        100,
        131,
        96,
        0,
        138,
        90,
        241,
        61,
        21,
        96,
        31,
        61,
        17,
        96,
        1,
        96,
        0,
        81,
        20,
        22,
        23,
        22,
        145,
        80,
        80,
        128,
        97,
        21,
        227,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        20,
        96,
        36,
        130,
        1,
        82,
        115,
        21,
        20,
        144,
        83,
        148,
        209,
        145,
        84,
        151,
        209,
        148,
        147,
        211,
        87,
        209,
        144,
        82,
        83,
        17,
        81,
        96,
        98,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        128,
        96,
        4,
        96,
        0,
        130,
        130,
        84,
        97,
        21,
        252,
        145,
        144,
        97,
        26,
        151,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        5,
        96,
        32,
        144,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        128,
        84,
        134,
        1,
        144,
        85,
        81,
        132,
        129,
        82,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        74,
        131,
        57,
        129,
        81,
        145,
        82,
        145,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        80,
        80,
        86,
        91,
        96,
        0,
        84,
        96,
        1,
        20,
        97,
        22,
        131,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        10,
        96,
        36,
        130,
        1,
        82,
        105,
        82,
        69,
        69,
        78,
        84,
        82,
        65,
        78,
        67,
        89,
        96,
        176,
        27,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        8,
        255,
        86,
        91,
        80,
        80,
        96,
        1,
        96,
        0,
        85,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        5,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        131,
        146,
        144,
        97,
        22,
        180,
        144,
        132,
        144,
        97,
        26,
        40,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        4,
        128,
        84,
        130,
        144,
        3,
        144,
        85,
        96,
        64,
        81,
        129,
        129,
        82,
        96,
        0,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        74,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        96,
        32,
        1,
        97,
        22,
        56,
        86,
        91,
        96,
        0,
        97,
        7,
        8,
        131,
        131,
        103,
        13,
        224,
        182,
        179,
        167,
        100,
        0,
        0,
        97,
        20,
        34,
        86,
        91,
        96,
        0,
        96,
        32,
        128,
        131,
        82,
        131,
        81,
        128,
        130,
        133,
        1,
        82,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        23,
        48,
        87,
        133,
        129,
        1,
        131,
        1,
        81,
        133,
        130,
        1,
        96,
        64,
        1,
        82,
        130,
        1,
        97,
        23,
        20,
        86,
        91,
        80,
        96,
        0,
        96,
        64,
        130,
        134,
        1,
        1,
        82,
        96,
        64,
        96,
        31,
        25,
        96,
        31,
        131,
        1,
        22,
        133,
        1,
        1,
        146,
        80,
        80,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        23,
        99,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        19,
        97,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        23,
        146,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        97,
        23,
        157,
        129,
        97,
        23,
        106,
        86,
        91,
        148,
        96,
        32,
        147,
        144,
        147,
        1,
        53,
        147,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        97,
        23,
        192,
        87,
        96,
        0,
        128,
        253,
        91,
        131,
        53,
        97,
        23,
        203,
        129,
        97,
        23,
        106,
        86,
        91,
        146,
        80,
        96,
        32,
        132,
        1,
        53,
        97,
        23,
        219,
        129,
        97,
        23,
        106,
        86,
        91,
        146,
        149,
        146,
        148,
        80,
        80,
        80,
        96,
        64,
        145,
        144,
        145,
        1,
        53,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        23,
        254,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        7,
        8,
        129,
        97,
        23,
        106,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        96,
        128,
        134,
        136,
        3,
        18,
        21,
        97,
        24,
        33,
        87,
        96,
        0,
        128,
        253,
        91,
        133,
        53,
        97,
        24,
        44,
        129,
        97,
        23,
        106,
        86,
        91,
        148,
        80,
        96,
        32,
        134,
        1,
        53,
        97,
        24,
        60,
        129,
        97,
        23,
        106,
        86,
        91,
        147,
        80,
        96,
        64,
        134,
        1,
        53,
        146,
        80,
        96,
        96,
        134,
        1,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        24,
        96,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        136,
        1,
        145,
        80,
        136,
        96,
        31,
        131,
        1,
        18,
        97,
        24,
        116,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        129,
        129,
        17,
        21,
        97,
        24,
        131,
        87,
        96,
        0,
        128,
        253,
        91,
        137,
        96,
        32,
        130,
        133,
        1,
        1,
        17,
        21,
        97,
        24,
        149,
        87,
        96,
        0,
        128,
        253,
        91,
        150,
        153,
        149,
        152,
        80,
        147,
        150,
        80,
        96,
        32,
        1,
        148,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        24,
        187,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        145,
        80,
        96,
        32,
        131,
        1,
        53,
        97,
        24,
        205,
        129,
        97,
        23,
        106,
        86,
        91,
        128,
        145,
        80,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        97,
        24,
        237,
        87,
        96,
        0,
        128,
        253,
        91,
        131,
        53,
        146,
        80,
        96,
        32,
        132,
        1,
        53,
        97,
        24,
        255,
        129,
        97,
        23,
        106,
        86,
        91,
        145,
        80,
        96,
        64,
        132,
        1,
        53,
        97,
        25,
        15,
        129,
        97,
        23,
        106,
        86,
        91,
        128,
        145,
        80,
        80,
        146,
        80,
        146,
        80,
        146,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        96,
        224,
        136,
        138,
        3,
        18,
        21,
        97,
        25,
        53,
        87,
        96,
        0,
        128,
        253,
        91,
        135,
        53,
        97,
        25,
        64,
        129,
        97,
        23,
        106,
        86,
        91,
        150,
        80,
        96,
        32,
        136,
        1,
        53,
        97,
        25,
        80,
        129,
        97,
        23,
        106,
        86,
        91,
        149,
        80,
        96,
        64,
        136,
        1,
        53,
        148,
        80,
        96,
        96,
        136,
        1,
        53,
        147,
        80,
        96,
        128,
        136,
        1,
        53,
        96,
        255,
        129,
        22,
        129,
        20,
        97,
        25,
        116,
        87,
        96,
        0,
        128,
        253,
        91,
        150,
        153,
        149,
        152,
        80,
        147,
        150,
        146,
        149,
        148,
        96,
        160,
        132,
        1,
        53,
        148,
        80,
        96,
        192,
        144,
        147,
        1,
        53,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        25,
        164,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        97,
        25,
        175,
        129,
        97,
        23,
        106,
        86,
        91,
        145,
        80,
        96,
        32,
        131,
        1,
        53,
        97,
        24,
        205,
        129,
        97,
        23,
        106,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        25,
        209,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        96,
        1,
        129,
        129,
        28,
        144,
        130,
        22,
        128,
        97,
        25,
        236,
        87,
        96,
        127,
        130,
        22,
        145,
        80,
        91,
        96,
        32,
        130,
        16,
        129,
        3,
        97,
        26,
        12,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        34,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        145,
        144,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        7,
        118,
        87,
        97,
        7,
        118,
        97,
        26,
        18,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        135,
        129,
        22,
        130,
        82,
        134,
        22,
        96,
        32,
        130,
        1,
        82,
        96,
        64,
        129,
        1,
        133,
        144,
        82,
        96,
        96,
        129,
        1,
        132,
        144,
        82,
        96,
        160,
        96,
        128,
        130,
        1,
        129,
        144,
        82,
        129,
        1,
        130,
        144,
        82,
        96,
        0,
        130,
        132,
        96,
        192,
        132,
        1,
        55,
        96,
        0,
        96,
        192,
        132,
        132,
        1,
        1,
        82,
        96,
        192,
        96,
        31,
        25,
        96,
        31,
        133,
        1,
        22,
        131,
        1,
        1,
        144,
        80,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        128,
        130,
        1,
        128,
        130,
        17,
        21,
        97,
        7,
        118,
        87,
        97,
        7,
        118,
        97,
        26,
        18,
        86,
        91,
        96,
        0,
        128,
        131,
        84,
        129,
        96,
        1,
        130,
        129,
        28,
        145,
        80,
        128,
        131,
        22,
        128,
        97,
        26,
        198,
        87,
        96,
        127,
        131,
        22,
        146,
        80,
        91,
        96,
        32,
        128,
        132,
        16,
        130,
        3,
        97,
        26,
        229,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        134,
        82,
        96,
        34,
        96,
        4,
        82,
        96,
        36,
        134,
        253,
        91,
        129,
        128,
        21,
        97,
        26,
        249,
        87,
        96,
        1,
        129,
        20,
        97,
        27,
        14,
        87,
        97,
        27,
        59,
        86,
        91,
        96,
        255,
        25,
        134,
        22,
        137,
        82,
        132,
        21,
        21,
        133,
        2,
        137,
        1,
        150,
        80,
        97,
        27,
        59,
        86,
        91,
        96,
        0,
        138,
        129,
        82,
        96,
        32,
        144,
        32,
        96,
        0,
        91,
        134,
        129,
        16,
        21,
        97,
        27,
        51,
        87,
        129,
        84,
        139,
        130,
        1,
        82,
        144,
        133,
        1,
        144,
        131,
        1,
        97,
        27,
        26,
        86,
        91,
        80,
        80,
        132,
        137,
        1,
        150,
        80,
        91,
        80,
        148,
        152,
        151,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        254,
        221,
        242,
        82,
        173,
        27,
        226,
        200,
        155,
        105,
        194,
        176,
        104,
        252,
        55,
        141,
        170,
        149,
        43,
        167,
        241,
        99,
        196,
        161,
        22,
        40,
        245,
        90,
        77,
        245,
        35,
        179,
        239,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        123,
        214,
        235,
        222,
        60,
        154,
        194,
        105,
        99,
        183,
        133,
        114,
        127,
        0,
        80,
        56,
        195,
        3,
        44,
        32,
        19,
        33,
        110,
        212,
        12,
        76,
        77,
        130,
        4,
        160,
        50,
        66,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        20,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static UNSTOPPABLEVAULT_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct UnstoppableVault<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for UnstoppableVault<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for UnstoppableVault<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for UnstoppableVault<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for UnstoppableVault<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(UnstoppableVault)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> UnstoppableVault<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    UNSTOPPABLEVAULT_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                UNSTOPPABLEVAULT_ABI.clone(),
                UNSTOPPABLEVAULT_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `DOMAIN_SEPARATOR` (0x3644e515) function
        pub fn domain_separator(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([54, 68, 229, 21], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `FEE_FACTOR` (0x5afbc4a8) function
        pub fn fee_factor(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([90, 251, 196, 168], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `GRACE_PERIOD` (0xc1a287e2) function
        pub fn grace_period(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, u64> {
            self.0
                .method_hash([193, 162, 135, 226], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `allowance` (0xdd62ed3e) function
        pub fn allowance(
            &self,
            p0: ::ethers::core::types::Address,
            p1: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([221, 98, 237, 62], (p0, p1))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `approve` (0x095ea7b3) function
        pub fn approve(
            &self,
            spender: ::ethers::core::types::Address,
            amount: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([9, 94, 167, 179], (spender, amount))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `asset` (0x38d52e0f) function
        pub fn asset(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([56, 213, 46, 15], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `balanceOf` (0x70a08231) function
        pub fn balance_of(
            &self,
            p0: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([112, 160, 130, 49], p0)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `convertToAssets` (0x07a2d13a) function
        pub fn convert_to_assets(
            &self,
            shares: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([7, 162, 209, 58], shares)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `convertToShares` (0xc6e6f592) function
        pub fn convert_to_shares(
            &self,
            assets: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([198, 230, 245, 146], assets)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `decimals` (0x313ce567) function
        pub fn decimals(&self) -> ::ethers::contract::builders::ContractCall<M, u8> {
            self.0
                .method_hash([49, 60, 229, 103], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `deposit` (0x6e553f65) function
        pub fn deposit(
            &self,
            assets: ::ethers::core::types::U256,
            receiver: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([110, 85, 63, 101], (assets, receiver))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `end` (0xefbe1c1c) function
        pub fn end(&self) -> ::ethers::contract::builders::ContractCall<M, u64> {
            self.0
                .method_hash([239, 190, 28, 28], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `feeRecipient` (0x46904840) function
        pub fn fee_recipient(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([70, 144, 72, 64], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `flashFee` (0xd9d98ce4) function
        pub fn flash_fee(
            &self,
            token: ::ethers::core::types::Address,
            amount: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([217, 217, 140, 228], (token, amount))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `flashLoan` (0x5cffe9de) function
        pub fn flash_loan(
            &self,
            receiver: ::ethers::core::types::Address,
            token: ::ethers::core::types::Address,
            amount: ::ethers::core::types::U256,
            data: ::ethers::core::types::Bytes,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([92, 255, 233, 222], (receiver, token, amount, data))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `maxDeposit` (0x402d267d) function
        pub fn max_deposit(
            &self,
            p0: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([64, 45, 38, 125], p0)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `maxFlashLoan` (0x613255ab) function
        pub fn max_flash_loan(
            &self,
            token: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([97, 50, 85, 171], token)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `maxMint` (0xc63d75b6) function
        pub fn max_mint(
            &self,
            p0: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([198, 61, 117, 182], p0)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `maxRedeem` (0xd905777e) function
        pub fn max_redeem(
            &self,
            owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([217, 5, 119, 126], owner)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `maxWithdraw` (0xce96cb77) function
        pub fn max_withdraw(
            &self,
            owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([206, 150, 203, 119], owner)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `mint` (0x94bf804d) function
        pub fn mint(
            &self,
            shares: ::ethers::core::types::U256,
            receiver: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([148, 191, 128, 77], (shares, receiver))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `name` (0x06fdde03) function
        pub fn name(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::std::string::String> {
            self.0
                .method_hash([6, 253, 222, 3], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `nonces` (0x7ecebe00) function
        pub fn nonces(
            &self,
            p0: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([126, 206, 190, 0], p0)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `owner` (0x8da5cb5b) function
        pub fn owner(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([141, 165, 203, 91], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `permit` (0xd505accf) function
        pub fn permit(
            &self,
            owner: ::ethers::core::types::Address,
            spender: ::ethers::core::types::Address,
            value: ::ethers::core::types::U256,
            deadline: ::ethers::core::types::U256,
            v: u8,
            r: [u8; 32],
            s: [u8; 32],
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash(
                    [213, 5, 172, 207],
                    (owner, spender, value, deadline, v, r, s),
                )
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `previewDeposit` (0xef8b30f7) function
        pub fn preview_deposit(
            &self,
            assets: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([239, 139, 48, 247], assets)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `previewMint` (0xb3d7f6b9) function
        pub fn preview_mint(
            &self,
            shares: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([179, 215, 246, 185], shares)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `previewRedeem` (0x4cdad506) function
        pub fn preview_redeem(
            &self,
            shares: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([76, 218, 213, 6], shares)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `previewWithdraw` (0x0a28a477) function
        pub fn preview_withdraw(
            &self,
            assets: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([10, 40, 164, 119], assets)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `redeem` (0xba087652) function
        pub fn redeem(
            &self,
            shares: ::ethers::core::types::U256,
            receiver: ::ethers::core::types::Address,
            owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([186, 8, 118, 82], (shares, receiver, owner))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `setFeeRecipient` (0xe74b981b) function
        pub fn set_fee_recipient(
            &self,
            fee_recipient: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([231, 75, 152, 27], fee_recipient)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `symbol` (0x95d89b41) function
        pub fn symbol(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::std::string::String> {
            self.0
                .method_hash([149, 216, 155, 65], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `totalAssets` (0x01e1d114) function
        pub fn total_assets(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([1, 225, 209, 20], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `totalSupply` (0x18160ddd) function
        pub fn total_supply(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([24, 22, 13, 221], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `transfer` (0xa9059cbb) function
        pub fn transfer(
            &self,
            to: ::ethers::core::types::Address,
            amount: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([169, 5, 156, 187], (to, amount))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `transferFrom` (0x23b872dd) function
        pub fn transfer_from(
            &self,
            from: ::ethers::core::types::Address,
            to: ::ethers::core::types::Address,
            amount: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([35, 184, 114, 221], (from, to, amount))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `transferOwnership` (0xf2fde38b) function
        pub fn transfer_ownership(
            &self,
            new_owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([242, 253, 227, 139], new_owner)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `withdraw` (0xb460af94) function
        pub fn withdraw(
            &self,
            assets: ::ethers::core::types::U256,
            receiver: ::ethers::core::types::Address,
            owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([180, 96, 175, 148], (assets, receiver, owner))
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `Approval` event
        pub fn approval_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            ApprovalFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `Deposit` event
        pub fn deposit_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<::std::sync::Arc<M>, M, DepositFilter> {
            self.0.event()
        }
        ///Gets the contract's `FeeRecipientUpdated` event
        pub fn fee_recipient_updated_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            FeeRecipientUpdatedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `OwnershipTransferred` event
        pub fn ownership_transferred_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            OwnershipTransferredFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `Transfer` event
        pub fn transfer_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            TransferFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `Withdraw` event
        pub fn withdraw_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            WithdrawFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            UnstoppableVaultEvents,
        > {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for UnstoppableVault<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `CallbackFailed` with signature `CallbackFailed()` and selector `0x221f6158`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "CallbackFailed", abi = "CallbackFailed()")]
    pub struct CallbackFailed;
    ///Custom Error type `InvalidAmount` with signature `InvalidAmount(uint256)` and selector `0x3728b83d`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InvalidAmount", abi = "InvalidAmount(uint256)")]
    pub struct InvalidAmount {
        pub amount: ::ethers::core::types::U256,
    }
    ///Custom Error type `InvalidBalance` with signature `InvalidBalance()` and selector `0xc52e3eff`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "InvalidBalance", abi = "InvalidBalance()")]
    pub struct InvalidBalance;
    ///Custom Error type `UnsupportedCurrency` with signature `UnsupportedCurrency()` and selector `0x2263f4e2`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "UnsupportedCurrency", abi = "UnsupportedCurrency()")]
    pub struct UnsupportedCurrency;
    ///Container type for all of the contract's custom errors
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum UnstoppableVaultErrors {
        CallbackFailed(CallbackFailed),
        InvalidAmount(InvalidAmount),
        InvalidBalance(InvalidBalance),
        UnsupportedCurrency(UnsupportedCurrency),
        /// The standard solidity revert string, with selector
        /// Error(string) -- 0x08c379a0
        RevertString(::std::string::String),
    }
    impl ::ethers::core::abi::AbiDecode for UnstoppableVaultErrors {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <::std::string::String as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::RevertString(decoded));
            }
            if let Ok(decoded)
                = <CallbackFailed as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::CallbackFailed(decoded));
            }
            if let Ok(decoded)
                = <InvalidAmount as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::InvalidAmount(decoded));
            }
            if let Ok(decoded)
                = <InvalidBalance as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::InvalidBalance(decoded));
            }
            if let Ok(decoded)
                = <UnsupportedCurrency as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::UnsupportedCurrency(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for UnstoppableVaultErrors {
        fn encode(self) -> ::std::vec::Vec<u8> {
            match self {
                Self::CallbackFailed(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::InvalidAmount(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::InvalidBalance(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::UnsupportedCurrency(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RevertString(s) => ::ethers::core::abi::AbiEncode::encode(s),
            }
        }
    }
    impl ::ethers::contract::ContractRevert for UnstoppableVaultErrors {
        fn valid_selector(selector: [u8; 4]) -> bool {
            match selector {
                [0x08, 0xc3, 0x79, 0xa0] => true,
                _ if selector
                    == <CallbackFailed as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <InvalidAmount as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <InvalidBalance as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <UnsupportedCurrency as ::ethers::contract::EthError>::selector() => {
                    true
                }
                _ => false,
            }
        }
    }
    impl ::core::fmt::Display for UnstoppableVaultErrors {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::CallbackFailed(element) => ::core::fmt::Display::fmt(element, f),
                Self::InvalidAmount(element) => ::core::fmt::Display::fmt(element, f),
                Self::InvalidBalance(element) => ::core::fmt::Display::fmt(element, f),
                Self::UnsupportedCurrency(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::RevertString(s) => ::core::fmt::Display::fmt(s, f),
            }
        }
    }
    impl ::core::convert::From<::std::string::String> for UnstoppableVaultErrors {
        fn from(value: String) -> Self {
            Self::RevertString(value)
        }
    }
    impl ::core::convert::From<CallbackFailed> for UnstoppableVaultErrors {
        fn from(value: CallbackFailed) -> Self {
            Self::CallbackFailed(value)
        }
    }
    impl ::core::convert::From<InvalidAmount> for UnstoppableVaultErrors {
        fn from(value: InvalidAmount) -> Self {
            Self::InvalidAmount(value)
        }
    }
    impl ::core::convert::From<InvalidBalance> for UnstoppableVaultErrors {
        fn from(value: InvalidBalance) -> Self {
            Self::InvalidBalance(value)
        }
    }
    impl ::core::convert::From<UnsupportedCurrency> for UnstoppableVaultErrors {
        fn from(value: UnsupportedCurrency) -> Self {
            Self::UnsupportedCurrency(value)
        }
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "Approval", abi = "Approval(address,address,uint256)")]
    pub struct ApprovalFilter {
        #[ethevent(indexed)]
        pub owner: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub spender: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "Deposit", abi = "Deposit(address,address,uint256,uint256)")]
    pub struct DepositFilter {
        #[ethevent(indexed)]
        pub caller: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub owner: ::ethers::core::types::Address,
        pub assets: ::ethers::core::types::U256,
        pub shares: ::ethers::core::types::U256,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "FeeRecipientUpdated", abi = "FeeRecipientUpdated(address)")]
    pub struct FeeRecipientUpdatedFilter {
        #[ethevent(indexed)]
        pub new_fee_recipient: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "OwnershipTransferred",
        abi = "OwnershipTransferred(address,address)"
    )]
    pub struct OwnershipTransferredFilter {
        #[ethevent(indexed)]
        pub user: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub new_owner: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "Transfer", abi = "Transfer(address,address,uint256)")]
    pub struct TransferFilter {
        #[ethevent(indexed)]
        pub from: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub to: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "Withdraw",
        abi = "Withdraw(address,address,address,uint256,uint256)"
    )]
    pub struct WithdrawFilter {
        #[ethevent(indexed)]
        pub caller: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub receiver: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub owner: ::ethers::core::types::Address,
        pub assets: ::ethers::core::types::U256,
        pub shares: ::ethers::core::types::U256,
    }
    ///Container type for all of the contract's events
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum UnstoppableVaultEvents {
        ApprovalFilter(ApprovalFilter),
        DepositFilter(DepositFilter),
        FeeRecipientUpdatedFilter(FeeRecipientUpdatedFilter),
        OwnershipTransferredFilter(OwnershipTransferredFilter),
        TransferFilter(TransferFilter),
        WithdrawFilter(WithdrawFilter),
    }
    impl ::ethers::contract::EthLogDecode for UnstoppableVaultEvents {
        fn decode_log(
            log: &::ethers::core::abi::RawLog,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::Error> {
            if let Ok(decoded) = ApprovalFilter::decode_log(log) {
                return Ok(UnstoppableVaultEvents::ApprovalFilter(decoded));
            }
            if let Ok(decoded) = DepositFilter::decode_log(log) {
                return Ok(UnstoppableVaultEvents::DepositFilter(decoded));
            }
            if let Ok(decoded) = FeeRecipientUpdatedFilter::decode_log(log) {
                return Ok(UnstoppableVaultEvents::FeeRecipientUpdatedFilter(decoded));
            }
            if let Ok(decoded) = OwnershipTransferredFilter::decode_log(log) {
                return Ok(UnstoppableVaultEvents::OwnershipTransferredFilter(decoded));
            }
            if let Ok(decoded) = TransferFilter::decode_log(log) {
                return Ok(UnstoppableVaultEvents::TransferFilter(decoded));
            }
            if let Ok(decoded) = WithdrawFilter::decode_log(log) {
                return Ok(UnstoppableVaultEvents::WithdrawFilter(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for UnstoppableVaultEvents {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::ApprovalFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::DepositFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::FeeRecipientUpdatedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::OwnershipTransferredFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::TransferFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::WithdrawFilter(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<ApprovalFilter> for UnstoppableVaultEvents {
        fn from(value: ApprovalFilter) -> Self {
            Self::ApprovalFilter(value)
        }
    }
    impl ::core::convert::From<DepositFilter> for UnstoppableVaultEvents {
        fn from(value: DepositFilter) -> Self {
            Self::DepositFilter(value)
        }
    }
    impl ::core::convert::From<FeeRecipientUpdatedFilter> for UnstoppableVaultEvents {
        fn from(value: FeeRecipientUpdatedFilter) -> Self {
            Self::FeeRecipientUpdatedFilter(value)
        }
    }
    impl ::core::convert::From<OwnershipTransferredFilter> for UnstoppableVaultEvents {
        fn from(value: OwnershipTransferredFilter) -> Self {
            Self::OwnershipTransferredFilter(value)
        }
    }
    impl ::core::convert::From<TransferFilter> for UnstoppableVaultEvents {
        fn from(value: TransferFilter) -> Self {
            Self::TransferFilter(value)
        }
    }
    impl ::core::convert::From<WithdrawFilter> for UnstoppableVaultEvents {
        fn from(value: WithdrawFilter) -> Self {
            Self::WithdrawFilter(value)
        }
    }
    ///Container type for all input parameters for the `DOMAIN_SEPARATOR` function with signature `DOMAIN_SEPARATOR()` and selector `0x3644e515`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "DOMAIN_SEPARATOR", abi = "DOMAIN_SEPARATOR()")]
    pub struct DomainSeparatorCall;
    ///Container type for all input parameters for the `FEE_FACTOR` function with signature `FEE_FACTOR()` and selector `0x5afbc4a8`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "FEE_FACTOR", abi = "FEE_FACTOR()")]
    pub struct FeeFactorCall;
    ///Container type for all input parameters for the `GRACE_PERIOD` function with signature `GRACE_PERIOD()` and selector `0xc1a287e2`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "GRACE_PERIOD", abi = "GRACE_PERIOD()")]
    pub struct GracePeriodCall;
    ///Container type for all input parameters for the `allowance` function with signature `allowance(address,address)` and selector `0xdd62ed3e`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "allowance", abi = "allowance(address,address)")]
    pub struct AllowanceCall(
        pub ::ethers::core::types::Address,
        pub ::ethers::core::types::Address,
    );
    ///Container type for all input parameters for the `approve` function with signature `approve(address,uint256)` and selector `0x095ea7b3`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "approve", abi = "approve(address,uint256)")]
    pub struct ApproveCall {
        pub spender: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `asset` function with signature `asset()` and selector `0x38d52e0f`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "asset", abi = "asset()")]
    pub struct AssetCall;
    ///Container type for all input parameters for the `balanceOf` function with signature `balanceOf(address)` and selector `0x70a08231`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "balanceOf", abi = "balanceOf(address)")]
    pub struct BalanceOfCall(pub ::ethers::core::types::Address);
    ///Container type for all input parameters for the `convertToAssets` function with signature `convertToAssets(uint256)` and selector `0x07a2d13a`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "convertToAssets", abi = "convertToAssets(uint256)")]
    pub struct ConvertToAssetsCall {
        pub shares: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `convertToShares` function with signature `convertToShares(uint256)` and selector `0xc6e6f592`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "convertToShares", abi = "convertToShares(uint256)")]
    pub struct ConvertToSharesCall {
        pub assets: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `decimals` function with signature `decimals()` and selector `0x313ce567`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "decimals", abi = "decimals()")]
    pub struct DecimalsCall;
    ///Container type for all input parameters for the `deposit` function with signature `deposit(uint256,address)` and selector `0x6e553f65`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "deposit", abi = "deposit(uint256,address)")]
    pub struct DepositCall {
        pub assets: ::ethers::core::types::U256,
        pub receiver: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `end` function with signature `end()` and selector `0xefbe1c1c`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "end", abi = "end()")]
    pub struct EndCall;
    ///Container type for all input parameters for the `feeRecipient` function with signature `feeRecipient()` and selector `0x46904840`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "feeRecipient", abi = "feeRecipient()")]
    pub struct FeeRecipientCall;
    ///Container type for all input parameters for the `flashFee` function with signature `flashFee(address,uint256)` and selector `0xd9d98ce4`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "flashFee", abi = "flashFee(address,uint256)")]
    pub struct FlashFeeCall {
        pub token: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `flashLoan` function with signature `flashLoan(address,address,uint256,bytes)` and selector `0x5cffe9de`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "flashLoan", abi = "flashLoan(address,address,uint256,bytes)")]
    pub struct FlashLoanCall {
        pub receiver: ::ethers::core::types::Address,
        pub token: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
        pub data: ::ethers::core::types::Bytes,
    }
    ///Container type for all input parameters for the `maxDeposit` function with signature `maxDeposit(address)` and selector `0x402d267d`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "maxDeposit", abi = "maxDeposit(address)")]
    pub struct MaxDepositCall(pub ::ethers::core::types::Address);
    ///Container type for all input parameters for the `maxFlashLoan` function with signature `maxFlashLoan(address)` and selector `0x613255ab`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "maxFlashLoan", abi = "maxFlashLoan(address)")]
    pub struct MaxFlashLoanCall {
        pub token: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `maxMint` function with signature `maxMint(address)` and selector `0xc63d75b6`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "maxMint", abi = "maxMint(address)")]
    pub struct MaxMintCall(pub ::ethers::core::types::Address);
    ///Container type for all input parameters for the `maxRedeem` function with signature `maxRedeem(address)` and selector `0xd905777e`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "maxRedeem", abi = "maxRedeem(address)")]
    pub struct MaxRedeemCall {
        pub owner: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `maxWithdraw` function with signature `maxWithdraw(address)` and selector `0xce96cb77`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "maxWithdraw", abi = "maxWithdraw(address)")]
    pub struct MaxWithdrawCall {
        pub owner: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `mint` function with signature `mint(uint256,address)` and selector `0x94bf804d`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "mint", abi = "mint(uint256,address)")]
    pub struct MintCall {
        pub shares: ::ethers::core::types::U256,
        pub receiver: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `name` function with signature `name()` and selector `0x06fdde03`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "name", abi = "name()")]
    pub struct NameCall;
    ///Container type for all input parameters for the `nonces` function with signature `nonces(address)` and selector `0x7ecebe00`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "nonces", abi = "nonces(address)")]
    pub struct NoncesCall(pub ::ethers::core::types::Address);
    ///Container type for all input parameters for the `owner` function with signature `owner()` and selector `0x8da5cb5b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "owner", abi = "owner()")]
    pub struct OwnerCall;
    ///Container type for all input parameters for the `permit` function with signature `permit(address,address,uint256,uint256,uint8,bytes32,bytes32)` and selector `0xd505accf`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "permit",
        abi = "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
    )]
    pub struct PermitCall {
        pub owner: ::ethers::core::types::Address,
        pub spender: ::ethers::core::types::Address,
        pub value: ::ethers::core::types::U256,
        pub deadline: ::ethers::core::types::U256,
        pub v: u8,
        pub r: [u8; 32],
        pub s: [u8; 32],
    }
    ///Container type for all input parameters for the `previewDeposit` function with signature `previewDeposit(uint256)` and selector `0xef8b30f7`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "previewDeposit", abi = "previewDeposit(uint256)")]
    pub struct PreviewDepositCall {
        pub assets: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `previewMint` function with signature `previewMint(uint256)` and selector `0xb3d7f6b9`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "previewMint", abi = "previewMint(uint256)")]
    pub struct PreviewMintCall {
        pub shares: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `previewRedeem` function with signature `previewRedeem(uint256)` and selector `0x4cdad506`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "previewRedeem", abi = "previewRedeem(uint256)")]
    pub struct PreviewRedeemCall {
        pub shares: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `previewWithdraw` function with signature `previewWithdraw(uint256)` and selector `0x0a28a477`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "previewWithdraw", abi = "previewWithdraw(uint256)")]
    pub struct PreviewWithdrawCall {
        pub assets: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `redeem` function with signature `redeem(uint256,address,address)` and selector `0xba087652`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "redeem", abi = "redeem(uint256,address,address)")]
    pub struct RedeemCall {
        pub shares: ::ethers::core::types::U256,
        pub receiver: ::ethers::core::types::Address,
        pub owner: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `setFeeRecipient` function with signature `setFeeRecipient(address)` and selector `0xe74b981b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "setFeeRecipient", abi = "setFeeRecipient(address)")]
    pub struct SetFeeRecipientCall {
        pub fee_recipient: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `symbol` function with signature `symbol()` and selector `0x95d89b41`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "symbol", abi = "symbol()")]
    pub struct SymbolCall;
    ///Container type for all input parameters for the `totalAssets` function with signature `totalAssets()` and selector `0x01e1d114`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "totalAssets", abi = "totalAssets()")]
    pub struct TotalAssetsCall;
    ///Container type for all input parameters for the `totalSupply` function with signature `totalSupply()` and selector `0x18160ddd`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "totalSupply", abi = "totalSupply()")]
    pub struct TotalSupplyCall;
    ///Container type for all input parameters for the `transfer` function with signature `transfer(address,uint256)` and selector `0xa9059cbb`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "transfer", abi = "transfer(address,uint256)")]
    pub struct TransferCall {
        pub to: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `transferFrom` function with signature `transferFrom(address,address,uint256)` and selector `0x23b872dd`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "transferFrom", abi = "transferFrom(address,address,uint256)")]
    pub struct TransferFromCall {
        pub from: ::ethers::core::types::Address,
        pub to: ::ethers::core::types::Address,
        pub amount: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `transferOwnership` function with signature `transferOwnership(address)` and selector `0xf2fde38b`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "transferOwnership", abi = "transferOwnership(address)")]
    pub struct TransferOwnershipCall {
        pub new_owner: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `withdraw` function with signature `withdraw(uint256,address,address)` and selector `0xb460af94`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "withdraw", abi = "withdraw(uint256,address,address)")]
    pub struct WithdrawCall {
        pub assets: ::ethers::core::types::U256,
        pub receiver: ::ethers::core::types::Address,
        pub owner: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum UnstoppableVaultCalls {
        DomainSeparator(DomainSeparatorCall),
        FeeFactor(FeeFactorCall),
        GracePeriod(GracePeriodCall),
        Allowance(AllowanceCall),
        Approve(ApproveCall),
        Asset(AssetCall),
        BalanceOf(BalanceOfCall),
        ConvertToAssets(ConvertToAssetsCall),
        ConvertToShares(ConvertToSharesCall),
        Decimals(DecimalsCall),
        Deposit(DepositCall),
        End(EndCall),
        FeeRecipient(FeeRecipientCall),
        FlashFee(FlashFeeCall),
        FlashLoan(FlashLoanCall),
        MaxDeposit(MaxDepositCall),
        MaxFlashLoan(MaxFlashLoanCall),
        MaxMint(MaxMintCall),
        MaxRedeem(MaxRedeemCall),
        MaxWithdraw(MaxWithdrawCall),
        Mint(MintCall),
        Name(NameCall),
        Nonces(NoncesCall),
        Owner(OwnerCall),
        Permit(PermitCall),
        PreviewDeposit(PreviewDepositCall),
        PreviewMint(PreviewMintCall),
        PreviewRedeem(PreviewRedeemCall),
        PreviewWithdraw(PreviewWithdrawCall),
        Redeem(RedeemCall),
        SetFeeRecipient(SetFeeRecipientCall),
        Symbol(SymbolCall),
        TotalAssets(TotalAssetsCall),
        TotalSupply(TotalSupplyCall),
        Transfer(TransferCall),
        TransferFrom(TransferFromCall),
        TransferOwnership(TransferOwnershipCall),
        Withdraw(WithdrawCall),
    }
    impl ::ethers::core::abi::AbiDecode for UnstoppableVaultCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <DomainSeparatorCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::DomainSeparator(decoded));
            }
            if let Ok(decoded)
                = <FeeFactorCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::FeeFactor(decoded));
            }
            if let Ok(decoded)
                = <GracePeriodCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GracePeriod(decoded));
            }
            if let Ok(decoded)
                = <AllowanceCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Allowance(decoded));
            }
            if let Ok(decoded)
                = <ApproveCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Approve(decoded));
            }
            if let Ok(decoded)
                = <AssetCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Asset(decoded));
            }
            if let Ok(decoded)
                = <BalanceOfCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::BalanceOf(decoded));
            }
            if let Ok(decoded)
                = <ConvertToAssetsCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ConvertToAssets(decoded));
            }
            if let Ok(decoded)
                = <ConvertToSharesCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ConvertToShares(decoded));
            }
            if let Ok(decoded)
                = <DecimalsCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Decimals(decoded));
            }
            if let Ok(decoded)
                = <DepositCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Deposit(decoded));
            }
            if let Ok(decoded)
                = <EndCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::End(decoded));
            }
            if let Ok(decoded)
                = <FeeRecipientCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::FeeRecipient(decoded));
            }
            if let Ok(decoded)
                = <FlashFeeCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::FlashFee(decoded));
            }
            if let Ok(decoded)
                = <FlashLoanCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::FlashLoan(decoded));
            }
            if let Ok(decoded)
                = <MaxDepositCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::MaxDeposit(decoded));
            }
            if let Ok(decoded)
                = <MaxFlashLoanCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::MaxFlashLoan(decoded));
            }
            if let Ok(decoded)
                = <MaxMintCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::MaxMint(decoded));
            }
            if let Ok(decoded)
                = <MaxRedeemCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::MaxRedeem(decoded));
            }
            if let Ok(decoded)
                = <MaxWithdrawCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::MaxWithdraw(decoded));
            }
            if let Ok(decoded)
                = <MintCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Mint(decoded));
            }
            if let Ok(decoded)
                = <NameCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Name(decoded));
            }
            if let Ok(decoded)
                = <NoncesCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Nonces(decoded));
            }
            if let Ok(decoded)
                = <OwnerCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Owner(decoded));
            }
            if let Ok(decoded)
                = <PermitCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Permit(decoded));
            }
            if let Ok(decoded)
                = <PreviewDepositCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::PreviewDeposit(decoded));
            }
            if let Ok(decoded)
                = <PreviewMintCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::PreviewMint(decoded));
            }
            if let Ok(decoded)
                = <PreviewRedeemCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::PreviewRedeem(decoded));
            }
            if let Ok(decoded)
                = <PreviewWithdrawCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::PreviewWithdraw(decoded));
            }
            if let Ok(decoded)
                = <RedeemCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Redeem(decoded));
            }
            if let Ok(decoded)
                = <SetFeeRecipientCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::SetFeeRecipient(decoded));
            }
            if let Ok(decoded)
                = <SymbolCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Symbol(decoded));
            }
            if let Ok(decoded)
                = <TotalAssetsCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::TotalAssets(decoded));
            }
            if let Ok(decoded)
                = <TotalSupplyCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::TotalSupply(decoded));
            }
            if let Ok(decoded)
                = <TransferCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Transfer(decoded));
            }
            if let Ok(decoded)
                = <TransferFromCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::TransferFrom(decoded));
            }
            if let Ok(decoded)
                = <TransferOwnershipCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::TransferOwnership(decoded));
            }
            if let Ok(decoded)
                = <WithdrawCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Withdraw(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for UnstoppableVaultCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::DomainSeparator(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::FeeFactor(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GracePeriod(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Allowance(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Approve(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Asset(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::BalanceOf(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::ConvertToAssets(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::ConvertToShares(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Decimals(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Deposit(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::End(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::FeeRecipient(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::FlashFee(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::FlashLoan(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::MaxDeposit(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::MaxFlashLoan(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::MaxMint(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::MaxRedeem(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::MaxWithdraw(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Mint(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Name(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Nonces(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Owner(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Permit(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::PreviewDeposit(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PreviewMint(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PreviewRedeem(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::PreviewWithdraw(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Redeem(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::SetFeeRecipient(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Symbol(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::TotalAssets(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::TotalSupply(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Transfer(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::TransferFrom(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::TransferOwnership(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Withdraw(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for UnstoppableVaultCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::DomainSeparator(element) => ::core::fmt::Display::fmt(element, f),
                Self::FeeFactor(element) => ::core::fmt::Display::fmt(element, f),
                Self::GracePeriod(element) => ::core::fmt::Display::fmt(element, f),
                Self::Allowance(element) => ::core::fmt::Display::fmt(element, f),
                Self::Approve(element) => ::core::fmt::Display::fmt(element, f),
                Self::Asset(element) => ::core::fmt::Display::fmt(element, f),
                Self::BalanceOf(element) => ::core::fmt::Display::fmt(element, f),
                Self::ConvertToAssets(element) => ::core::fmt::Display::fmt(element, f),
                Self::ConvertToShares(element) => ::core::fmt::Display::fmt(element, f),
                Self::Decimals(element) => ::core::fmt::Display::fmt(element, f),
                Self::Deposit(element) => ::core::fmt::Display::fmt(element, f),
                Self::End(element) => ::core::fmt::Display::fmt(element, f),
                Self::FeeRecipient(element) => ::core::fmt::Display::fmt(element, f),
                Self::FlashFee(element) => ::core::fmt::Display::fmt(element, f),
                Self::FlashLoan(element) => ::core::fmt::Display::fmt(element, f),
                Self::MaxDeposit(element) => ::core::fmt::Display::fmt(element, f),
                Self::MaxFlashLoan(element) => ::core::fmt::Display::fmt(element, f),
                Self::MaxMint(element) => ::core::fmt::Display::fmt(element, f),
                Self::MaxRedeem(element) => ::core::fmt::Display::fmt(element, f),
                Self::MaxWithdraw(element) => ::core::fmt::Display::fmt(element, f),
                Self::Mint(element) => ::core::fmt::Display::fmt(element, f),
                Self::Name(element) => ::core::fmt::Display::fmt(element, f),
                Self::Nonces(element) => ::core::fmt::Display::fmt(element, f),
                Self::Owner(element) => ::core::fmt::Display::fmt(element, f),
                Self::Permit(element) => ::core::fmt::Display::fmt(element, f),
                Self::PreviewDeposit(element) => ::core::fmt::Display::fmt(element, f),
                Self::PreviewMint(element) => ::core::fmt::Display::fmt(element, f),
                Self::PreviewRedeem(element) => ::core::fmt::Display::fmt(element, f),
                Self::PreviewWithdraw(element) => ::core::fmt::Display::fmt(element, f),
                Self::Redeem(element) => ::core::fmt::Display::fmt(element, f),
                Self::SetFeeRecipient(element) => ::core::fmt::Display::fmt(element, f),
                Self::Symbol(element) => ::core::fmt::Display::fmt(element, f),
                Self::TotalAssets(element) => ::core::fmt::Display::fmt(element, f),
                Self::TotalSupply(element) => ::core::fmt::Display::fmt(element, f),
                Self::Transfer(element) => ::core::fmt::Display::fmt(element, f),
                Self::TransferFrom(element) => ::core::fmt::Display::fmt(element, f),
                Self::TransferOwnership(element) => ::core::fmt::Display::fmt(element, f),
                Self::Withdraw(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<DomainSeparatorCall> for UnstoppableVaultCalls {
        fn from(value: DomainSeparatorCall) -> Self {
            Self::DomainSeparator(value)
        }
    }
    impl ::core::convert::From<FeeFactorCall> for UnstoppableVaultCalls {
        fn from(value: FeeFactorCall) -> Self {
            Self::FeeFactor(value)
        }
    }
    impl ::core::convert::From<GracePeriodCall> for UnstoppableVaultCalls {
        fn from(value: GracePeriodCall) -> Self {
            Self::GracePeriod(value)
        }
    }
    impl ::core::convert::From<AllowanceCall> for UnstoppableVaultCalls {
        fn from(value: AllowanceCall) -> Self {
            Self::Allowance(value)
        }
    }
    impl ::core::convert::From<ApproveCall> for UnstoppableVaultCalls {
        fn from(value: ApproveCall) -> Self {
            Self::Approve(value)
        }
    }
    impl ::core::convert::From<AssetCall> for UnstoppableVaultCalls {
        fn from(value: AssetCall) -> Self {
            Self::Asset(value)
        }
    }
    impl ::core::convert::From<BalanceOfCall> for UnstoppableVaultCalls {
        fn from(value: BalanceOfCall) -> Self {
            Self::BalanceOf(value)
        }
    }
    impl ::core::convert::From<ConvertToAssetsCall> for UnstoppableVaultCalls {
        fn from(value: ConvertToAssetsCall) -> Self {
            Self::ConvertToAssets(value)
        }
    }
    impl ::core::convert::From<ConvertToSharesCall> for UnstoppableVaultCalls {
        fn from(value: ConvertToSharesCall) -> Self {
            Self::ConvertToShares(value)
        }
    }
    impl ::core::convert::From<DecimalsCall> for UnstoppableVaultCalls {
        fn from(value: DecimalsCall) -> Self {
            Self::Decimals(value)
        }
    }
    impl ::core::convert::From<DepositCall> for UnstoppableVaultCalls {
        fn from(value: DepositCall) -> Self {
            Self::Deposit(value)
        }
    }
    impl ::core::convert::From<EndCall> for UnstoppableVaultCalls {
        fn from(value: EndCall) -> Self {
            Self::End(value)
        }
    }
    impl ::core::convert::From<FeeRecipientCall> for UnstoppableVaultCalls {
        fn from(value: FeeRecipientCall) -> Self {
            Self::FeeRecipient(value)
        }
    }
    impl ::core::convert::From<FlashFeeCall> for UnstoppableVaultCalls {
        fn from(value: FlashFeeCall) -> Self {
            Self::FlashFee(value)
        }
    }
    impl ::core::convert::From<FlashLoanCall> for UnstoppableVaultCalls {
        fn from(value: FlashLoanCall) -> Self {
            Self::FlashLoan(value)
        }
    }
    impl ::core::convert::From<MaxDepositCall> for UnstoppableVaultCalls {
        fn from(value: MaxDepositCall) -> Self {
            Self::MaxDeposit(value)
        }
    }
    impl ::core::convert::From<MaxFlashLoanCall> for UnstoppableVaultCalls {
        fn from(value: MaxFlashLoanCall) -> Self {
            Self::MaxFlashLoan(value)
        }
    }
    impl ::core::convert::From<MaxMintCall> for UnstoppableVaultCalls {
        fn from(value: MaxMintCall) -> Self {
            Self::MaxMint(value)
        }
    }
    impl ::core::convert::From<MaxRedeemCall> for UnstoppableVaultCalls {
        fn from(value: MaxRedeemCall) -> Self {
            Self::MaxRedeem(value)
        }
    }
    impl ::core::convert::From<MaxWithdrawCall> for UnstoppableVaultCalls {
        fn from(value: MaxWithdrawCall) -> Self {
            Self::MaxWithdraw(value)
        }
    }
    impl ::core::convert::From<MintCall> for UnstoppableVaultCalls {
        fn from(value: MintCall) -> Self {
            Self::Mint(value)
        }
    }
    impl ::core::convert::From<NameCall> for UnstoppableVaultCalls {
        fn from(value: NameCall) -> Self {
            Self::Name(value)
        }
    }
    impl ::core::convert::From<NoncesCall> for UnstoppableVaultCalls {
        fn from(value: NoncesCall) -> Self {
            Self::Nonces(value)
        }
    }
    impl ::core::convert::From<OwnerCall> for UnstoppableVaultCalls {
        fn from(value: OwnerCall) -> Self {
            Self::Owner(value)
        }
    }
    impl ::core::convert::From<PermitCall> for UnstoppableVaultCalls {
        fn from(value: PermitCall) -> Self {
            Self::Permit(value)
        }
    }
    impl ::core::convert::From<PreviewDepositCall> for UnstoppableVaultCalls {
        fn from(value: PreviewDepositCall) -> Self {
            Self::PreviewDeposit(value)
        }
    }
    impl ::core::convert::From<PreviewMintCall> for UnstoppableVaultCalls {
        fn from(value: PreviewMintCall) -> Self {
            Self::PreviewMint(value)
        }
    }
    impl ::core::convert::From<PreviewRedeemCall> for UnstoppableVaultCalls {
        fn from(value: PreviewRedeemCall) -> Self {
            Self::PreviewRedeem(value)
        }
    }
    impl ::core::convert::From<PreviewWithdrawCall> for UnstoppableVaultCalls {
        fn from(value: PreviewWithdrawCall) -> Self {
            Self::PreviewWithdraw(value)
        }
    }
    impl ::core::convert::From<RedeemCall> for UnstoppableVaultCalls {
        fn from(value: RedeemCall) -> Self {
            Self::Redeem(value)
        }
    }
    impl ::core::convert::From<SetFeeRecipientCall> for UnstoppableVaultCalls {
        fn from(value: SetFeeRecipientCall) -> Self {
            Self::SetFeeRecipient(value)
        }
    }
    impl ::core::convert::From<SymbolCall> for UnstoppableVaultCalls {
        fn from(value: SymbolCall) -> Self {
            Self::Symbol(value)
        }
    }
    impl ::core::convert::From<TotalAssetsCall> for UnstoppableVaultCalls {
        fn from(value: TotalAssetsCall) -> Self {
            Self::TotalAssets(value)
        }
    }
    impl ::core::convert::From<TotalSupplyCall> for UnstoppableVaultCalls {
        fn from(value: TotalSupplyCall) -> Self {
            Self::TotalSupply(value)
        }
    }
    impl ::core::convert::From<TransferCall> for UnstoppableVaultCalls {
        fn from(value: TransferCall) -> Self {
            Self::Transfer(value)
        }
    }
    impl ::core::convert::From<TransferFromCall> for UnstoppableVaultCalls {
        fn from(value: TransferFromCall) -> Self {
            Self::TransferFrom(value)
        }
    }
    impl ::core::convert::From<TransferOwnershipCall> for UnstoppableVaultCalls {
        fn from(value: TransferOwnershipCall) -> Self {
            Self::TransferOwnership(value)
        }
    }
    impl ::core::convert::From<WithdrawCall> for UnstoppableVaultCalls {
        fn from(value: WithdrawCall) -> Self {
            Self::Withdraw(value)
        }
    }
    ///Container type for all return fields from the `DOMAIN_SEPARATOR` function with signature `DOMAIN_SEPARATOR()` and selector `0x3644e515`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct DomainSeparatorReturn(pub [u8; 32]);
    ///Container type for all return fields from the `FEE_FACTOR` function with signature `FEE_FACTOR()` and selector `0x5afbc4a8`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct FeeFactorReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `GRACE_PERIOD` function with signature `GRACE_PERIOD()` and selector `0xc1a287e2`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GracePeriodReturn(pub u64);
    ///Container type for all return fields from the `allowance` function with signature `allowance(address,address)` and selector `0xdd62ed3e`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct AllowanceReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `approve` function with signature `approve(address,uint256)` and selector `0x095ea7b3`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ApproveReturn(pub bool);
    ///Container type for all return fields from the `asset` function with signature `asset()` and selector `0x38d52e0f`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct AssetReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `balanceOf` function with signature `balanceOf(address)` and selector `0x70a08231`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct BalanceOfReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `convertToAssets` function with signature `convertToAssets(uint256)` and selector `0x07a2d13a`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ConvertToAssetsReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `convertToShares` function with signature `convertToShares(uint256)` and selector `0xc6e6f592`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ConvertToSharesReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `decimals` function with signature `decimals()` and selector `0x313ce567`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct DecimalsReturn(pub u8);
    ///Container type for all return fields from the `deposit` function with signature `deposit(uint256,address)` and selector `0x6e553f65`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct DepositReturn {
        pub shares: ::ethers::core::types::U256,
    }
    ///Container type for all return fields from the `end` function with signature `end()` and selector `0xefbe1c1c`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct EndReturn(pub u64);
    ///Container type for all return fields from the `feeRecipient` function with signature `feeRecipient()` and selector `0x46904840`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct FeeRecipientReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `flashFee` function with signature `flashFee(address,uint256)` and selector `0xd9d98ce4`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct FlashFeeReturn {
        pub fee: ::ethers::core::types::U256,
    }
    ///Container type for all return fields from the `flashLoan` function with signature `flashLoan(address,address,uint256,bytes)` and selector `0x5cffe9de`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct FlashLoanReturn(pub bool);
    ///Container type for all return fields from the `maxDeposit` function with signature `maxDeposit(address)` and selector `0x402d267d`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct MaxDepositReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `maxFlashLoan` function with signature `maxFlashLoan(address)` and selector `0x613255ab`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct MaxFlashLoanReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `maxMint` function with signature `maxMint(address)` and selector `0xc63d75b6`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct MaxMintReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `maxRedeem` function with signature `maxRedeem(address)` and selector `0xd905777e`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct MaxRedeemReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `maxWithdraw` function with signature `maxWithdraw(address)` and selector `0xce96cb77`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct MaxWithdrawReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `mint` function with signature `mint(uint256,address)` and selector `0x94bf804d`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct MintReturn {
        pub assets: ::ethers::core::types::U256,
    }
    ///Container type for all return fields from the `name` function with signature `name()` and selector `0x06fdde03`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct NameReturn(pub ::std::string::String);
    ///Container type for all return fields from the `nonces` function with signature `nonces(address)` and selector `0x7ecebe00`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct NoncesReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `owner` function with signature `owner()` and selector `0x8da5cb5b`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct OwnerReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `previewDeposit` function with signature `previewDeposit(uint256)` and selector `0xef8b30f7`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct PreviewDepositReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `previewMint` function with signature `previewMint(uint256)` and selector `0xb3d7f6b9`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct PreviewMintReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `previewRedeem` function with signature `previewRedeem(uint256)` and selector `0x4cdad506`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct PreviewRedeemReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `previewWithdraw` function with signature `previewWithdraw(uint256)` and selector `0x0a28a477`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct PreviewWithdrawReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `redeem` function with signature `redeem(uint256,address,address)` and selector `0xba087652`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct RedeemReturn {
        pub assets: ::ethers::core::types::U256,
    }
    ///Container type for all return fields from the `symbol` function with signature `symbol()` and selector `0x95d89b41`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct SymbolReturn(pub ::std::string::String);
    ///Container type for all return fields from the `totalAssets` function with signature `totalAssets()` and selector `0x01e1d114`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TotalAssetsReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `totalSupply` function with signature `totalSupply()` and selector `0x18160ddd`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TotalSupplyReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `transfer` function with signature `transfer(address,uint256)` and selector `0xa9059cbb`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TransferReturn(pub bool);
    ///Container type for all return fields from the `transferFrom` function with signature `transferFrom(address,address,uint256)` and selector `0x23b872dd`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TransferFromReturn(pub bool);
    ///Container type for all return fields from the `withdraw` function with signature `withdraw(uint256,address,address)` and selector `0xb460af94`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct WithdrawReturn {
        pub shares: ::ethers::core::types::U256,
    }
}
